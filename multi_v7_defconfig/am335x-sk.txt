- 01:27:48 [INFO] Starting target session
- 01:27:48 [INFO] Connected to am335x-sk via serial 
- 01:27:48 [INFO] Host: #check prompt
- 01:27:51 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:.*\s+login)|[Pp]assword)) >>> error: execution expired
- 01:27:51 [INFO] Target: 
- 01:27:51 [INFO] Host: #check prompt
- 01:27:53 [ERROR] On command: #check prompt waiting for #check prompt.+?(?m-ix:root@am335x-evm.*#) >>> error: execution expired
- 01:27:53 [INFO] Target: 
- 01:27:53 [INFO] Host: #check prompt
- 01:27:55 [ERROR] On command: #check prompt waiting for #check prompt.+?(?m-ix:root@am335x-evm.*#) >>> error: execution expired
- 01:27:55 [INFO] Target: 
- 01:27:55 [INFO] Host: #check prompt
- 01:27:57 [ERROR] On command: #check prompt waiting for #check prompt.+?(?m-ix:root@am335x-evm.*#) >>> error: execution expired
- 01:27:57 [INFO] Target: 
- 01:27:57 [INFO] Disconnected serial from am335x-sk
- 01:28:03 [INFO] Connected to am335x-sk via serial 
- 01:28:03 [INFO] Host: 
- 01:28:05 [INFO] Target: 
U-Boot SPL 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46)
Trying to boot from MMC1
reading args
spl_load_image_fat_os: error reading image args, err - -1
reading u-boot.img
reading u-boot.img
reading u-boot.img
FIT: Selected 'am335x-evmsk'
reading u-boot.img
U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500), Build: jenkins-ti-uboot-compile-test-111
       Watchdog enabled
I2C:   ready
DRAM:  256 MiB
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
** Unable to read "uboot.env" from mmc0:1 **
Using default environment
<ethaddr> not set. Validating first E-fuse MAC
Net:   eth0: ethernet@4a100000
Warning: usb_ether MAC addresses don't match:
Address in SROM is         de:ad:be:ef:00:01
Address in environment is  c8:a0:30:a1:db:63
, eth1: usb_ether
Press SPACE to abort autoboot in 2 seconds
=>  
=>  
=>  
=>  
=>  
- 01:28:05 [INFO] Host: 
- 01:28:05 [INFO] Target: 
=>  
- 01:28:05 [INFO] Host: version
- 01:28:05 [INFO] Target: 
version
U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 01:28:05 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 01:28:05 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 01:28:05 [INFO] Host: setenv bootcmd  ''
- 01:28:06 [INFO] Target: 
setenv bootcmd  ''
- 01:28:06 [INFO] Host: setenv autoload 'no'
- 01:28:06 [INFO] Target: 
setenv autoload 'no'
- 01:28:06 [INFO] Host: setenv serverip '192.168.1.254'
- 01:28:06 [INFO] Target: 
setenv serverip '192.168.1.254'
- 01:28:06 [INFO] Host: setenv _initramfs -
- 01:28:06 [INFO] Target: 
setenv _initramfs -
- 01:28:06 [INFO] Host: printenv
- 01:28:07 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 8225/131068 bytes
- 01:28:07 [INFO] Host: printenv
- 01:28:07 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 8225/131068 bytes
- 01:28:07 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 01:28:08 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 01:28:08 [INFO] Host: setenv serverip '192.168.1.254'
- 01:28:08 [INFO] Target: 
setenv serverip '192.168.1.254'
- 01:28:08 [INFO] Host: setenv autoload 'no'
- 01:28:08 [INFO] Target: 
setenv autoload 'no'
- 01:28:08 [INFO] Host: dhcp
- 01:28:09 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
DHCP client bound to address 192.168.1.195 (1031 ms)
- 01:28:09 [INFO] Host: tftp ${loadaddr} 192.168.1.254:vatf_am335x-sk/828180790532065515545c406457c492
- 01:28:10 [INFO] Target: 
tftp ${loadaddr} 192.168.1.254:vatf_am335x-sk/828180790532065515545c406457c492
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.1.254; our IP address is 192.168.1.195
Filename 'vatf_am335x-sk/828180790532065515545c406457c492'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #######################
	 7.8 MiB/s
done
Bytes transferred = 7015776 (6b0d60 hex)
- 01:28:10 [INFO] Host: tftp ${fdt_addr_r} 192.168.1.254:vatf_am335x-sk/92b8ca5a9b06feef4d42637d884d0159
- 01:28:10 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.1.254:vatf_am335x-sk/92b8ca5a9b06feef4d42637d884d0159
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.1.254; our IP address is 192.168.1.195
Filename 'vatf_am335x-sk/92b8ca5a9b06feef4d42637d884d0159'.
Load address: 0x88000000
Loading: *###
	 4.4 MiB/s
done
Bytes transferred = 37325 (91cd hex)
- 01:28:10 [INFO] Host: ls mmc 0:1
- 01:28:10 [INFO] Target: 
ls mmc 0:1
    77088   mlo 
   638800   u-boot.img 
       53   pointercal 
        1   .ipaddr 
        4   ws-calibrate.rules 
5 file(s), 0 dir(s)
- 01:28:10 [INFO] Host: ls mmc 0:2
- 01:28:10 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<SYM>          8 tmp
<DIR>       4096 srv
<DIR>       4096 var
<DIR>       4096 lib
<DIR>       4096 proc
<SYM>          8 run
<DIR>       4096 mnt
<DIR>       4096 media
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 bin
<DIR>       4096 usr
<DIR>       4096 www
<DIR>       4096 etc
<DIR>       4096 sbin
<DIR>       4096 opt
<DIR>       4096 home
<DIR>       4096 sys
<DIR>       4096 Settings
<DIR>       4096 test
- 01:28:10 [INFO] Host: part uuid mmc 0:2
- 01:28:10 [INFO] Target: 
part uuid mmc 0:2
00000000-02
- 01:28:10 [INFO] Host: printenv
- 01:28:11 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
dnsip=192.0.2.2
dnsip2=192.0.2.3
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethact=ethernet@4a100000
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
fileaddr=88000000
filesize=91cd
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.1.254
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.1.195
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 8417/131068 bytes
- 01:28:11 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 01:28:11 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 01:28:11 [INFO] Host: printenv
- 01:28:12 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
dnsip=192.0.2.2
dnsip2=192.0.2.3
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethact=ethernet@4a100000
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
fileaddr=88000000
filesize=91cd
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.1.254
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.1.195
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 8472/131068 bytes
- 01:28:12 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 01:28:12 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 01:28:12 [INFO] Host: version
- 01:28:12 [INFO] Target: 
version
U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 01:28:12 [INFO] Host: bdinfo
- 01:28:12 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8FF56000
reloc off   = 0x0F756000
irq_sp      = 0x8EF2C2E0
sp start    = 0x8EF2C2D0
- 01:28:12 [INFO] Host: mmc rescan; echo $?
- 01:28:12 [INFO] Target: 
mmc rescan; echo $?
- 01:28:12 [INFO] Host: fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
- 01:28:13 [INFO] Target: 
fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
- 01:28:13 [INFO] Host: boot
- 01:31:39 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x6b0d60 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8ef1e000, end 8ef2a1cc ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.6.0-next-20160517-00002-gd15169d743b1 (nmenon@horus) (gcc version 4.9.3 20150413 (prerelease) (Linaro GCC 4.9-2015.05) ) #1 SMP Tue May 17 01:21:29 CDT 2016
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM-SK
[    0.000000] cma: Reserved 64 MiB at 0x8a800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES2.1 (sgx neon )
[    0.000000] percpu: Embedded 13 pages/cpu @cfba1000 s23744 r8192 d21312 u53248
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 64512
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 1024 (order: 0, 4096 bytes)
[    0.000000] Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
[    0.000000] Memory: 174068K/260096K available (9470K kernel code, 1082K rwdata, 4300K rodata, 2048K init, 343K bss, 20492K reserved, 65536K cma-reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)
[    0.000000]     vmalloc : 0xd0800000 - 0xff800000   ( 752 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc10729c8   (14763 kB)
[    0.000000]       .init : 0xc1100000 - 0xc1300000   (2048 kB)
[    0.000000]       .data : 0xc1300000 - 0xc140e9e0   (1083 kB)
[    0.000000]        .bss : 0xc1410000 - 0xc1465c20   ( 344 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	Build-time adjustment of leaf fanout to 32.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=16 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000014] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000033] clocksource: timer1: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000043] OMAP clocksource: timer1 at 24000000 Hz
[    0.000222] Console: colour dummy device 80x30
[    0.000260] Calibrating delay loop... 997.78 BogoMIPS (lpj=2494464)
[    0.059218] pid_max: default: 32768 minimum: 301
[    0.059342] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.059353] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.060054] CPU: Testing write buffer coherency: ok
[    0.060418] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.060477] Setting up static identity map for 0x80300000 - 0x80300098
[    0.063855] Brought up 1 CPUs
[    0.063875] SMP: Total of 1 processors activated (997.78 BogoMIPS).
[    0.063882] CPU: All CPU(s) started in SVC mode.
[    0.065274] devtmpfs: initialized
[    0.075404] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.076163] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 9556302231375000 ns
[    0.080360] pinctrl core: initialized pinctrl subsystem
[    0.082576] NET: Registered protocol family 16
[    0.084819] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.104520] omap_hwmod: debugss: _wait_target_disable failed
[    0.160417] cpuidle: using governor menu
[    0.166245] OMAP GPIO hardware version 0.1
[    0.178978] No ATAGs?
[    0.179003] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.179531] omap4_sram_init:Unable to allocate sram needed to handle errata I688
[    0.179545] omap4_sram_init:Unable to get sram pool needed to handle errata I688
[    0.183376] Serial: AMBA PL011 UART driver
[    0.203446] edma 49000000.edma: TI EDMA DMA engine driver
[    0.204477] reg-fixed-voltage fixedregulator@2: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_wl12xx_gpio, deferring probe
[    0.207695] vgaarb: loaded
[    0.208632] SCSI subsystem initialized
[    0.209378] usbcore: registered new interface driver usbfs
[    0.209447] usbcore: registered new interface driver hub
[    0.209509] usbcore: registered new device driver usb
[    0.210250] omap_i2c 44e0b000.i2c: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_i2c0_pins, deferring probe
[    0.210911] pps_core: LinuxPPS API ver. 1 registered
[    0.210919] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.210948] PTP clock support registered
[    0.211118] EDAC MC: Ver: 3.0.0
[    0.213927] clocksource: Switched to clocksource timer1
[    0.224394] NET: Registered protocol family 2
[    0.225074] TCP established hash table entries: 2048 (order: 1, 8192 bytes)
[    0.225109] TCP bind hash table entries: 2048 (order: 2, 16384 bytes)
[    0.225143] TCP: Hash tables configured (established 2048 bind 2048)
[    0.225219] UDP hash table entries: 256 (order: 1, 8192 bytes)
[    0.225240] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)
[    0.225387] NET: Registered protocol family 1
[    0.225803] RPC: Registered named UNIX socket transport module.
[    0.225817] RPC: Registered udp transport module.
[    0.225823] RPC: Registered tcp transport module.
[    0.225829] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.226893] hw perfevents: enabled with armv7_cortex_a8 PMU driver, 5 counters available
[    0.228743] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.229860] workingset: timestamp_bits=28 max_order=16 bucket_order=0
[    0.240741] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.241819] NFS: Registering the id_resolver key type
[    0.241889] Key type id_resolver registered
[    0.241897] Key type id_legacy registered
[    0.241941] ntfs: driver 2.1.32 [Flags: R/O].
[    0.243684] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 248)
[    0.243703] io scheduler noop registered
[    0.243710] io scheduler deadline registered
[    0.243743] io scheduler cfq registered (default)
[    0.248458] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.255731] backlight supply power not found, using dummy regulator
[    0.317495] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.320691] SuperH (H)SCI(F) driver initialized
[    0.321500] msm_serial: driver initialized
[    0.321823] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.322017] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 158, base_baud = 3000000) is a OMAP UART0
[    0.993196] console [ttyO0] enabled
[    0.997383] STMicroelectronics ASC driver initialized
[    1.004907] omap_rng 48310000.rng: OMAP Random Number Generator ver. 20
[    1.013127] [drm] Initialized drm 1.1.0 20060810
[    1.033734] brd: module loaded
[    1.043512] loop: module loaded
[    1.054643] libphy: Fixed MDIO Bus: probed
[    1.059805] CAN device driver interface
[    1.065420] igb: Intel(R) Gigabit Ethernet Network Driver - version 5.3.0-k
[    1.072773] igb: Copyright (c) 2007-2014 Intel Corporation.
[    1.134017] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.140465] davinci_mdio 4a101000.mdio: detected phy mask fffffffc
[    1.148566] libphy: 4a101000.mdio: probed
[    1.152878] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    1.162575] davinci_mdio 4a101000.mdio: phy[1]: device 4a101000.mdio:01, driver Atheros 8031 ethernet
[    1.174329] cpsw 4a100000.ethernet: Detected MACID = c8:a0:30:a1:db:61
[    1.182251] cpsw 4a100000.ethernet: cpsw: Detected MACID = c8:a0:30:a1:db:63
[    1.190816] pegasus: v0.9.3 (2013/04/25), Pegasus/Pegasus II USB Ethernet driver
[    1.198752] usbcore: registered new interface driver pegasus
[    1.204788] usbcore: registered new interface driver asix
[    1.210515] usbcore: registered new interface driver ax88179_178a
[    1.216967] usbcore: registered new interface driver cdc_ether
[    1.223163] usbcore: registered new interface driver smsc75xx
[    1.229270] usbcore: registered new interface driver smsc95xx
[    1.235364] usbcore: registered new interface driver net1080
[    1.241364] usbcore: registered new interface driver cdc_subset
[    1.247635] usbcore: registered new interface driver zaurus
[    1.253592] usbcore: registered new interface driver cdc_ncm
[    1.261447] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.268372] ehci-pci: EHCI PCI platform driver
[    1.273112] ehci-platform: EHCI generic platform driver
[    1.278852] ehci-omap: OMAP-EHCI Host Controller driver
[    1.284528] ehci-orion: EHCI orion driver
[    1.288877] SPEAr-ehci: EHCI SPEAr driver
[    1.293255] ehci-st: EHCI STMicroelectronics driver
[    1.298537] ehci-exynos: EHCI EXYNOS driver
[    1.303097] ehci-atmel: EHCI Atmel driver
[    1.307455] tegra-ehci: Tegra EHCI driver
[    1.311835] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.318381] ohci-pci: OHCI PCI platform driver
[    1.323129] ohci-platform: OHCI generic platform driver
[    1.328813] ohci-omap3: OHCI OMAP3 driver
[    1.333192] SPEAr-ohci: OHCI SPEAr driver
[    1.337560] ohci-st: OHCI STMicroelectronics driver
[    1.342829] ohci-atmel: OHCI Atmel driver
[    1.347726] usbcore: registered new interface driver usb-storage
[    1.355719] mousedev: PS/2 mouse device common for all mice
[    1.365413] i2c /dev entries driver
[    1.379093] sdhci: Secure Digital Host Controller Interface driver
[    1.385618] sdhci: Copyright(c) Pierre Ossman
[    1.391259] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.398080] Synopsys Designware Multimedia Card Interface Driver
[    1.405470] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.414308] ledtrig-cpu: registered to indicate activity on CPUs
[    1.421288] usbcore: registered new interface driver usbhid
[    1.427187] usbhid: USB HID core driver
[    1.436716] NET: Registered protocol family 10
[    1.442805] sit: IPv6 over IPv4 tunneling driver
[    1.448535] NET: Registered protocol family 17
[    1.453264] can: controller area network core (rev 20120528 abi 9)
[    1.459858] NET: Registered protocol family 29
[    1.464543] can: raw protocol (rev 20120528)
[    1.469035] can: broadcast manager protocol (rev 20120528 t)
[    1.474988] can: netlink gateway (rev 20130117) max_hops=1
[    1.481434] Key type dns_resolver registered
[    1.486250] omap_voltage_late_init: Voltage driver support not added
[    1.493123] ThumbEE CPU extension supported.
[    1.497644] Registering SWP/SWPB emulation handler
[    1.524133] tps65910 0-002d: No interrupt support, no core IRQ
[    1.532382] vrtc: supplied by vbat
[    1.539817] vio: supplied by vbat
[    1.544825] vdd1: supplied by vbat
[    1.548920] vdd_mpu: Bringing 1325000uV into 1312500-1312500uV
[    1.556522] vdd2: supplied by vbat
[    1.563470] vdig1: supplied by vbat
[    1.568571] vdig2: supplied by vbat
[    1.573662] vpll: supplied by vbat
[    1.578656] vdac: supplied by vbat
[    1.583655] vaux1: supplied by vbat
[    1.588745] vaux2: supplied by vbat
[    1.593816] vaux33: supplied by vbat
[    1.599023] vmmc: supplied by vbat
[    1.604020] vbb: supplied by vbat
[    1.610231] tps65910-rtc tps65910-rtc: IRQ is not free.
[    1.615781] tps65910-rtc: probe of tps65910-rtc failed with error -22
[    1.624233] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.631089] backlight supply power not found, using dummy regulator
[    1.641284] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.706279] mmc0: host does not support reading read-only switch, assuming write-enable
[    1.716625] mmc0: new high speed SDHC card at address 0007
[    1.723063] mmcblk0: mmc0:0007 SD8GB 7.42 GiB 
[    1.729504]  mmcblk0: p1 p2
[    1.779986] backlight supply power not found, using dummy regulator
[    1.790036] input: gpio_buttons@0 as /devices/platform/gpio_buttons@0/input/input0
[    1.799635] hctosys: unable to open rtc device (rtc0)
[    1.809844] net eth0: initializing cpsw version 1.12 (0)
[    1.820153] backlight supply power not found, using dummy regulator
[    1.830263] omap_hsmmc 481d8000.mmc: card claims to support voltages below defined range
[    1.850120] mmc1: new SDIO card at address 0001
[    1.879835] Atheros 8031 ethernet 4a101000.mdio:00: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:00, irq=-1)
[    1.898209] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[    5.879815] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[    5.888120] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    5.898942] Sending DHCP requests .....
[   40.953939] random: nonblocking pool is initialized
[   43.858720] DHCP/BOOTP: Reply not for us, op[2] xid[56342312]
[   54.448906] . timed out!
[   84.454222] IP-Config: Reopening network devices...
[   84.459422] net eth0: initializing cpsw version 1.12 (0)
[   84.529799] Atheros 8031 ethernet 4a101000.mdio:00: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:00, irq=-1)
[   84.546484] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[   88.529843] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[   88.538131] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[   88.550418] Sending DHCP requests ...... timed out!
[  179.649181] IP-Config: Auto-configuration of network failed
[  179.655191] lis3_reg: disabling
[  179.658488] vwl1271: disabling
[  182.660913] EXT4-fs (mmcblk0p2): recovery complete
[  182.677774] EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Opts: (null)
[  182.686359] VFS: Mounted root (ext4 filesystem) on device 179:2.
[  182.705406] devtmpfs: mounted
[  182.711242] Freeing unused kernel memory: 2048K (c1100000 - c1300000)
INIT: version 2.88 booting
Error opening /dev/fb0: No such file or directory
Starting udev
[  183.433549] udevd[102]: starting version 182
[  186.785366] FAT-fs (mmcblk0p1): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.
ERROR: could not open directory /lib/modules/4.6.0-next-20160517-00002-gd15169d743b1: No such file or directory
WARNING: -e needs -E or -F
ERROR: could not open directory /lib/modules/4.6.0-next-20160517-00002-gd15169d743b1: No such file or directory
FATAL: could not search modules: No such file or directory
Starting Bootlog daemon: bootlogd.
[  187.974622] EXT4-fs (mmcblk0p2): re-mounted. Opts: data=ordered
ALSA: Restoring mixer settings...
Configuring network interfaces... /usr/sbin/alsactl: load_state:1696: No soundcards found...
[  188.820362] net eth0: initializing cpsw version 1.12 (0)
[  188.889840] Atheros 8031 ethernet 4a101000.mdio:00: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:00, irq=-1)
[  188.906621] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
udhcpc (v1.20.2) started
Sending discover...
Sending discover...
[  192.904854] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[  192.913190] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
Sending discover...
No lease, failing
done.
hwclock: can't open '/dev/misc/rtc': No such file or directory
Sat Jan  9 11:05:00 UTC 2016
hwclock: can't open '/dev/misc/rtc': No such file or directory
INIT: Entering runlevel: 5
Starting system message bus: dbus.
UIM SYSFS Node Not Found
Starting Dropbear SSH server: dropbear.
Starting telnet daemon.
hwclock: can't open '/dev/misc/rtc': No such file or directory
Starting syslogd/klogd: done
Starting thttpd.
Starting Lighttpd Web Server: lighttpd.
2016-01-09 11:05:01: (log.c.166) server started 
Starting Matrix GUI application.
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils-symlinks
	binutils
	gdbserver
If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above
NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Stopping Bootlog daemon: bootlogd.
 _____                    _____           _         _   
|  _  |___ ___ ___ ___   |  _  |___ ___  |_|___ ___| |_ 
|     |  _| .'| . | . |  |   __|  _| . | | | -_|  _|  _|
|__|__|_| |__,|_  |___|  |__|  |_| |___|_| |___|___|_|  
              |___|                    |___|            
Arago Project http://arago-project.org am335x-evm ttyO0
Arago 2013.12 am335x-evm ttyO0
am335x-evm login: 
- 01:31:39 [INFO] Host: root
- 01:31:39 [INFO] Target: 
root
root@am335x-evm:~# 
- 01:31:39 [INFO] Disconnected serial from am335x-sk
- 01:31:39 [INFO] Connected to am335x-sk via serial 
- 01:31:39 [INFO] Host: uname -a
- 01:31:40 [INFO] Target: 
uname -a
Linux am335x-evm 4.6.0-next-20160517-00002-gd15169d743b1 #1 SMP Tue May 17 01:21:29 CDT 2016 armv7l GNU/Linux
root@am335x-evm:~# 
- 01:31:40 [INFO] Host: cat /proc/cmdline
- 01:31:40 [INFO] Target: 
cat /proc/cmdline
console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
root@am335x-evm:~# 
- 01:31:40 [INFO] Host: uname -a
- 01:31:40 [INFO] Target: 
uname -a
Linux am335x-evm 4.6.0-next-20160517-00002-gd15169d743b1 #1 SMP Tue May 17 01:21:29 CDT 2016 armv7l GNU/Linux
root@am335x-evm:~# 
- 01:31:40 [INFO] Host: cat /proc/mtd
- 01:31:40 [INFO] Target: 
cat /proc/mtd
dev:    size   erasesize  name
root@am335x-evm:~# 
- 01:31:41 [INFO] Host: export IPERFHOST=192.168.1.254
- 01:31:42 [INFO] Target: 
export IPERFHOST=192.168.1.254
root@am335x-evm:~# 
- 01:31:42 [INFO] Host: export NFS_SERVER=192.168.1.254
- 01:31:42 [INFO] Target: 
export NFS_SERVER=192.168.1.254
root@am335x-evm:~# 
- 01:31:42 [INFO] Host: export NFS_ROOT_PATH=/home/NFS_exports/am335x-sk
- 01:31:42 [INFO] Target: 
export NFS_ROOT_PATH=/home/NFS_exports/am335x-sk
root@am335x-evm:~# 
- 01:31:42 [INFO] Host: export AP_SSID=
- 01:31:42 [INFO] Target: 
export AP_SSID=
root@am335x-evm:~# 
- 01:31:42 [INFO] Host: mkdir -p -m 777 /test
- 01:31:42 [INFO] Target: 
mkdir -p -m 777 /test
root@am335x-evm:~# 
- 01:31:42 [INFO] Host: cd /test
- 01:31:42 [INFO] Target: 
cd /test
root@am335x-evm:/test# 
- 01:31:42 [INFO] Host: cat > test.sh << EOF
- 01:31:42 [INFO] Target: 
cat > test.sh << EOF
- 01:31:42 [INFO] Host: failtest() {
- 01:31:42 [INFO] Target: 
failtest() {
- 01:31:42 [INFO] Host:   echo 1 >&3
- 01:31:42 [INFO] Target: 
  echo 1 >&3
- 01:31:42 [INFO] Host: }
- 01:31:42 [INFO] Target: 
- 01:31:42 [INFO] Host: timeout=600
- 01:31:43 [INFO] Target: 
timeout=600
- 01:31:43 [INFO] Host: 
- 01:31:43 [INFO] Target: 
- 01:31:43 [INFO] Host: # Start of user's script logic
- 01:31:43 [INFO] Target: 
# Start of user's script logic
- 01:31:43 [INFO] Host: mount -t proc proc /proc 2>/dev/null;
- 01:31:43 [INFO] Target: 
mount -t proc proc /proc 2>/dev/null;
- 01:31:43 [INFO] Host: 
- 01:31:43 [INFO] Target: 
- 01:31:43 [INFO] Host: mount -t sysfs sys /sys 2>/dev/null;
- 01:31:43 [INFO] Target: 
mount -t sysfs sys /sys 2>/dev/null;
- 01:31:43 [INFO] Host: 
- 01:31:43 [INFO] Target: 
- 01:31:43 [INFO] Host: mount -t debugfs none /sys/kernel/debug 2>/dev/null;
- 01:31:43 [INFO] Target: 
mount -t debugfs none /sys/kernel/debug 2>/dev/null;
- 01:31:43 [INFO] Host: 
- 01:31:43 [INFO] Target: 
- 01:31:43 [INFO] Host: echo 'cpuinfo:';cat /proc/cpuinfo; echo '=======';
- 01:31:43 [INFO] Target: 
echo 'cpuinfo:';cat /proc/cpuinfo; echo '=======';
- 01:31:43 [INFO] Host: 
- 01:31:44 [INFO] Target: 
- 01:31:44 [INFO] Host: echo 'soc info:';head /sys/devices/soc0/* 2>/dev/null; echo '=======';
- 01:31:44 [INFO] Target: 
echo 'soc info:';head /sys/devices/soc0/* 2>/dev/null; echo '=======';
- 01:31:44 [INFO] Host: 
- 01:31:44 [INFO] Target: 
- 01:31:44 [INFO] Host: echo 'DT Model info'; head /proc/device-tree/name /proc/device-tree/model /proc/device-tree/compatible 2>/dev/null;echo; echo '=======';
- 01:31:44 [INFO] Target: 
echo 'DT Model info'; head /proc/device-tree/name /proc/device-tree/model /pro 
c/device-tree/compatible 2>/dev/null;echo; echo '=======';
- 01:31:44 [INFO] Host: 
- 01:31:44 [INFO] Target: 
- 01:31:44 [INFO] Host: echo 'interrupts:';cat /proc/interrupts; echo '=======';
- 01:31:44 [INFO] Target: 
echo 'interrupts:';cat /proc/interrupts; echo '=======';
- 01:31:44 [INFO] Host: 
- 01:31:44 [INFO] Target: 
- 01:31:44 [INFO] Host: echo 'Clk_summary:';cat /sys/kernel/debug/clk/clk_summary; echo '=======';
- 01:31:44 [INFO] Target: 
echo 'Clk_summary:';cat /sys/kernel/debug/clk/clk_summary; echo '=======';
- 01:31:44 [INFO] Host: 
- 01:31:44 [INFO] Target: 
- 01:31:44 [INFO] Host: echo "Available frequencies"; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies 2>/dev/null;echo '=======';
- 01:31:44 [INFO] Target: 
echo "Available frequencies"; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling 
_available_frequencies 2>/dev/null;echo '=======';
- 01:31:44 [INFO] Host: 
- 01:31:45 [INFO] Target: 
- 01:31:45 [INFO] Host: TMPF=/tmp/a.\$\$; TMPF2=/tmp/b.\$\$; STR=""
- 01:31:45 [INFO] Target: 
TMPF=/tmp/a.\$\$; TMPF2=/tmp/b.\$\$; STR=""
- 01:31:45 [INFO] Host: 
- 01:31:45 [INFO] Target: 
- 01:31:45 [INFO] Host: cp /dev/kmsg \$TMPF &
- 01:31:45 [INFO] Target: 
cp /dev/kmsg \$TMPF &
- 01:31:45 [INFO] Host: 
- 01:31:45 [INFO] Target: 
- 01:31:45 [INFO] Host: PID=\$! ; sleep 5; kill -9 \$PID
- 01:31:45 [INFO] Target: 
PID=\$! ; sleep 5; kill -9 \$PID
- 01:31:45 [INFO] Host: 
- 01:31:45 [INFO] Target: 
- 01:31:45 [INFO] Host: 
- 01:31:45 [INFO] Target: 
- 01:31:45 [INFO] Host: 
- 01:31:45 [INFO] Target: 
- 01:31:45 [INFO] Host: cat \$TMPF|grep "^0">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; then STR="\$STR emerg=\$N";echo "===== EMERGE++";cat \$TMPF2|cut -d ';' -f2;echo "====="; fi
- 01:31:45 [INFO] Target: 
cat \$TMPF|grep "^0">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; the 
n STR="\$STR emerg=\$N";echo "===== EMERGE++";cat \$TMPF2|cut -d ';' -f2;echo "= 
===="; fi
- 01:31:45 [INFO] Host: 
- 01:31:46 [INFO] Target: 
- 01:31:46 [INFO] Host: cat \$TMPF|grep "^1">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; then STR="\$STR alert=\$N";echo "===== ALERT ==";cat \$TMPF2|cut -d ';' -f2;echo "====="; fi
- 01:31:46 [INFO] Target: 
cat \$TMPF|grep "^1">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; the 
n STR="\$STR alert=\$N";echo "===== ALERT ==";cat \$TMPF2|cut -d ';' -f2;echo "= 
===="; fi
- 01:31:46 [INFO] Host: 
- 01:31:46 [INFO] Target: 
- 01:31:46 [INFO] Host: cat \$TMPF|grep "^2">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; then STR="\$STR crit=\$N";echo "===== CRIT ==";cat \$TMPF2|cut -d ';' -f2;echo "====="; fi
- 01:31:46 [INFO] Target: 
cat \$TMPF|grep "^2">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; the 
n STR="\$STR crit=\$N";echo "===== CRIT ==";cat \$TMPF2|cut -d ';' -f2;echo "=== 
=="; fi
- 01:31:46 [INFO] Host: 
- 01:31:46 [INFO] Target: 
- 01:31:46 [INFO] Host: cat \$TMPF|grep "^3">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; then STR="\$STR err=\$N";echo "===== ERR ==";cat \$TMPF2|cut -d ';' -f2;echo "=====" ;fi
- 01:31:46 [INFO] Target: 
cat \$TMPF|grep "^3">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; the 
n STR="\$STR err=\$N";echo "===== ERR ==";cat \$TMPF2|cut -d ';' -f2;echo "===== 
" ;fi
- 01:31:46 [INFO] Host: 
- 01:31:46 [INFO] Target: 
- 01:31:46 [INFO] Host: cat \$TMPF|grep "^4">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; then STR="\$STR warn=\$N";echo "===== WARN ==";cat \$TMPF2|cut -d ';' -f2;echo "=====" ;fi
- 01:31:46 [INFO] Target: 
cat \$TMPF|grep "^4">\$TMPF2; N=\`cat \$TMPF2|wc -l\`; if [ "\$N" -ne 0 ]; the 
n STR="\$STR warn=\$N";echo "===== WARN ==";cat \$TMPF2|cut -d ';' -f2;echo "=== 
==" ;fi
- 01:31:46 [INFO] Host: 
- 01:31:46 [INFO] Target: 
- 01:31:46 [INFO] Host: rm \$TMPF \$TMPF2; echo "SUM""MARY RESULT: BOOT:" 'PASS: H''ello World' 'B''oard' "Booted" "Boot Log has::::\$STR:"
- 01:31:46 [INFO] Target: 
rm \$TMPF \$TMPF2; echo "SUM""MARY RESULT: BOOT:" 'PASS: H''ello World' 'B''oa 
rd' "Booted" "Boot Log has::::\$STR:"
- 01:31:46 [INFO] Host: 
- 01:31:47 [INFO] Target: 
- 01:31:47 [INFO] Host: EOF
- 01:31:47 [INFO] Target: 
root@am335x-evm:/test# 
- 01:31:47 [INFO] Host: cd /test
- 01:31:47 [INFO] Target: 
cd /test
root@am335x-evm:/test# 
- 01:31:47 [INFO] Host: chmod +x test.sh
- 01:31:47 [INFO] Target: 
chmod +x test.sh
root@am335x-evm:/test# 
- 01:31:47 [INFO] Host: ./test.sh 2> stderr.log > stdout.log 3> result.log
- 01:31:52 [INFO] Target: 
./test.sh 2> stderr.log > stdout.log 3> result.log
root@am335x-evm:/test# 
- 01:31:52 [INFO] Host: echo $?
- 01:31:52 [INFO] Target: 
echo $?
root@am335x-evm:/test# 
- 01:31:52 [INFO] Host: cd /test
- 01:31:52 [INFO] Target: 
cd /test
root@am335x-evm:/test# 
- 01:31:52 [INFO] Host: cat stdout.log
- 01:31:53 [INFO] Target: 
cat stdout.log
cpuinfo:
processor	: 0
model name	: ARMv7 Processor rev 2 (v7l)
BogoMIPS	: 997.78
Features	: half thumb fastmult vfp edsp thumbee neon vfpv3 tls vfpd32 
CPU implementer	: 0x41
CPU architecture: 7
CPU variant	: 0x3
CPU part	: 0xc08
CPU revision	: 2
Hardware	: Generic AM33XX (Flattened Device Tree)
Revision	: 0000
Serial		: 0000000000000000
=======
soc info:
==> /sys/devices/soc0/family <==
AM33xx
==> /sys/devices/soc0/machine <==
AM335X
==> /sys/devices/soc0/power <==
==> /sys/devices/soc0/revision <==
ES2.1
==> /sys/devices/soc0/subsystem <==
==> /sys/devices/soc0/type <==
==> /sys/devices/soc0/uevent <==
=======
DT Model info
==> /proc/device-tree/name <==
==> /proc/device-tree/model <==
TI AM335x EVM-SK
==> /proc/device-tree/compatible <==
ti,am335x-evmskti,am33xx
=======
interrupts:
           CPU0       
 16:      38766      INTC  68 Level     gp_timer
 20:       1916      INTC  12 Level     49000000.edma_ccint
 22:          1      INTC  14 Level     49000000.edma_ccerrint
 26:          0      INTC  96 Level     44e07000.gpio
 33:          0  44e07000.gpio   6 Edge      48060000.mmc cd
 57:          0  44e07000.gpio  30 Edge      button2
 59:          0      INTC  98 Level     4804c000.gpio
 92:          0      INTC  32 Level     481ac000.gpio
 95:          0  481ac000.gpio   2 Edge      button1
 96:          0  481ac000.gpio   3 Edge      button0
 98:          0  481ac000.gpio   5 Edge      button3
125:          0      INTC  62 Level     481ae000.gpio
158:       8682      INTC  72 Level     OMAP UART0
159:        285      INTC  70 Level     44e0b000.i2c
160:       5822      INTC  64 Level     mmc0
161:        144      INTC  28 Level     mmc1
172:         56      INTC  41 Level     4a100000.ethernet
173:         37      INTC  42 Level     4a100000.ethernet
181:          0      INTC 111 Level     48310000.rng
IPI0:          0  CPU wakeup interrupts
IPI1:          0  Timer broadcast interrupts
IPI2:          0  Rescheduling interrupts
IPI3:          0  Function call interrupts
IPI4:          0  CPU stop interrupts
IPI5:          0  IRQ work interrupts
IPI6:          0  completion interrupts
Err:          0
=======
Clk_summary:
   clock                         enable_cnt  prepare_cnt        rate   accuracy   phase
----------------------------------------------------------------------------------------
 tclkin_ck                                0            0    12000000          0 0  
 virt_26000000_ck                         0            0    26000000          0 0  
 virt_25000000_ck                         0            0    25000000          0 0  
 virt_24000000_ck                         1            1    24000000          0 0  
    sys_clkin_ck                          9           23    24000000          0 0  
       timer6_fck                         0            1    24000000          0 0  
       timer3_fck                         0            1    24000000          0 0  
       dbg_sysclk_ck                      0            1    24000000          0 0  
       timer7_fck                         0            1    24000000          0 0  
       timer5_fck                         0            1    24000000          0 0  
       timer4_fck                         0            1    24000000          0 0  
       timer2_fck                         1            1    24000000          0 0  
       timer1_fck                         1            1    24000000          0 0  
       cefuse_fck                         0            0    24000000          0 0  
       dpll_per_ck                        1            2   960000000          0 0  
          usbotg_fck                      0            1   960000000          0 0  
          dpll_per_m2_ck                  2            4   192000000          0 0  
             mmc_clk                      0            3    96000000          0 0  
             clk_24mhz                    1            1    24000000          0 0  
                clkdiv32k_ck              1            1       32786          0 0  
                   clkdiv32k_ick           2            5       32786          0 0  
                      wdt1_fck            0            1       32786          0 0  
                      gpio3_dbclk           0            2       32786          0 0  
                      gpio2_dbclk           1            2       32786          0 0  
                      gpio1_dbclk           0            2       32786          0 0  
             dpll_per_m2_div4_ck           0            9    48000000          0 0  
             dpll_per_m2_div4_wkupdm_ck           1            2    48000000          0 0  
       dpll_disp_ck                       0            1    24000000          0 0  
          dpll_disp_m2_ck                 0            1    24000000          0 0  
             lcd_gclk                     0            1    24000000          0 0  
       dpll_ddr_ck                        1            1   303000000          0 0  
          dpll_ddr_m2_ck                  2            2   303000000          0 0  
             dpll_ddr_m2_div2_ck           1            1   151500000          0 0  
       dpll_mpu_ck                        1            1  1000000000          0 0  
          dpll_mpu_m2_ck                  4            4  1000000000          0 0  
       dpll_core_ck                       1            1  1000000000          0 0  
          dpll_core_x2_ck                 2            2  2000000000          0 0  
             dpll_core_m6_ck              0            0   500000000          0 0  
             dpll_core_m5_ck              1            1   250000000          0 0  
                cpsw_cpts_rft_clk           0            0   250000000          0 0  
                cpsw_125mhz_gclk           3            3   125000000          0 0  
             dpll_core_m4_ck              9           11   200000000          0 0  
                dbg_clka_ck               0            2   200000000          0 0  
                   trace_pmd_clk_mux_ck           0            1   200000000          0 0  
                      trace_clk_div_ck           0            1    50000000          0 0  
                   stm_pmd_clock_mux_ck           0            0   200000000          0 0  
                      stm_clk_div_ck           0            0    50000000          0 0  
                gfx_fclk_clksel_ck           0            1   200000000          0 0  
                   gfx_fck_div_ck           0            1   200000000          0 0  
                sysclk_div_ck             0            0   200000000          0 0  
                l4hs_gclk                 2            2   200000000          0 0  
                l4_rtc_gclk               0            0   100000000          0 0  
                dpll_core_m4_div2_ck          16           17   100000000          0 0  
                   l4ls_gclk             43           59   100000000          0 0  
                      ehrpwm2_tbclk           0            0   100000000          0 0  
                      ehrpwm1_tbclk           0            0   100000000          0 0  
                      ehrpwm0_tbclk           0            0   100000000          0 0  
                   l4fw_gclk              1            1   100000000          0 0  
                   l3s_gclk               9           10   100000000          0 0  
                   ieee5000_fck           0            0   100000000          0 0  
                mmu_fck                   0            0   200000000          0 0  
                l3_gclk                  13           15   200000000          0 0  
                   pruss_ocp_gclk           0            1   200000000          0 0  
       rng_fck                            2            2    24000000          0 0  
       aes0_fck                           1            2    24000000          0 0  
       sha0_fck                           1            1    24000000          0 0  
       smartreflex1_fck                   0            1    24000000          0 0  
       smartreflex0_fck                   0            1    24000000          0 0  
       mcasp1_fck                         0            1    24000000          0 0  
       mcasp0_fck                         0            1    24000000          0 0  
       dcan1_fck                          0            1    24000000          0 0  
       dcan0_fck                          0            1    24000000          0 0  
       adc_tsc_fck                        0            1    24000000          0 0  
 virt_19200000_ck                         0            0    19200000          0 0  
 clk_rc32k_ck                             1            1       32000          0 0  
    gpio0_dbclk_mux_ck                    1            1       32000          0 0  
       gpio0_dbclk                        1            2       32000          0 0  
 clk_32768_ck                             1            2       32768          0 0  
    sysclkout_pre_ck                      1            1       32768          0 0  
       clkout2_div_ck                     1            1       32768          0 0  
          clkout2_ck                      1            1       32768          0 0  
=======
Available frequencies
=======
===== ERR ==
omap_voltage_late_init: Voltage driver support not added
tps65910-rtc tps65910-rtc: IRQ is not free.
DHCP/BOOTP: Reply not for us, op[2] xid[56342312]
IP-Config: Reopening network devices...
IP-Config: Auto-configuration of network failed
udevd[102]: starting version 182
=====
===== WARN ==
omap_hwmod: debugss: _wait_target_disable failed
omap4_sram_init:Unable to allocate sram needed to handle errata I688
omap4_sram_init:Unable to get sram pool needed to handle errata I688
workingset: timestamp_bits=28 max_order=16 bucket_order=0
backlight supply power not found, using dummy regulator
tps65910 0-002d: No interrupt support, no core IRQ
tps65910-rtc: probe of tps65910-rtc failed with error -22
backlight supply power not found, using dummy regulator
mmc0: host does not support reading read-only switch, assuming write-enable
backlight supply power not found, using dummy regulator
backlight supply power not found, using dummy regulator
omap_hsmmc 481d8000.mmc: card claims to support voltages below defined range
. timed out!
FAT-fs (mmcblk0p1): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.
=====
SUMMARY RESULT: BOOT: PASS: Hello World Board Booted Boot Log has:::: err=6 warn=14:
root@am335x-evm:/test# 
- 01:31:53 [INFO] Host: cat stderr.log
- 01:31:53 [INFO] Target: 
cat stderr.log
./test.sh: line 33:   655 Killed                  cp /dev/kmsg $TMPF
root@am335x-evm:/test# 
- 01:31:53 [INFO] Host: cat result.log
- 01:31:55 [ERROR] On command: cat result.log waiting for cat result.log.+?(?m-ix:^1[\0\n\r]+) >>> error: execution expired
- 01:31:55 [INFO] Target: 
cat result.log
root@am335x-evm:/test# 
- 01:31:55 [INFO] Host: cd /test
- 01:31:56 [INFO] Target: 
cd /test
root@am335x-evm:/test# 
URL:gtsystest.telogy.design.ti.com/vatf/tidfarm-02/tidfarm-02_vatf@am335x-sk/tidfarm-0205_17_2016_01_27_47/files/session_iteration_1/test_1
