- 02:35:56 [INFO] Starting target session
- 02:35:57 [INFO] Connected to am335x-sk via serial 
- 02:35:57 [INFO] Host: #check prompt
- 02:36:00 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 02:36:00 [INFO] Target: 
#check prompt
root@am335x-evm:/test# 
- 02:36:00 [INFO] Host: #check prompt
- 02:36:00 [INFO] Target: 
#check prompt
root@am335x-evm:/test# 
- 02:36:00 [INFO] Host: sync;poweroff
- 02:36:22 [INFO] Target: 
sync;poweroff
[[0;32m  OK  [0m] Stopped target Multi-User System.
         Stopping Kernel Logging Service...
         Stopping Session c1 of user root.
         Stopping System Logging Service...
         Stopping strongSwan IPsec IKEv1/IKEv2 daemon using ipsec.conf...
         Stopping Network Name Resolution...
[[0;32m  OK  [0m] Stopped target Timers.
[[0;32m  OK  [0m] Stopped Daily Cleanup of Temporary Directories.
         Stopping User Manager for UID 0...
         Stopping parse-ip.service...
         Stopping Lightning Fast Webserver With Light System Requirements...
[[0;32m  OK  [0m] Stopped target Login Prompts.
         Stopping Serial Getty on ttyO0...
         Stopping Getty on tty1...
[[0;32m  OK  [0m] Stopped target System Time Synchronized.
         Stopping thermal-zone-init.service...
         Stopping Serial Getty on ttyS3...
         Stopping Serial Getty on ttyS0...
[[0;32m  OK  [0m] Stopped System Logging Service.
[[0;32m  OK  [0m] Stopped Kernel Logging Service.
[[0;32m  OK  [0m] Stopped strongSwan IPsec IKEv1/IKEv2 daemon using ipsec.conf.
[[0;32m  OK  [0m] Stopped Network Name Resolution.
[[0;32m  OK  [0m] Stopped Serial Getty on ttyO0.
[[0;32m  OK  [0m] Stopped Getty on tty1.
[[0;32m  OK  [0m] Stopped Lightning Fast Webserver With Light System Requirements.
[[0;32m  OK  [0m] Stopped User Manager for UID 0.
[[0;32m  OK  [0m] Stopped Serial Getty on ttyS3.
[[0;32m  OK  [0m] Stopped Serial Getty on ttyS0.
[[0;32m  OK  [0m] Stopped Session c1 of user root.
[[0;32m  OK  [0m] Stopped parse-ip.service.
[[0;32m  OK  [0m] Stopped thermal-zone-init.service.
[[0;32m  OK  [0m] Stopped User Manager for UID 0.
         Stopping matrix-gui-2.0.service...
[[0;32m  OK  [0m] Removed slice User Slice of root.
         Stopping Login Service...
[[0;32m  OK  [0m] Removed slice system-getty.slice.
         Stopping Permit User Sessions...
[[0;32m  OK  [0m] Removed slice system-serial\x2dgetty.slice.
[[0;32m  OK  [0m] Stopped target Network.
         Stopping Network Service...
[[0;32m  OK  [0m] Stopped Login Service.
[[0;32m  OK  [0m] Stopped Network Service.
[[0;32m  OK  [0m] Stopped matrix-gui-2.0.service.
[[0;32m  OK  [0m] Stopped Permit User Sessions.
         Stopping rng-tools.service...
         Stopping D-Bus System Message Bus...
[[0;32m  OK  [0m] Stopped D-Bus System Message Bus.
[[0;32m  OK  [0m] Stopped rng-tools.service.
         Stopping thttpd.service...
[[0;32m  OK  [0m] Stopped thttpd.service.
         Stopping telnetd.service...
[[0;32m  OK  [0m] Stopped telnetd.service.
         Stopping weston.service...
[[0;32m  OK  [0m] Stopped weston.service.
[[0;32m  OK  [0m] Stopped target Remote File Systems.
         Stopping rc.pvr.service...
[[0;32m  OK  [0m] Stopped rc.pvr.service.
         Stopping uim-sysfs.service...
[[0;32m  OK  [0m] Stopped uim-sysfs.service.
[[0;32m  OK  [0m] Stopped target Basic System.
[[0;32m  OK  [0m] Stopped target Sockets.
[[0;32m  OK  [0m] Closed D-Bus System Message Bus Socket.
[[0;32m  OK  [0m] Closed Syslog Socket.
[[0;32m  OK  [0m] Closed dropbear.socket.
[[0;32m  OK  [0m] Closed RPCbind Server Activation Socket.
[[0;32m  OK  [0m] Stopped target Paths.
[[0;32m  OK  [0m] Stopped Forward Password Requests to Wall Directory Watch.
[[0;32m  OK  [0m] Stopped Dispatch Password Requests to Console Directory Watch.
[[0;32m  OK  [0m] Stopped target Slices.
[[0;32m  OK  [0m] Removed slice User and Session Slice.
[[0;32m  OK  [0m] Stopped target System Initialization.
         Stopping Network Time Synchronization...
         Stopping Update UTMP about System Boot/Shutdown...
[[0;32m  OK  [0m] Stopped Apply Kernel Variables.
         Stopping Load/Save Random Seed...
[[0;32m  OK  [0m] Stopped Setup Virtual Console.
[[0;32m  OK  [0m] Stopped target Swap.
[[0;32m  OK  [0m] Stopped Network Time Synchronization.
[[0;32m  OK  [0m] Stopped Load/Save Random Seed.
[[0;32m  OK  [0m] Stopped Update UTMP about System Boot/Shutdown.
[[0;32m  OK  [0m] Stopped Create Volatile Files and Directories.
[[0;32m  OK  [0m] Stopped target Local File Systems.
         Unmounting /run/media/mmcblk0p1...
         Unmounting /run/media/mmcblk0p3...
         Unmounting /var/volatile...
         Unmounting /sys/kernel/debug/tracing...
         Unmounting /media/ram...
         Unmounting /run/user/0...
         Unmounting Temporary Directory...
[[0;32m  OK  [0m] Unmounted /run/media/mmcblk0p1.
[[0;32m  OK  [0m] Unmounted /run/media/mmcblk0p3.
[[0;32m  OK  [0m] Unmounted /var/volatile.
[[0;32m  OK  [0m] Unmounted /sys/kernel/debug/tracing.
[[0;32m  OK  [0m] Unmounted /media/ram.
[[0;32m  OK  [0m] Unmounted /run/user/0.
[[0;32m  OK  [0m] Unmounted Temporary Directory.
[[0;32m  OK  [0m] Reached target Unmount All Filesystems.
[[0;32m  OK  [0m] Stopped target Local File Systems (Pre).
[[0;32m  OK  [0m] Stopped Remount Root and Kernel File Systems.
[[0;32m  OK  [0m] Stopped Create Static Device Nodes in /dev.
[[0;32m  OK  [0m] Reached target Shutdown.
[ 3507.506115] systemd-shutdow: 23 output lines suppressed due to ratelimiting
[ 3507.530690] systemd-shutdown[1]: Sending SIGTERM to remaining processes...
[ 3507.597098] systemd-journald[95]: Received SIGTERM from PID 1 (systemd-shutdow).
[ 3517.612094] systemd-shutdown[1]: Sending SIGKILL to remaining processes...
[ 3517.661293] systemd-shutdown[1]: Sending SIGKILL to PID 596 (rngd).
[ 3517.684632] systemd-shutdown[1]: Unmounting file systems.
[ 3517.692730] systemd-shutdown[1]: Remounting '/' read-only with options 'data=ordered'.
[ 3517.918718] EXT4-fs (mmcblk0p2): re-mounted. Opts: data=ordered
[ 3517.953773] systemd-shutdown[1]: Remounting '/' read-only with options 'data=ordered'.
[ 3517.964524] EXT4-fs (mmcblk0p2): re-mounted. Opts: data=ordered
[ 3517.971170] systemd-shutdown[1]: All filesystems unmounted.
[ 3517.977068] systemd-shutdown[1]: Deactivating swaps.
[ 3517.983183] systemd-shutdown[1]: All swaps deactivated.
[ 3517.988725] systemd-shutdown[1]: Detaching loop devices.
[ 3518.016526] systemd-shutdown[1]: All loop devices detached.
[ 3518.067834] reboot: System halted
- 02:36:22 [INFO] Disconnected serial from am335x-sk
- 02:36:27 [INFO] Connected to am335x-sk via serial 
- 02:36:27 [INFO] Host: 
- 02:36:28 [INFO] Target: 
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
** Unable to read "uboot.env" from mmc0:1 **
Using default environment
<ethaddr> not set. Validating first E-fuse MAC
Net:   eth0: ethernet@4a100000
Warning: usb_ether MAC addresses don't match:
Address in SROM is         de:ad:be:ef:00:01
Address in environment is  d4:94:a1:88:6b:ea
, eth1: usb_ether
Press SPACE to abort autoboot in 2 seconds
=>  
=>  
- 02:36:28 [INFO] Host: 
- 02:36:28 [INFO] Target: 
- 02:36:28 [INFO] Host: version
- 02:36:28 [INFO] Target: 
version
U-Boot 2016.05-g5d6f251e04 (Oct 25 2016 - 20:37:03 -0400)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 02:36:28 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 02:36:28 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 02:36:28 [INFO] Host: setenv bootcmd  ''
- 02:36:28 [INFO] Target: 
setenv bootcmd  ''
- 02:36:28 [INFO] Host: setenv autoload 'no'
- 02:36:28 [INFO] Target: 
setenv autoload 'no'
- 02:36:28 [INFO] Host: setenv serverip '192.168.0.1'
- 02:36:28 [INFO] Target: 
setenv serverip '192.168.0.1'
- 02:36:28 [INFO] Host: setenv _initramfs -
- 02:36:29 [INFO] Target: 
setenv _initramfs -
- 02:36:29 [INFO] Host: printenv
- 02:36:29 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_fit=0
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef282f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-g5d6f251e04 (Oct 25 2016 - 20:37:03 -0400)
Environment size: 8572/131068 bytes
- 02:36:29 [INFO] Host: printenv
- 02:36:30 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_fit=0
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef282f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-g5d6f251e04 (Oct 25 2016 - 20:37:03 -0400)
Environment size: 8572/131068 bytes
- 02:36:30 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 02:36:30 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 02:36:30 [INFO] Host: setenv serverip '192.168.0.1'
- 02:36:30 [INFO] Target: 
setenv serverip '192.168.0.1'
- 02:36:30 [INFO] Host: setenv autoload 'no'
- 02:36:31 [INFO] Target: 
setenv autoload 'no'
- 02:36:31 [INFO] Host: dhcp
- 02:36:32 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
DHCP client bound to address 192.168.0.184 (1079 ms)
- 02:36:32 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-sk1/77be574642f956a8de59c98b05b2bb88
- 02:36:33 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-sk1/77be574642f956a8de59c98b05b2bb88
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.0.1; our IP address is 192.168.0.184
Filename 'vatf_am335x-sk1/77be574642f956a8de59c98b05b2bb88'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ##########################
	 5.4 MiB/s
done
Bytes transferred = 7052384 (6b9c60 hex)
- 02:36:33 [INFO] Host: tftp ${fdt_addr_r} 192.168.0.1:vatf_am335x-sk1/fb84e4af9f0a085466149900dea99aa0
- 02:36:33 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.0.1:vatf_am335x-sk1/fb84e4af9f0a085466149900dea99aa0
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.0.1; our IP address is 192.168.0.184
Filename 'vatf_am335x-sk1/fb84e4af9f0a085466149900dea99aa0'.
Load address: 0x88000000
Loading: *###
	 5.1 MiB/s
done
Bytes transferred = 37616 (92f0 hex)
- 02:36:33 [INFO] Host: ls mmc 0:1
- 02:36:33 [INFO] Target: 
ls mmc 0:1
    79204   mlo 
   644064   u-boot.img 
        4   ws-calibrate.rules 
       14   .ipaddr 
4 file(s), 0 dir(s)
- 02:36:33 [INFO] Host: ls mmc 0:2
- 02:36:33 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 opt
<DIR>       4096 srv
<DIR>       4096 tmp
<DIR>       4096 run
<DIR>       4096 var
<DIR>       4096 home
<DIR>       4096 etc
<DIR>       4096 sbin
<DIR>       4096 include
<DIR>       4096 usr
<DIR>       4096 sys
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 mnt
<DIR>       4096 proc
<DIR>       4096 www
<DIR>       4096 test
- 02:36:33 [INFO] Host: part uuid mmc 0:2
- 02:36:33 [INFO] Target: 
part uuid mmc 0:2
00000000-02
- 02:36:33 [INFO] Host: printenv
- 02:36:34 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_fit=0
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
dnsip=192.0.2.2
dnsip2=192.0.2.3
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethact=ethernet@4a100000
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef282f8
fdtfile=undefined
fileaddr=88000000
filesize=92f0
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.0.184
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-g5d6f251e04 (Oct 25 2016 - 20:37:03 -0400)
Environment size: 8762/131068 bytes
- 02:36:34 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 02:36:34 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 02:36:34 [INFO] Host: printenv
- 02:36:35 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_fit=0
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
dnsip=192.0.2.2
dnsip2=192.0.2.3
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethact=ethernet@4a100000
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef282f8
fdtfile=undefined
fileaddr=88000000
filesize=92f0
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.0.184
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-g5d6f251e04 (Oct 25 2016 - 20:37:03 -0400)
Environment size: 8817/131068 bytes
- 02:36:35 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 02:36:35 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 02:36:35 [INFO] Host: version
- 02:36:35 [INFO] Target: 
version
U-Boot 2016.05-g5d6f251e04 (Oct 25 2016 - 20:37:03 -0400)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 02:36:35 [INFO] Host: bdinfo
- 02:36:35 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8FF52000
reloc off   = 0x0F752000
irq_sp      = 0x8EF282E0
sp start    = 0x8EF282D0
- 02:36:35 [INFO] Host: mmc rescan; echo $?
- 02:36:36 [INFO] Target: 
mmc rescan; echo $?
- 02:36:36 [INFO] Host: fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
- 02:36:36 [INFO] Target: 
fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
- 02:36:36 [INFO] Host: boot
- 02:37:11 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x6b9c60 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8ef1a000, end 8ef262ef ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.9.0-rc3-00002-ge66e437babc5 (nmenon@horus) (gcc version 4.9.3 20150413 (prerelease) (Linaro GCC 4.9-2015.05) ) #3 SMP Mon Oct 31 01:30:51 CDT 2016
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] OF: fdt:Machine model: TI AM335x EVM-SK
[    0.000000] efi: Getting EFI parameters from FDT:
[    0.000000] efi: UEFI not found.
[    0.000000] cma: Reserved 64 MiB at 0x8a800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES1.0 (
[    0.000000] sgx 
[    0.000000] neon 
[    0.000000] )
[    0.000000] percpu: Embedded 14 pages/cpu @cfbac000 s26624 r8192 d22528 u57344
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 64512
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 1024 (order: 0, 4096 bytes)
[    0.000000] Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
[    0.000000] Memory: 174072K/260096K available (9216K kernel code, 1126K rwdata, 3868K rodata, 2048K init, 343K bss, 20488K reserved, 65536K cma-reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)
[    0.000000]     vmalloc : 0xd0800000 - 0xff800000   ( 752 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc0c00000   (10208 kB)
[    0.000000]       .init : 0xc1100000 - 0xc1300000   (2048 kB)
[    0.000000]       .data : 0xc1300000 - 0xc14198a0   (1127 kB)
[    0.000000]        .bss : 0xc141b000 - 0xc1470f88   ( 344 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	Build-time adjustment of leaf fanout to 32.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=16 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000017] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000041] clocksource: timer1: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000056] OMAP clocksource: timer1 at 24000000 Hz
[    0.004925] clocksource_probe: no matching clocksources found
[    0.005243] Console: colour dummy device 80x30
[    0.005289] Calibrating delay loop... 717.61 BogoMIPS (lpj=1794048)
[    0.029011] pid_max: default: 32768 minimum: 301
[    0.029163] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.029177] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.030045] CPU: Testing write buffer coherency: ok
[    0.030468] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.030539] Setting up static identity map for 0x80300000 - 0x80300098
[    0.035017] EFI services will not be available.
[    0.035340] Brought up 1 CPUs
[    0.035357] SMP: Total of 1 processors activated (717.61 BogoMIPS).
[    0.035367] CPU: All CPU(s) started in SVC mode.
[    0.037038] devtmpfs: initialized
[    0.051152] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.051902] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 9556302231375000 ns
[    0.056547] pinctrl core: initialized pinctrl subsystem
[    0.059330] NET: Registered protocol family 16
[    0.061966] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.083172] omap_hwmod: debugss: _wait_target_disable failed
[    0.138459] cpuidle: using governor menu
[    0.147767] OMAP GPIO hardware version 0.1
[    0.170564] No ATAGs?
[    0.170592] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.171156] omap4_sram_init:Unable to allocate sram needed to handle errata I688
[    0.171171] omap4_sram_init:Unable to get sram pool needed to handle errata I688
[    0.176266] Serial: AMBA PL011 UART driver
[    0.203357] edma 49000000.edma: TI EDMA DMA engine driver
[    0.204850] reg-fixed-voltage fixedregulator2: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_wl12xx_gpio, deferring probe
[    0.208836] vgaarb: loaded
[    0.210077] SCSI subsystem initialized
[    0.210810] usbcore: registered new interface driver usbfs
[    0.210905] usbcore: registered new interface driver hub
[    0.210984] usbcore: registered new device driver usb
[    0.211764] omap_i2c 44e0b000.i2c: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_i2c0_pins, deferring probe
[    0.212654] pps_core: LinuxPPS API ver. 1 registered
[    0.212667] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.212697] PTP clock support registered
[    0.212912] EDAC MC: Ver: 3.0.0
[    0.216668] clocksource: Switched to clocksource timer1
[    0.230227] NET: Registered protocol family 2
[    0.231033] TCP established hash table entries: 2048 (order: 1, 8192 bytes)
[    0.231078] TCP bind hash table entries: 2048 (order: 2, 16384 bytes)
[    0.231126] TCP: Hash tables configured (established 2048 bind 2048)
[    0.231206] UDP hash table entries: 256 (order: 1, 8192 bytes)
[    0.231233] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)
[    0.231410] NET: Registered protocol family 1
[    0.232082] RPC: Registered named UNIX socket transport module.
[    0.232100] RPC: Registered udp transport module.
[    0.232108] RPC: Registered tcp transport module.
[    0.232117] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.233368] hw perfevents: enabled with armv7_cortex_a8 PMU driver, 5 counters available
[    0.235697] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.237047] workingset: timestamp_bits=30 max_order=16 bucket_order=0
[    0.251158] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.252582] NFS: Registering the id_resolver key type
[    0.252630] Key type id_resolver registered
[    0.252640] Key type id_legacy registered
[    0.252698] ntfs: driver 2.1.32 [Flags: R/O].
[    0.254816] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 248)
[    0.254838] io scheduler noop registered
[    0.254848] io scheduler deadline registered
[    0.255081] io scheduler cfq registered (default)
[    0.259826] libphy: mdio_driver_register: phy-bcm-ns2-pci
[    0.261266] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.271219] backlight supply power not found, using dummy regulator
[    0.359222] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.363137] SuperH (H)SCI(F) driver initialized
[    0.364218] msm_serial: driver initialized
[    0.364603] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.364813] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 158, base_baud = 3000000) is a OMAP UART0
[    1.064090] console [ttyO0] enabled
[    1.068380] STMicroelectronics ASC driver initialized
[    1.076326] omap_rng 48310000.rng: OMAP Random Number Generator ver. 20
[    1.085117] [drm] Initialized
[    1.108825] brd: module loaded
[    1.120265] loop: module loaded
[    1.133760] libphy: Fixed MDIO Bus: probed
[    1.139805] CAN device driver interface
[    1.146172] e1000e: Intel(R) PRO/1000 Network Driver - 3.2.6-k
[    1.152344] e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.158680] igb: Intel(R) Gigabit Ethernet Network Driver - version 5.4.0-k
[    1.166000] igb: Copyright (c) 2007-2014 Intel Corporation.
[    1.231779] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.238226] davinci_mdio 4a101000.mdio: detected phy mask fffffffc
[    1.246385] libphy: 4a101000.mdio: probed
[    1.250692] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    1.260381] davinci_mdio 4a101000.mdio: phy[1]: device 4a101000.mdio:01, driver Atheros 8031 ethernet
[    1.272653] cpsw 4a100000.ethernet: Detected MACID = d4:94:a1:88:6b:e9
[    1.281452] cpsw 4a100000.ethernet: cpsw: Detected MACID = d4:94:a1:88:6b:ea
[    1.290990] pegasus: v0.9.3 (2013/04/25), Pegasus/Pegasus II USB Ethernet driver
[    1.298949] usbcore: registered new interface driver pegasus
[    1.305007] usbcore: registered new interface driver asix
[    1.310749] usbcore: registered new interface driver ax88179_178a
[    1.317213] usbcore: registered new interface driver cdc_ether
[    1.323426] usbcore: registered new interface driver smsc75xx
[    1.329562] usbcore: registered new interface driver smsc95xx
[    1.335662] usbcore: registered new interface driver net1080
[    1.341692] usbcore: registered new interface driver cdc_subset
[    1.347978] usbcore: registered new interface driver zaurus
[    1.353928] usbcore: registered new interface driver cdc_ncm
[    1.362341] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.369238] ehci-pci: EHCI PCI platform driver
[    1.373990] ehci-platform: EHCI generic platform driver
[    1.379755] ehci-orion: EHCI orion driver
[    1.384191] SPEAr-ehci: EHCI SPEAr driver
[    1.388602] ehci-st: EHCI STMicroelectronics driver
[    1.393912] ehci-exynos: EHCI EXYNOS driver
[    1.398511] ehci-atmel: EHCI Atmel driver
[    1.402902] tegra-ehci: Tegra EHCI driver
[    1.407320] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.413869] ohci-pci: OHCI PCI platform driver
[    1.418637] ohci-platform: OHCI generic platform driver
[    1.424362] ohci-omap3: OHCI OMAP3 driver
[    1.428781] SPEAr-ohci: OHCI SPEAr driver
[    1.433187] ohci-st: OHCI STMicroelectronics driver
[    1.438496] ohci-atmel: OHCI Atmel driver
[    1.443586] usbcore: registered new interface driver usb-storage
[    1.452180] mousedev: PS/2 mouse device common for all mice
[    1.462162] i2c /dev entries driver
[    1.480331] sdhci: Secure Digital Host Controller Interface driver
[    1.486929] sdhci: Copyright(c) Pierre Ossman
[    1.492836] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.500127] Synopsys Designware Multimedia Card Interface Driver
[    1.507861] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.517800] ledtrig-cpu: registered to indicate activity on CPUs
[    1.524851] usbcore: registered new interface driver usbhid
[    1.530759] usbhid: USB HID core driver
[    1.539292] NET: Registered protocol family 10
[    1.545775] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.553103] NET: Registered protocol family 17
[    1.557845] can: controller area network core (rev 20120528 abi 9)
[    1.564449] NET: Registered protocol family 29
[    1.569132] can: raw protocol (rev 20120528)
[    1.573625] can: broadcast manager protocol (rev 20160617 t)
[    1.579567] random: fast init done
[    1.583159] can: netlink gateway (rev 20130117) max_hops=1
[    1.589715] Key type dns_resolver registered
[    1.594636] omap_voltage_late_init: Voltage driver support not added
[    1.601537] ThumbEE CPU extension supported.
[    1.606060] Registering SWP/SWPB emulation handler
[    1.631914] tps65910 0-002d: No interrupt support, no core IRQ
[    1.640844] vrtc: supplied by vbat
[    1.648497] vio: supplied by vbat
[    1.653699] vdd1: supplied by vbat
[    1.659295] vdd2: supplied by vbat
[    1.666574] vdig1: supplied by vbat
[    1.671864] vdig2: supplied by vbat
[    1.677116] vpll: supplied by vbat
[    1.682241] vdac: supplied by vbat
[    1.687375] vaux1: supplied by vbat
[    1.692636] vaux2: supplied by vbat
[    1.697862] vaux33: supplied by vbat
[    1.703205] vmmc: supplied by vbat
[    1.708365] vbb: supplied by vbat
[    1.714900] tps65910-rtc tps65910-rtc: IRQ is not free.
[    1.720476] tps65910-rtc: probe of tps65910-rtc failed with error -22
[    1.729094] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.736139] backlight supply power not found, using dummy regulator
[    1.749356] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.871147] mmc0: host does not support reading read-only switch, assuming write-enable
[    1.882886] mmc0: new high speed SDHC card at address aaaa
[    1.889476] mmcblk0: mmc0:aaaa SS04G 3.69 GiB 
[    1.896045]  mmcblk0: p1 p2 p3
[    1.917915] backlight supply power not found, using dummy regulator
[    1.928466] input: gpio_buttons0 as /devices/platform/gpio_buttons0/input/input0
[    1.937071] hctosys: unable to open rtc device (rtc0)
[    1.957093] net eth0: initializing cpsw version 1.12 (0)
[    1.966886] backlight supply power not found, using dummy regulator
[    1.979414] omap_hsmmc 481d8000.mmc: card claims to support voltages below defined range
[    2.000143] mmc1: new SDIO card at address 0001
[    2.037564] Atheros 8031 ethernet 4a101000.mdio:00: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:00, irq=-1)
[    2.056819] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[    5.162739] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[    5.171303] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    5.186741] Sending DHCP requests ., OK
[    6.287256] IP-Config: Got DHCP answer from 192.168.0.1, my address is 192.168.0.189
[    6.295590] IP-Config: Complete:
[    6.299094]      device=eth0, hwaddr=d4:94:a1:88:6b:e9, ipaddr=192.168.0.189, mask=255.255.255.0, gw=192.168.0.1
[    6.309970]      host=192.168.0.189, domain=ti.com, nis-domain=(none)
[    6.316861]      bootserver=0.0.0.0, rootserver=0.0.0.0, rootpath=     nameserver0=192.0.2.2, nameserver1=192.0.2.3
[    6.328803] lis3_reg: disabling
[    6.332265] vwl1271: disabling
[    6.356843] EXT4-fs (mmcblk0p2): warning: maximal mount count reached, running e2fsck is recommended
[    6.371953] EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Opts: (null)
[    6.380729] VFS: Mounted root (ext4 filesystem) on device 179:2.
[    6.389662] devtmpfs: mounted
[    6.403452] Freeing unused kernel memory: 2048K (c1100000 - c1300000)
[    6.698591] systemd[1]: System time before build time, advancing clock.
[    6.753653] systemd[1]: systemd 229 running in system mode. (+PAM -AUDIT -SELINUX +IMA -APPARMOR +SMACK +SYSVINIT +UTMP -LIBCRYPTSETUP -GCRYPT +GNUTLS +ACL +XZ -LZ4 -SECCOMP +BLKID -ELFUTILS +KMOD -IDN)
[    6.773691] systemd[1]: Detected architecture arm.
Welcome to [1mArago 2016.10[0m!
[    6.798394] systemd[1]: Set hostname to <am335x-evm>.
[    8.049970] systemd[1]: Created slice User and Session Slice.
[[0;32m  OK  [0m] Created slice User and Session Slice.
[    8.072330] systemd[1]: Listening on Journal Socket (/dev/log).
[[0;32m  OK  [0m] Listening on Journal Socket (/dev/log).
[    8.091918] systemd[1]: Reached target Remote File Systems.
[[0;32m  OK  [0m] Reached target Remote File Systems.
[    8.112082] systemd[1]: Listening on udev Kernel Socket.
[[0;32m  OK  [0m] Listening on udev Kernel Socket.
[    8.132306] systemd[1]: Listening on /dev/initctl Compatibility Named Pipe.
[[0;32m  OK  [0m] Listening on /dev/initctl Compatibility Named Pipe.
[    8.157465] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[[0;32m  OK  [0m] Started Dispatch Password Requests to Console Directory Watch.
[    8.182696] systemd[1]: Listening on Network Service Netlink Socket.
[[0;32m  OK  [0m] Listening on Network Service Netlink Socket.
[[0;32m  OK  [0m] Created slice System Slice.
[[0;32m  OK  [0m] Reached target Slices.
[[0;32m  OK  [0m] Created slice system-serial\x2dgetty.slice.
[[0;32m  OK  [0m] Listening on Syslog Socket.
[[0;32m  OK  [0m] Reached target Swap.
[[0;32m  OK  [0m] Listening on Journal Socket.
         Mounting Debug File System...
         Starting Create Static Device Nodes in /dev...
         Starting Load Kernel Modules...
         Starting Setup Virtual Console...
         Starting Remount Root and Kernel File Systems...
[[0;32m  OK  [0m] Started Forward Password Requests to Wall Directory Watch.
[[0;32m  OK  [0m] Reached target Paths.
[[0;32m  OK  [0m] Listening on udev Control Socket.
         Mounting Temporary Directory...
         Starting Journal Service...
[[0;32m  OK  [0m] Created slice system-getty.slice.
[    8.572866] EXT4-fs (mmcblk0p2): re-mounted. Opts: (null)
[[0;32m  OK  [0m] Mounted Debug File System.
[[0;32m  OK  [0m] Mounted Temporary Directory.
[[0;32m  OK  [0m] Started Journal Service.
[[0;32m  OK  [0m] Started Create Static Device Nodes in /dev.
[[0;1;31mFAILED[0m] Failed to start Load Kernel Modules.
See 'systemctl status systemd-modules-load.service' for details.
[[0;32m  OK  [0m] Started Setup Virtual Console.
[[0;32m  OK  [0m] Started Remount Root and Kernel File Systems.
         Starting udev Coldplug all Devices...
         Starting Apply Kernel Variables...
[[0;32m  OK  [0m] Reached target Local File Systems (Pre).
         Mounting /var/volatile...
         Mounting /media/ram...
         Starting udev Kernel Device Manager...
         Starting Flush Journal to Persistent Storage...
[[0;32m  OK  [0m] Mounted /var/volatile.
[[0;32m  OK  [0m] Mounted /media/ram.
[[0;32m  OK  [0m] Started udev Kernel Device Manager.
[[0;32m  OK  [0m] Started Apply Kernel Variables.
[   12.213687] systemd-journald[102]: Received request to flush runtime journal from PID 1
[[0;32m  OK  [0m] Started Flush Journal to Persistent Storage.
         Starting Load/Save Random Seed...
[[0;32m  OK  [0m] Reached target Local File Systems.
         Starting Create Volatile Files and Directories...
[[0;32m  OK  [0m] Started Load/Save Random Seed.
[[0;32m  OK  [0m] Started Create Volatile Files and Directories.
         Starting Update UTMP about System Boot/Shutdown...
         Starting Network Time Synchronization...
[[0;32m  OK  [0m] Started Network Time Synchronization.
[[0;32m  OK  [0m] Started Update UTMP about System Boot/Shutdown.
         Starting Synchronize System and HW clocks...
[[0;32m  OK  [0m] Reached target System Time Synchronized.
[[0;1;31mFAILED[0m] Failed to start Synchronize System and HW clocks.
See 'systemctl status sync-clocks.service' for details.
[[0;32m  OK  [0m] Found device /dev/ttyO0.
[[0;32m  OK  [0m] Started udev Coldplug all Devices.
[[0;32m  OK  [0m] Reached target System Initialization.
[[0;32m  OK  [0m] Listening on D-Bus System Message Bus Socket.
[[0;32m  OK  [0m] Started Daily Cleanup of Temporary Directories.
[[0;32m  OK  [0m] Reached target Timers.
[[0;32m  OK  [0m] Listening on dropbear.socket.
[[0;32m  OK  [0m] Listening on RPCbind Server Activation Socket.
[[0;32m  OK  [0m] Reached target Sockets.
[[0;32m  OK  [0m] Reached target Basic System.
[[0;32m  OK  [0m] Started strongSwan IPsec IKEv1/IKEv2 daemon using ipsec.conf.
[[0;32m  OK  [0m] Started Kernel Logging Service.
         Starting Login Service...
         Starting uim-sysfs.service...
         Starting Print notice about GPLv3 packages...
         Starting Permit User Sessions...
[[0;32m  OK  [0m] Started D-Bus System Message Bus.
         Starting Network Service...
[[0;32m  OK  [0m] Started System Logging Service.
[[0;32m  OK  [0m] Started Permit User Sessions.
[[0;32m  OK  [0m] Found device /dev/ttyS0.
[   17.972259] net eth1: initializing cpsw version 1.12 (0)
[   18.132839] Atheros 8031 ethernet 4a101000.mdio:01: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:01, irq=-1)
[   18.150631] IPv6: ADDRCONF(NETDEV_UP): eth1: link is not ready
[[0;32m  OK  [0m] Started Network Service.
[[0;32m  OK  [0m] Found device /dev/ttyS3.
[   20.229484] FAT-fs (mmcblk0p1): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.
[   20.297819] FAT-fs (mmcblk0p3): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.
[   24.224892] random: crng init done
***************************************************************
***************************************************************
NOTICE: This file system contains the following GPLv3 packages:
	autoconf
	binutils
	cpp-symlinks
	cpp
	dosfstools
	g++-symlinks
	g++
	gcc-symlinks
	gcc
	gdb
	gdbserver
	gstreamer1.0-libav
	libgmp10
	libidn11
	libmpc3
	libmpfr4
	make
	nettle
If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above
NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
[[0;32m  OK  [0m] Started Print notice about GPLv3 packages.
[[0;32m  OK  [0m] Started uim-sysfs.service.
         Starting rc.pvr.service...
[[0;32m  OK  [0m] Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[[0;32m  OK  [0m] Reached target Network.
         Starting Lightning Fast Webserver With Light System Requirements...
         Starting Network Name Resolution...
[[0;32m  OK  [0m] Started Serial Getty on ttyO0.
[[0;32m  OK  [0m] Started Serial Getty on ttyS3.
[[0;32m  OK  [0m] Started Getty on tty1.
[[0;32m  OK  [0m] Started Serial Getty on ttyS0.
[[0;32m  OK  [0m] Started rc.pvr.service.
[[0;32m  OK  [0m] Started Lightning Fast Webserver With Light System Requirements.
[[0;32m  OK  [0m] Started Network Name Resolution.
[[0;32m  OK  [0m] Started Login Service.
         Starting weston.service...
[[0;32m  OK  [0m] Started weston.service.
         Starting telnetd.service...
[[0;32m  OK  [0m] Started telnetd.service.
         Starting thttpd.service...
[[0;32m  OK  [0m] Started thttpd.service.
         Starting rng-tools.service...
[[0;32m  OK  [0m] Started rng-tools.service.
         Starting matrix-gui-2.0.service...
[[0;32m  OK  [0m] Started matrix-gui-2.0.service.
         Starting thermal-zone-init.service...
         Starting parse-ip.service...
[[0;32m  OK  [0m] Started thermal-zone-init.service.
[[0;32m  OK  [0m] Started parse-ip.service.
 _____                    _____           _         _   
|  _  |___ ___ ___ ___   |  _  |___ ___  |_|___ ___| |_ 
|     |  _| .'| . | . |  |   __|  _| . | | | -_|  _|  _|
|__|__|_| |__,|_  |___|  |__|  |_| |___|_| |___|___|_|  
              |___|                    |___|            
Arago Project http://arago-project.org am335x-evm ttyO0
Arago 2016.10 am335x-evm ttyO0
am335x-evm login: 
- 02:37:11 [INFO] Host: root
- 02:37:51 [ERROR] On command: root waiting for (?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 02:37:51 [INFO] Target: 
 _____                    _____           _         _   
|  _  |___ ___ ___ ___   |  _  |___ ___  |_|___ ___| |_ 
|     |  _| .'| . | . |  |   __|  _| . | | | -_|  _|  _|
|__|__|_| |__,|_  |___|  |__|  |_| |___|_| |___|___|_|  
              |___|                    |___|            
Arago Project http://arago-project.org am335x-evm ttyO0
Arago 2016.10 am335x-evm ttyO0
am335x-evm login: root
- 02:37:51 [INFO] Host: root
- 02:38:31 [ERROR] On command: root waiting for (?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 02:38:31 [INFO] Target: 
root
Password: 
- 02:38:31 [INFO] Host: root
- 02:39:11 [ERROR] On command: root waiting for (?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 02:39:11 [INFO] Target: 
Login incorrect
am335x-evm login: 
Login timed out after 60 seconds.
 _____                    _____           _         _   
|  _  |___ ___ ___ ___   |  _  |___ ___  |_|___ ___| |_ 
|     |  _| .'| . | . |  |   __|  _| . | | | -_|  _|  _|
|__|__|_| |__,|_  |___|  |__|  |_| |___|_| |___|___|_|  
              |___|                    |___|            
Arago Project http://arago-project.org am335x-evm ttyO0
Arago 2016.10 am335x-evm ttyO0
am335x-evm login: 
- 02:39:11 [INFO] Sleeping 15 secs to allow systemd to finish starting processes...
- 02:39:26 [INFO] Disconnected serial from am335x-sk
- 02:39:26 [INFO] Connected to am335x-sk via serial 
- 02:39:26 [INFO] Host: uname -a
- 02:39:36 [ERROR] On command: uname -a waiting for (?m-ix:Linux.+?(?-mix:[\w\d]+@.+[@:#]+)) >>> error: execution expired
- 02:39:36 [INFO] Target: 
uname -a
Password: 
- 02:39:36 [INFO] Host: uname -a
- 02:39:46 [ERROR] On command: uname -a waiting for (?m-ix:Linux.+?(?-mix:[\w\d]+@.+[@:#]+)) >>> error: execution expired
- 02:39:46 [INFO] Target: 
Login incorrect
am335x-evm login: 
- 02:39:46 [INFO] Host: uname -a
- 02:39:56 [ERROR] On command: uname -a waiting for (?m-ix:Linux.+?(?-mix:[\w\d]+@.+[@:#]+)) >>> error: execution expired
- 02:39:56 [INFO] Target: 
uname -a
Password: 
URL:gtsystest.telogy.design.ti.com/vatf/tigtfarm04/tigtfarm04_vatf@am335x-sk1/tigtfarm0410_31_2016_02_35_56/files/session_iteration_1/test_1
