- 05:10:21 [INFO] Starting target session
- 05:10:21 [INFO] Connected to am437x-sk via serial 
- 05:10:21 [INFO] Host: #check prompt
- 05:10:24 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 05:10:24 [INFO] Target: 
/test # 
- 05:10:24 [INFO] Host: #check prompt
- 05:10:26 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:root@.+[@:#]+) >>> error: execution expired
- 05:10:26 [INFO] Target: 
#check prompt
/test # 
- 05:10:26 [INFO] Host: #check prompt
- 05:10:28 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:root@.+[@:#]+) >>> error: execution expired
- 05:10:28 [INFO] Target: 
#check prompt
/test # 
- 05:10:28 [INFO] Host: #check prompt
- 05:10:30 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:root@.+[@:#]+) >>> error: execution expired
- 05:10:30 [INFO] Target: 
#check prompt
/test # 
- 05:10:30 [INFO] Disconnected serial from am437x-sk
- 05:10:35 [INFO] Connected to am437x-sk via serial 
- 05:10:35 [INFO] Host: 
- 05:10:36 [INFO] Target: 
PMIC:  TPS65218
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0
reading uboot.env
Net:   
Warning: ethernet@4a100000 using MAC address from ROM
eth0: ethernet@4a100000
Hit any key to stop autoboot:  2  0 
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
- 05:10:36 [INFO] Host: 
- 05:10:37 [INFO] Target: 
- 05:10:37 [INFO] Host: version
- 05:10:37 [INFO] Target: 
version
U-Boot 2016.05-00303-g6c5519b (Nov 18 2016 - 09:12:39 -0600)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 05:10:37 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 05:10:37 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 05:10:37 [INFO] Host: setenv bootcmd  ''
- 05:10:37 [INFO] Target: 
setenv bootcmd  ''
- 05:10:37 [INFO] Host: setenv autoload 'no'
- 05:10:37 [INFO] Target: 
setenv autoload 'no'
- 05:10:37 [INFO] Host: setenv serverip '192.168.0.1'
- 05:10:37 [INFO] Target: 
setenv serverip '192.168.0.1'
- 05:10:37 [INFO] Host: setenv _initramfs -
- 05:10:37 [INFO] Target: 
setenv _initramfs -
- 05:10:37 [INFO] Host: printenv
- 05:10:38 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__SK
board_rev=1.1A
board_serial=11144P420018
boot_fdt=try
boot_fit=0
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_qspi=u-boot.bin raw 0x0 0x080000;u-boot.backup raw 0x080000 0x080000;u-boot-spl-os raw 0x100000 0x010000;u-boot-env raw 0x110000 0x010000;u-boot-env.backup raw 0x120000 0x010000;kernel raw 0x130000 0x800000
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
ethaddr=34:b1:f7:3d:b6:e4
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=bef0f298
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43XXHS; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $board_name = AM43_IDK; then setenv fdtfile am437x-idk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2016.05-00303-g6c5519b (Nov 18 2016 - 09:12:39 -0600)
Environment size: 5493/65532 bytes
- 05:10:38 [INFO] Host: printenv
- 05:10:38 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__SK
board_rev=1.1A
board_serial=11144P420018
boot_fdt=try
boot_fit=0
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_qspi=u-boot.bin raw 0x0 0x080000;u-boot.backup raw 0x080000 0x080000;u-boot-spl-os raw 0x100000 0x010000;u-boot-env raw 0x110000 0x010000;u-boot-env.backup raw 0x120000 0x010000;kernel raw 0x130000 0x800000
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
ethaddr=34:b1:f7:3d:b6:e4
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=bef0f298
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43XXHS; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $board_name = AM43_IDK; then setenv fdtfile am437x-idk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2016.05-00303-g6c5519b (Nov 18 2016 - 09:12:39 -0600)
Environment size: 5493/65532 bytes
- 05:10:38 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 05:10:38 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 05:10:38 [INFO] Host: setenv serverip '192.168.0.1'
- 05:10:38 [INFO] Target: 
setenv serverip '192.168.0.1'
- 05:10:38 [INFO] Host: setenv autoload 'no'
- 05:10:38 [INFO] Target: 
setenv autoload 'no'
- 05:10:38 [INFO] Host: dhcp
- 05:10:44 [INFO] Target: 
dhcp
ethernet@4a100000 Waiting for PHY auto negotiation to complete....... done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
DHCP client bound to address 192.168.0.143 (1003 ms)
- 05:10:44 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am437x-sk/e6d50c4b97493e4e287e95ea01ee91de
- 05:10:45 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am437x-sk/e6d50c4b97493e4e287e95ea01ee91de
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.0.1; our IP address is 192.168.0.143
Filename 'vatf_am437x-sk/e6d50c4b97493e4e287e95ea01ee91de'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ################################
	 7.8 MiB/s
done
Bytes transferred = 7134568 (6cdd68 hex)
- 05:10:45 [INFO] Host: tftp ${fdt_addr_r} 192.168.0.1:vatf_am437x-sk/5ec65c8ed2b6e471f1f99de3975e3d12
- 05:10:45 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.0.1:vatf_am437x-sk/5ec65c8ed2b6e471f1f99de3975e3d12
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.0.1; our IP address is 192.168.0.143
Filename 'vatf_am437x-sk/5ec65c8ed2b6e471f1f99de3975e3d12'.
Load address: 0x88000000
Loading: *####
	 6.3 MiB/s
done
Bytes transferred = 46155 (b44b hex)
- 05:10:45 [INFO] Host: ls mmc 0:1
- 05:10:45 [INFO] Target: 
ls mmc 0:1
    74552   mlo 
   600636   u-boot.img 
       14   .ipaddr 
        4   ws-calibrate.rules 
        0   pointercal 
    65536   uboot.env 
6 file(s), 0 dir(s)
- 05:10:45 [INFO] Host: ls mmc 0:2
- 05:10:45 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 include
<DIR>       4096 srv
<DIR>       4096 home
<DIR>       4096 media
<DIR>       4096 opt
<DIR>       4096 var
<DIR>       4096 sys
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 usr
<DIR>       4096 bin
<DIR>       4096 mnt
<DIR>       4096 etc
<DIR>       4096 sbin
<DIR>       4096 www
<SYM>          8 tmp
<DIR>       4096 proc
<DIR>       4096 run
<DIR>       4096 lib
<DIR>       4096 test
- 05:10:45 [INFO] Host: part uuid mmc 0:2
- 05:10:45 [INFO] Target: 
part uuid mmc 0:2
00000000-02
- 05:10:45 [INFO] Host: printenv
- 05:10:45 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__SK
board_rev=1.1A
board_serial=11144P420018
boot_fdt=try
boot_fit=0
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp 
bootcmd=
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_qspi=u-boot.bin raw 0x0 0x080000;u-boot.backup raw 0x080000 0x080000;u-boot-spl-os raw 0x100000 0x010000;u-boot-env raw 0x110000 0x010000;u-boot-env.backup raw 0x120000 0x010000;kernel raw 0x130000 0x800000
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
dnsip=192.0.2.2
dnsip2=192.0.2.3
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
ethact=ethernet@4a100000
ethaddr=34:b1:f7:3d:b6:e4
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=bef0f298
fdtfile=undefined
fileaddr=88000000
filesize=b44b
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43XXHS; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $board_name = AM43_IDK; then setenv fdtfile am437x-idk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.0.143
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2016.05-00303-g6c5519b (Nov 18 2016 - 09:12:39 -0600)
Environment size: 5683/65532 bytes
- 05:10:45 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 05:10:46 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 05:10:46 [INFO] Host: printenv
- 05:10:46 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_fit=setenv bootargs console=${console} 
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__SK
board_rev=1.1A
board_serial=11144P420018
boot_fdt=try
boot_fit=0
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_qspi=u-boot.bin raw 0x0 0x080000;u-boot.backup raw 0x080000 0x080000;u-boot-spl-os raw 0x100000 0x010000;u-boot-env raw 0x110000 0x010000;u-boot-env.backup raw 0x120000 0x010000;kernel raw 0x130000 0x800000
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
dnsip=192.0.2.2
dnsip2=192.0.2.3
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
ethact=ethernet@4a100000
ethaddr=34:b1:f7:3d:b6:e4
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=bef0f298
fdtfile=undefined
fileaddr=88000000
filesize=b44b
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43XXHS; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $board_name = AM43_IDK; then setenv fdtfile am437x-idk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
finduuid=part uuid mmc ${bootpart} uuid
fit_bootfile=fitImage.itb
fit_loadaddr=0x88000000
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
ipaddr=192.168.0.143
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadfit=run args_fit; bootm ${loadaddr}#${fdtfile};
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scriptaddr=0x80000000
serverip=192.168.0.1
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2016.05-00303-g6c5519b (Nov 18 2016 - 09:12:39 -0600)
Environment size: 5738/65532 bytes
- 05:10:46 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 05:10:46 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 05:10:46 [INFO] Host: version
- 05:10:46 [INFO] Target: 
version
U-Boot 2016.05-00303-g6c5519b (Nov 18 2016 - 09:12:39 -0600)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 05:10:46 [INFO] Host: bdinfo
- 05:10:46 [INFO] Target: 
bdinfo
arch_number = 0x00000000
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x40000000
baudrate    = 115200 bps
TLB addr    = 0xBFFF0000
relocaddr   = 0xBFF2A000
reloc off   = 0x3F72A000
irq_sp      = 0xBEF0F280
sp start    = 0xBEF0F270
- 05:10:46 [INFO] Host: mmc rescan; echo $?
- 05:10:47 [INFO] Target: 
mmc rescan; echo $?
- 05:10:47 [INFO] Host: fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
- 05:10:47 [INFO] Target: 
fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
- 05:10:47 [INFO] Host: boot
- 05:14:17 [ERROR] On command: boot waiting for boot.+?(?-mix:login:) >>> error: execution expired
- 05:14:17 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x6cdd68 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8fff1000, end 8ffff44a ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.9.0-rc7-next-20161129-00002-g32f49c81a550 (nmenon@horus) (gcc version 4.9.3 20150413 (prerelease) (Linaro GCC 4.9-2015.05) ) #3 SMP Tue Nov 29 04:04:20 CST 2016
[    0.000000] CPU: ARMv7 Processor [412fc09a] revision 10 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] OF: fdt:Machine model: TI AM437x SK EVM
[    0.000000] efi: Getting EFI parameters from FDT:
[    0.000000] efi: UEFI not found.
[    0.000000] cma: Reserved 64 MiB at 0xbc000000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM437x ES1.2 (sgx neon)
[    0.000000] percpu: Embedded 14 pages/cpu @ef7c4000 s26176 r8192 d22976 u57344
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260608
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Memory: 954744K/1048576K available (10240K kernel code, 1132K rwdata, 3920K rodata, 2048K init, 473K bss, 28296K reserved, 65536K cma-reserved, 196608K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)
[    0.000000]     vmalloc : 0xf0800000 - 0xff800000   ( 240 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xf0000000   ( 768 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc0d00000   (11232 kB)
[    0.000000]       .init : 0xc1200000 - 0xc1400000   (2048 kB)
[    0.000000]       .data : 0xc1400000 - 0xc151b100   (1133 kB)
[    0.000000]        .bss : 0xc151d000 - 0xc1593488   ( 474 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	Build-time adjustment of leaf fanout to 32.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=16 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] L2C: platform modifies aux control register: 0x0e030000 -> 0x3e430000
[    0.000000] L2C: DT/platform modifies aux control register: 0x0e030000 -> 0x3e430000
[    0.000000] L2C-310 erratum 769419 enabled
[    0.000000] L2C-310 enabling early BRESP for Cortex-A9
[    0.000000] OMAP L2C310: ROM does not support power control setting
[    0.000000] L2C-310 dynamic clock gating disabled, standby mode disabled
[    0.000000] L2C-310 cache controller enabled, 16 ways, 256 kB
[    0.000000] L2C-310: CACHE_ID 0x410000c9, AUX_CTRL 0x4e430000
[    0.000000] OMAP clockevent source: timer1 at 32786 Hz
[    0.000011] sched_clock: 64 bits at 500MHz, resolution 2ns, wraps every 4398046511103ns
[    0.000029] clocksource: arm_global_timer: mask: 0xffffffffffffffff max_cycles: 0xe6a171a037, max_idle_ns: 881590485102 ns
[    0.000052] Switching to timer-based delay loop, resolution 2ns
[    0.002726] clocksource: 32k_counter: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 58327039986419 ns
[    0.002735] OMAP clocksource: 32k_counter at 32768 Hz
[    0.004467] Console: colour dummy device 80x30
[    0.004501] Calibrating delay loop (skipped), value calculated using timer frequency.. 1000.00 BogoMIPS (lpj=5000000)
[    0.004514] pid_max: default: 32768 minimum: 301
[    0.004627] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.004637] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.005377] CPU: Testing write buffer coherency: ok
[    0.005709] CPU0: thread -1, cpu 0, socket 0, mpidr 80000000
[    0.006028] Setting up static identity map for 0x80300000 - 0x80300098
[    0.009656] EFI services will not be available.
[    0.009873] smp: Bringing up secondary CPUs ...
[    0.009885] smp: Brought up 1 node, 1 CPU
[    0.009893] SMP: Total of 1 processors activated (1000.00 BogoMIPS).
[    0.009900] CPU: All CPU(s) started in SVC mode.
[    0.010763] devtmpfs: initialized
[    0.020843] VFP support v0.3: implementor 41 architecture 3 part 30 variant 9 rev 4
[    0.021505] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.024997] pinctrl core: initialized pinctrl subsystem
[    0.027262] NET: Registered protocol family 16
[    0.029140] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.103792] cpuidle: using governor menu
[    0.112795] OMAP GPIO hardware version 0.1
[    0.124716] No ATAGs?
[    0.124804] hw-breakpoint: found 5 (+1 reserved) breakpoint and 1 watchpoint registers.
[    0.124817] hw-breakpoint: maximum watchpoint size is 4 bytes.
[    0.125499] omap4_sram_init:Unable to allocate sram needed to handle errata I688
[    0.125510] omap4_sram_init:Unable to get sram pool needed to handle errata I688
[    0.128722] Serial: AMBA PL011 UART driver
[    0.145854] edma 49000000.edma: TI EDMA DMA engine driver
[    0.148970] vgaarb: loaded
[    0.149798] SCSI subsystem initialized
[    0.150450] usbcore: registered new interface driver usbfs
[    0.150512] usbcore: registered new interface driver hub
[    0.150564] usbcore: registered new device driver usb
[    0.151217] omap_i2c 44e0b000.i2c: could not find pctldev for node /ocp@44000000/l4_wkup@44c00000/scm@210000/pinmux@800/i2c0_pins, deferring probe
[    0.151273] omap_i2c 4802a000.i2c: could not find pctldev for node /ocp@44000000/l4_wkup@44c00000/scm@210000/pinmux@800/i2c1_pins, deferring probe
[    0.151875] pps_core: LinuxPPS API ver. 1 registered
[    0.151884] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.151906] PTP clock support registered
[    0.152052] EDAC MC: Ver: 3.0.0
[    0.154688] clocksource: Switched to clocksource arm_global_timer
[    0.163227] NET: Registered protocol family 2
[    0.163850] TCP established hash table entries: 8192 (order: 3, 32768 bytes)
[    0.163932] TCP bind hash table entries: 8192 (order: 4, 65536 bytes)
[    0.164037] TCP: Hash tables configured (established 8192 bind 8192)
[    0.164184] UDP hash table entries: 512 (order: 2, 16384 bytes)
[    0.164234] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes)
[    0.164412] NET: Registered protocol family 1
[    0.164853] RPC: Registered named UNIX socket transport module.
[    0.164866] RPC: Registered udp transport module.
[    0.164872] RPC: Registered tcp transport module.
[    0.164877] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.167129] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.167792] workingset: timestamp_bits=30 max_order=18 bucket_order=0
[    0.175590] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.176342] NFS: Registering the id_resolver key type
[    0.176374] Key type id_resolver registered
[    0.176380] Key type id_legacy registered
[    0.176418] ntfs: driver 2.1.32 [Flags: R/O].
[    0.177917] bounce: pool size: 64 pages
[    0.178134] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 248)
[    0.178146] io scheduler noop registered
[    0.178152] io scheduler deadline registered
[    0.178310] io scheduler cfq registered (default)
[    0.184565] pinctrl-single 44e10800.pinmux: 199 pins at pa f9e10800 size 796
[    0.191091] backlight supply power not found, using dummy regulator
[    0.246103] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.248732] SuperH (H)SCI(F) driver initialized
[    0.249551] msm_serial: driver initialized
[    0.249758] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.249776] omap_uart 44e09000.serial: No clock speed specified: using default: 48000000
[    0.249909] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 29, base_baud = 3000000) is a OMAP UART0
[    1.018276] console [ttyO0] enabled
[    1.022407] STMicroelectronics ASC driver initialized
[    1.029754] omap_rng 48310000.rng: Random Number Generator ver. 20
[    1.037563] [drm] Initialized
[    1.056321] brd: module loaded
[    1.065864] loop: module loaded
[    1.076207] libphy: Fixed MDIO Bus: probed
[    1.081450] CAN device driver interface
[    1.087147] e1000e: Intel(R) PRO/1000 Network Driver - 3.2.6-k
[    1.093295] e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.099637] igb: Intel(R) Gigabit Ethernet Network Driver - version 5.4.0-k
[    1.106988] igb: Copyright (c) 2007-2014 Intel Corporation.
[    1.184758] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.191191] davinci_mdio 4a101000.mdio: detected phy mask ffffffcf
[    1.199139] libphy: 4a101000.mdio: probed
[    1.203378] davinci_mdio 4a101000.mdio: phy[4]: device 4a101000.mdio:04, driver Micrel KSZ9031 Gigabit PHY
[    1.213612] davinci_mdio 4a101000.mdio: phy[5]: device 4a101000.mdio:05, driver Micrel KSZ9031 Gigabit PHY
[    1.225776] cpsw 4a100000.ethernet: Detected MACID = 34:b1:f7:3d:b6:e4
[    1.233964] cpsw 4a100000.ethernet: cpsw: Detected MACID = 34:b1:f7:3d:b6:e6
[    1.242930] pegasus: v0.9.3 (2013/04/25), Pegasus/Pegasus II USB Ethernet driver
[    1.250920] usbcore: registered new interface driver pegasus
[    1.256958] usbcore: registered new interface driver asix
[    1.262767] usbcore: registered new interface driver ax88179_178a
[    1.269261] usbcore: registered new interface driver cdc_ether
[    1.275475] usbcore: registered new interface driver smsc75xx
[    1.281576] usbcore: registered new interface driver smsc95xx
[    1.287681] usbcore: registered new interface driver net1080
[    1.293675] usbcore: registered new interface driver cdc_subset
[    1.299955] usbcore: registered new interface driver zaurus
[    1.306048] usbcore: registered new interface driver cdc_ncm
[    1.322676] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.329632] ehci-pci: EHCI PCI platform driver
[    1.334422] ehci-platform: EHCI generic platform driver
[    1.340201] ehci-orion: EHCI orion driver
[    1.344544] SPEAr-ehci: EHCI SPEAr driver
[    1.348911] ehci-st: EHCI STMicroelectronics driver
[    1.354156] ehci-exynos: EHCI EXYNOS driver
[    1.358699] ehci-atmel: EHCI Atmel driver
[    1.363019] tegra-ehci: Tegra EHCI driver
[    1.367382] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.373907] ohci-pci: OHCI PCI platform driver
[    1.378668] ohci-platform: OHCI generic platform driver
[    1.384325] ohci-omap3: OHCI OMAP3 driver
[    1.388690] SPEAr-ohci: OHCI SPEAr driver
[    1.393016] ohci-st: OHCI STMicroelectronics driver
[    1.398288] ohci-atmel: OHCI Atmel driver
[    1.402945] ------------[ cut here ]------------
[    1.407852] WARNING: CPU: 0 PID: 1 at drivers/usb/host/xhci-plat.c:168 xhci_plat_probe+0x198/0x46c
[    1.417298] Modules linked in:
[    1.420524] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.9.0-rc7-next-20161129-00002-g32f49c81a550 #3
[    1.430140] Hardware name: Generic AM43 (Flattened Device Tree)
[    1.436407] [<c03105c0>] (unwind_backtrace) from [<c030bc0c>] (show_stack+0x10/0x14)
[    1.444572] [<c030bc0c>] (show_stack) from [<c059d1dc>] (dump_stack+0x98/0xac)
[    1.452190] [<c059d1dc>] (dump_stack) from [<c0341c40>] (__warn+0xe8/0x100)
[    1.459526] [<c0341c40>] (__warn) from [<c0341d08>] (warn_slowpath_null+0x20/0x28)
[    1.467495] [<c0341d08>] (warn_slowpath_null) from [<c09d0968>] (xhci_plat_probe+0x198/0x46c)
[    1.476478] [<c09d0968>] (xhci_plat_probe) from [<c07e8ccc>] (platform_drv_probe+0x4c/0xb0)
[    1.485284] [<c07e8ccc>] (platform_drv_probe) from [<c07e73a0>] (driver_probe_device+0x238/0x2d8)
[    1.494630] [<c07e73a0>] (driver_probe_device) from [<c07e74ec>] (__driver_attach+0xac/0xb0)
[    1.503515] [<c07e74ec>] (__driver_attach) from [<c07e56fc>] (bus_for_each_dev+0x68/0x9c)
[    1.512128] [<c07e56fc>] (bus_for_each_dev) from [<c07e697c>] (bus_add_driver+0x1a0/0x218)
[    1.520835] [<c07e697c>] (bus_add_driver) from [<c07e7d84>] (driver_register+0x78/0xf8)
[    1.529266] [<c07e7d84>] (driver_register) from [<c0301e90>] (do_one_initcall+0x40/0x174)
[    1.537885] [<c0301e90>] (do_one_initcall) from [<c1200dcc>] (kernel_init_freeable+0x160/0x200)
[    1.547050] [<c1200dcc>] (kernel_init_freeable) from [<c0bfb424>] (kernel_init+0x8/0x114)
[    1.555671] [<c0bfb424>] (kernel_init) from [<c0307eb8>] (ret_from_fork+0x14/0x3c)
[    1.563672] ---[ end trace e4a9b3c2939aa328 ]---
[    1.568622] xhci-hcd xhci-hcd.0.auto: xHCI Host Controller
[    1.574433] xhci-hcd xhci-hcd.0.auto: new USB bus registered, assigned bus number 1
[    1.582965] xhci-hcd xhci-hcd.0.auto: hcc params 0x0238f06d hci version 0x100 quirks 0x00010010
[    1.592220] xhci-hcd xhci-hcd.0.auto: irq 184, io mem 0x483d0000
[    1.599404] hub 1-0:1.0: USB hub found
[    1.603405] hub 1-0:1.0: 1 port detected
[    1.607961] xhci-hcd xhci-hcd.0.auto: xHCI Host Controller
[    1.613759] xhci-hcd xhci-hcd.0.auto: new USB bus registered, assigned bus number 2
[    1.621956] usb usb2: We don't know the algorithms for LPM for this host, disabling LPM.
[    1.631192] hub 2-0:1.0: USB hub found
[    1.635232] hub 2-0:1.0: 1 port detected
[    1.640216] usbcore: registered new interface driver usb-storage
[    1.648113] mousedev: PS/2 mouse device common for all mice
[    1.656851] i2c /dev entries driver
[    1.669885] sdhci: Secure Digital Host Controller Interface driver
[    1.676477] sdhci: Copyright(c) Pierre Ossman
[    1.682176] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.688395] Synopsys Designware Multimedia Card Interface Driver
[    1.695706] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.704481] ledtrig-cpu: registered to indicate activity on CPUs
[    1.711321] usbcore: registered new interface driver usbhid
[    1.717243] usbhid: USB HID core driver
[    1.724800] NET: Registered protocol family 10
[    1.730740] Segment Routing with IPv6
[    1.734657] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.741663] NET: Registered protocol family 17
[    1.746412] can: controller area network core (rev 20120528 abi 9)
[    1.752994] NET: Registered protocol family 29
[    1.757694] can: raw protocol (rev 20120528)
[    1.762191] can: broadcast manager protocol (rev 20161123 t)
[    1.768166] can: netlink gateway (rev 20130117) max_hops=1
[    1.774744] Key type dns_resolver registered
[    1.779488] omap_voltage_late_init: Voltage driver support not added
[    1.786352] ThumbEE CPU extension supported.
[    1.790857] Registering SWP/SWPB emulation handler
[    1.834501] vdds_ddr: Bringing 1350000uV into 1500000-1500000uV
[    1.851991] at24 0-0050: 32768 byte 24c256 EEPROM, writable, 64 bytes/write
[    1.859435] omap_i2c 44e0b000.i2c: bus 0 rev0.12 at 100 kHz
[    1.867377] omap_i2c 4802a000.i2c: bus 1 rev0.12 at 400 kHz
[    1.874061] backlight supply power not found, using dummy regulator
[    1.883981] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.945733] backlight supply power not found, using dummy regulator
[    1.954451] hctosys: unable to open rtc device (rtc0)
[    1.974121] net eth0: initializing cpsw version 1.15 (0)
[    2.077295] Micrel KSZ9031 Gigabit PHY 4a101000.mdio:04: attached PHY driver [Micrel KSZ9031 Gigabit PHY] (mii_bus:phy_addr=4a101000.mdio:04, irq=-1)
[    2.095810] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[    2.109310] mmc0: host does not support reading read-only switch, assuming write-enable
[    2.120717] mmc0: new high speed SDHC card at address aaaa
[    2.127163] mmcblk0: mmc0:aaaa SL08G 7.40 GiB 
[    2.133399]  mmcblk0: p1 p2 p3
[    2.138362] backlight supply power not found, using dummy regulator
[    3.144720] usb 1-1: new high-speed USB device number 2 using xhci-hcd
[    3.316825] usb-storage 1-1:1.0: USB Mass Storage device detected
[    3.323679] scsi host0: usb-storage 1-1:1.0
[    3.329545] backlight supply power not found, using dummy regulator
[    4.405865] scsi 0:0:0:0: Direct-Access     KINGSTON DataTraveler 3.0 1.01 PQ: 0 ANSI: 6
[    4.416474] backlight supply power not found, using dummy regulator
[    4.424782] sd 0:0:0:0: [sda] 15187968 512-byte logical blocks: (7.78 GB/7.24 GiB)
[    4.433338] sd 0:0:0:0: [sda] Write Protect is off
[    4.438857] sd 0:0:0:0: [sda] Write cache: disabled, read cache: enabled, supports DPO and FUA
- 05:14:17 [INFO] Host: root
- 05:14:57 [ERROR] On command: root waiting for (?-mix:root@.+[@:#]+) >>> error: execution expired
- 05:14:57 [INFO] Target: 
- 05:14:57 [INFO] Host: root
- 05:15:37 [ERROR] On command: root waiting for (?-mix:root@.+[@:#]+) >>> error: execution expired
- 05:15:37 [INFO] Target: 
- 05:15:37 [INFO] Host: root
- 05:16:17 [ERROR] On command: root waiting for (?-mix:root@.+[@:#]+) >>> error: execution expired
- 05:16:17 [INFO] Target: 
- 05:16:17 [INFO] Boot attempt 1/1 failed
- 05:16:17 [INFO] Collecting kernel traces via sysrq...
- 05:16:27 [INFO] 
- 05:16:37 [INFO] 
- 05:16:47 [INFO] 
- 05:16:48 [INFO] Disconnected serial from am437x-sk
URL:gtsystest.telogy.design.ti.com/vatf/tigtfarm08/tigtfarm08_vatf@am437x-sk/tigtfarm0811_29_2016_05_10_21/files/session_iteration_1/test_1
