- 01:20:34 [INFO] Starting target session
- 01:20:35 [INFO] Connected to am43xx-epos via serial 
- 01:20:35 [INFO] Host: #check prompt
- 01:20:38 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:.*\s+login)|[Pp]assword)) >>> error: execution expired
- 01:20:38 [INFO] Target: 
#check prompt
- 01:20:38 [INFO] Host: #check prompt
- 01:20:40 [ERROR] On command: #check prompt waiting for #check prompt.+?(?m-ix:root@am437x-evm.*#) >>> error: execution expired
- 01:20:40 [INFO] Target: 
#check prompt
- 01:20:40 [INFO] Host: #check prompt
- 01:20:42 [ERROR] On command: #check prompt waiting for #check prompt.+?(?m-ix:root@am437x-evm.*#) >>> error: execution expired
- 01:20:42 [INFO] Target: 
#check prompt
- 01:20:42 [INFO] Host: #check prompt
- 01:20:44 [ERROR] On command: #check prompt waiting for #check prompt.+?(?m-ix:root@am437x-evm.*#) >>> error: execution expired
- 01:20:44 [INFO] Target: 
#check prompt
- 01:20:44 [INFO] Disconnected serial from am43xx-epos
- 01:21:05 [INFO] Connected to am43xx-epos via serial 
- 01:21:05 [INFO] Host: 
- 01:21:06 [INFO] Target: 
ny key to stop autoboot:  2  0 
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
- 01:21:06 [INFO] Host: 
- 01:21:06 [INFO] Target: 
- 01:21:06 [INFO] Host: version
- 01:21:06 [INFO] Target: 
version
U-Boot 2016.05-g95c03ee8af (Aug 16 2016 - 20:58:03 -0400)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 01:21:06 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 01:21:07 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 01:21:07 [INFO] Host: setenv bootcmd  ''
- 01:21:07 [INFO] Target: 
setenv bootcmd  ''
- 01:21:07 [INFO] Host: setenv autoload 'no'
- 01:21:07 [INFO] Target: 
setenv autoload 'no'
- 01:21:07 [INFO] Host: setenv serverip '192.168.1.254'
- 01:21:07 [INFO] Target: 
setenv serverip '192.168.1.254'
- 01:21:07 [INFO] Host: setenv _initramfs -
- 01:21:07 [INFO] Target: 
setenv _initramfs -
- 01:21:07 [INFO] Host: printenv
- 01:21:07 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am43xx
board_name=AM43EPOS
board_rev=1.2B
board_serial=51134P390047
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_qspi=u-boot.bin raw 0x0 0x080000;u-boot.backup raw 0x080000 0x080000;u-boot-spl-os raw 0x100000 0x010000;u-boot-env raw 0x110000 0x010000;u-boot-env.backup raw 0x120000 0x010000;kernel raw 0x130000 0x800000
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=bef0f8b8
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43XXHS; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $board_name = AM43_IDK; then setenv fdtfile am437x-idk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
finduuid=part uuid mmc ${bootpart} uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run args_mmc; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2016.05-g95c03ee8af (Aug 16 2016 - 20:58:03 -0400)
Environment size: 4987/65532 bytes
- 01:21:07 [INFO] Host: printenv
- 01:21:08 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am43xx
board_name=AM43EPOS
board_rev=1.2B
board_serial=51134P390047
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_qspi=u-boot.bin raw 0x0 0x080000;u-boot.backup raw 0x080000 0x080000;u-boot-spl-os raw 0x100000 0x010000;u-boot-env raw 0x110000 0x010000;u-boot-env.backup raw 0x120000 0x010000;kernel raw 0x130000 0x800000
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=bef0f8b8
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43XXHS; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $board_name = AM43_IDK; then setenv fdtfile am437x-idk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
finduuid=part uuid mmc ${bootpart} uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run args_mmc; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2016.05-g95c03ee8af (Aug 16 2016 - 20:58:03 -0400)
Environment size: 4987/65532 bytes
- 01:21:08 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 01:21:08 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 01:21:08 [INFO] Host: setenv serverip '192.168.1.254'
- 01:21:08 [INFO] Target: 
setenv serverip '192.168.1.254'
- 01:21:08 [INFO] Host: setenv autoload 'no'
- 01:21:08 [INFO] Target: 
setenv autoload 'no'
- 01:21:08 [INFO] Host: dhcp
- 01:21:28 [ERROR] On command: dhcp waiting for dhcp.+?(?mi-x:DHCP client bound to address.*(?-mix:(?-mix:U-Boot#\s)|=>)) >>> error: execution expired
- 01:21:28 [INFO] Target: 
dhcp
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
No ethernet found.
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
- 01:21:38 [INFO] <INTERRUPT>
- 01:21:38 [INFO] Host: dhcp
- 01:21:58 [ERROR] On command: dhcp waiting for dhcp.+?(?mi-x:DHCP client bound to address.*(?-mix:(?-mix:U-Boot#\s)|=>)) >>> error: execution expired
- 01:21:58 [INFO] Target: 
dhcp
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
No ethernet found.
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
- 01:22:08 [INFO] <INTERRUPT>
- 01:22:08 [INFO] Host: dhcp
- 01:22:28 [ERROR] On command: dhcp waiting for dhcp.+?(?mi-x:DHCP client bound to address.*(?-mix:(?-mix:U-Boot#\s)|=>)) >>> error: execution expired
- 01:22:28 [INFO] Target: 
dhcp
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
No ethernet found.
incompatible machine/device type for reading mac address
ERROR: cpsw read efuse mac failed
at drivers/net/cpsw.c:1424/cpsw_eth_ofdata_to_platdata()
- 01:22:38 [INFO] <INTERRUPT>
- 01:22:38 [INFO] Boot attempt 1/1 failed
- 01:22:38 [INFO] Collecting kernel traces via sysrq...
- 01:22:49 [INFO] t
- 01:22:59 [INFO] l
- 01:23:09 [INFO] w
- 01:23:09 [INFO] Disconnected serial from am43xx-epos
URL:gtsystest.telogy.design.ti.com/vatf/tidfarm-02/tidfarm-02_vatf@am43xx-epos/tidfarm-0209_13_2016_01_20_33/files/session_iteration_1/test_1
