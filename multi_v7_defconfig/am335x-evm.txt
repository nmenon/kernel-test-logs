- 14:09:05 [INFO] Starting target session
- 14:09:05 [INFO] Connected to am335x-evm via serial 
- 14:09:05 [INFO] Host: #check prompt
- 14:09:08 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 14:09:08 [INFO] Target: 
- 14:09:08 [INFO] Host: #check prompt
- 14:09:10 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 14:09:10 [INFO] Target: 
- 14:09:10 [INFO] Host: #check prompt
- 14:09:12 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 14:09:12 [INFO] Target: 
- 14:09:12 [INFO] Host: #check prompt
- 14:09:14 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 14:09:14 [INFO] Target: 
- 14:09:14 [INFO] Disconnected serial from am335x-evm
- 14:09:15 [INFO] Connected to am335x-evm via serial 
- 14:09:15 [INFO] Host: 
- 14:09:18 [INFO] Target: 
U-Boot SPL 2015.07-g852c8ba (Mar 10 2016 - 22:36:03)
reading args
spl_load_image_fat_os: error reading image args, err - -1
reading u-boot.img
reading u-boot.img
U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600), Build: jenkins-ti-uboot-compile-test-83
       Watchdog enabled
I2C:   ready
DRAM:  1 GiB
NAND:  256 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
** Unable to read "uboot.env" from mmc0:1 **
Using default environment
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
- 14:09:18 [INFO] Host: 
- 14:09:18 [INFO] Target: 
U-Boot# 
- 14:09:18 [INFO] Host: version
- 14:09:18 [INFO] Target: 
version
U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600)
arm-linux-gnueabihf-gcc (Linaro GCC 4.9-2015.05) 4.9.3 20150413 (prerelease)
GNU ld (GNU Binutils) Linaro 2014.11-3-git 2.24.0.20141017
U-Boot# 
- 14:09:18 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  '
- 14:09:18 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  '
U-Boot# 
- 14:09:18 [INFO] Host: setenv bootcmd  ''
- 14:09:18 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 14:09:18 [INFO] Host: setenv autoload 'no'
- 14:09:19 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 14:09:19 [INFO] Host: setenv serverip '192.168.0.1'
- 14:09:19 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 14:09:19 [INFO] Host: printenv
- 14:09:19 [INFO] Target: 
printenv
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.6A
board_serial=14154P160058
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d0:ff:50:57:02:db
ethact=cpsw
ethaddr=d0:ff:50:57:02:d9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial_omap
stdin=serial_omap
stdout=serial_omap
usbnet_devaddr=d0:ff:50:57:02:db
vendor=ti
ver=U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600)
Environment size: 5129/131068 bytes
U-Boot# 
- 14:09:19 [INFO] Host: setenv _initramfs -
- 14:09:19 [INFO] Target: 
setenv _initramfs -
U-Boot# 
- 14:09:19 [INFO] Host: printenv
- 14:09:20 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.6A
board_serial=14154P160058
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d0:ff:50:57:02:db
ethact=cpsw
ethaddr=d0:ff:50:57:02:d9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial_omap
stdin=serial_omap
stdout=serial_omap
usbnet_devaddr=d0:ff:50:57:02:db
vendor=ti
ver=U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600)
Environment size: 5144/131068 bytes
U-Boot# 
- 14:09:20 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 14:09:20 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
U-Boot# 
- 14:09:20 [INFO] Host: setenv serverip '192.168.0.1'
- 14:09:20 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 14:09:20 [INFO] Host: setenv autoload 'no'
- 14:09:20 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 14:09:20 [INFO] Host: dhcp
- 14:09:22 [INFO] Target: 
dhcp
cpsw Waiting for PHY auto negotiation to complete.. done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
DHCP client bound to address 192.168.0.98 (1363 ms)
U-Boot# 
- 14:09:22 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/d02d3bd9a3ace866fac7e934eea85d9c
- 14:09:23 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-evm/d02d3bd9a3ace866fac7e934eea85d9c
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.98
Filename 'vatf_am335x-evm/d02d3bd9a3ace866fac7e934eea85d9c'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 ###################
	 6.9 MiB/s
done
Bytes transferred = 6957576 (6a2a08 hex)
U-Boot# 
- 14:09:23 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/b42ff2183b1f8c6b1df7a5da02e3e329
- 14:09:23 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am335x-evm/b42ff2183b1f8c6b1df7a5da02e3e329
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.98
Filename 'vatf_am335x-evm/b42ff2183b1f8c6b1df7a5da02e3e329'.
Load address: 0x88000000
Loading: *###
	 4.6 MiB/s
done
Bytes transferred = 38839 (97b7 hex)
U-Boot# 
- 14:09:23 [INFO] Host: ls mmc 0:1
- 14:09:24 [INFO] Target: 
ls mmc 0:1
    70924   mlo 
   376868   u-boot.img 
        4   ws-calibrate.rules 
        0   pointercal 
       14   .ipaddr 
5 file(s), 0 dir(s)
U-Boot# 
- 14:09:24 [INFO] Host: ls mmc 0:2
- 14:09:24 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 include
<DIR>       4096 srv
<DIR>       4096 home
<DIR>       4096 media
<DIR>       4096 opt
<DIR>       4096 var
<DIR>       4096 sys
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 usr
<DIR>       4096 bin
<DIR>       4096 mnt
<DIR>       4096 etc
<DIR>       4096 sbin
<DIR>       4096 www
<SYM>          8 tmp
<DIR>       4096 proc
<DIR>       4096 run
<DIR>       4096 lib
<DIR>       4096 .qws
<DIR>       4096 test
U-Boot# 
- 14:09:24 [INFO] Host: part uuid mmc 0:2
- 14:09:24 [INFO] Target: 
part uuid mmc 0:2
00000000-02
U-Boot# 
- 14:09:24 [INFO] Host: printenv
- 14:09:24 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.6A
board_serial=14154P160058
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait   ip=:::::eth0:dhcp 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d0:ff:50:57:02:db
ethact=cpsw
ethaddr=d0:ff:50:57:02:d9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=97b7
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.0.98
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial_omap
stdin=serial_omap
stdout=serial_omap
usbnet_devaddr=d0:ff:50:57:02:db
vendor=ti
ver=U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600)
Environment size: 5306/131068 bytes
U-Boot# 
- 14:09:24 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 14:09:24 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
U-Boot# 
- 14:09:24 [INFO] Host: printenv
- 14:09:25 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A33515BB
board_rev=1.6A
board_serial=14154P160058
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait   ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d0:ff:50:57:02:db
ethact=cpsw
ethaddr=d0:ff:50:57:02:d9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=97b7
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.0.98
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial_omap
stdin=serial_omap
stdout=serial_omap
usbnet_devaddr=d0:ff:50:57:02:db
vendor=ti
ver=U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600)
Environment size: 5361/131068 bytes
U-Boot# 
- 14:09:25 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdtaddr}; else bootz ${loadaddr} ${_initramfs} ${fdtaddr}; bootm ${loadaddr} ${_initramfs} ${fdtaddr}; fi'
- 14:09:25 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdtaddr}; else bootz ${loadaddr} ${_initramfs} ${fdtaddr}; bootm ${loadaddr} ${_initramfs} ${fdtaddr}; fi'
U-Boot# 
- 14:09:25 [INFO] Host: version
- 14:09:25 [INFO] Target: 
version
U-Boot 2015.07-g852c8ba (Mar 10 2016 - 22:36:03 -0600)
arm-linux-gnueabihf-gcc (Linaro GCC 4.9-2015.05) 4.9.3 20150413 (prerelease)
GNU ld (GNU Binutils) Linaro 2014.11-3-git 2.24.0.20141017
U-Boot# 
- 14:09:25 [INFO] Host: bdinfo
- 14:09:25 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x40000000
eth0name    = cpsw
ethaddr     = d0:ff:50:57:02:d9
eth1name    = usb_ether
eth1addr    = d0:ff:50:57:02:db
current eth = cpsw
ip_addr     = 192.168.0.98
baudrate    = 115200 bps
TLB addr    = 0xBFFF0000
relocaddr   = 0xBFF4F000
reloc off   = 0x3F74F000
irq_sp      = 0xBEF2EEC0
sp start    = 0xBEF2EEB0
U-Boot# 
- 14:09:25 [INFO] Host: mmc rescan; echo $?
- 14:09:25 [INFO] Target: 
mmc rescan; echo $?
U-Boot# 
- 14:09:25 [INFO] Host: fatwrite mmc 0:1 ${loadaddr} ws-calibrate.rules 4
- 14:09:26 [INFO] Target: 
fatwrite mmc 0:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
U-Boot# 
- 14:09:26 [INFO] Host: boot
- 14:12:56 [ERROR] On command: boot waiting for boot.+?(?-mix:login:) >>> error: execution expired
- 14:12:56 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x6a2a08 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8fff3000, end 8ffff7b6 ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.6.0-rc4-next-20160420-00002-g85dbc016f616 (nmenon@horus) (gcc version 4.9.3 20150413 (prerelease) (Linaro GCC 4.9-2015.05) ) #1 SMP Wed Apr 20 12:55:43 CDT 2016
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM
[    0.000000] cma: Reserved 64 MiB at 0xbb800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES2.1 (sgx neon )
[    0.000000] percpu: Embedded 12 pages/cpu @ef7ca000 s19648 r8192 d21312 u49152
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 260096
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait   ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
[    0.000000] Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
[    0.000000] Memory: 953952K/1046528K available (9468K kernel code, 1068K rwdata, 4244K rodata, 2048K init, 338K bss, 27040K reserved, 65536K cma-reserved, 194560K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)
[    0.000000]     vmalloc : 0xf0800000 - 0xff800000   ( 240 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xf0000000   ( 768 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0208000 - 0xc106426c   (14705 kB)
[    0.000000]       .init : 0xc1100000 - 0xc1300000   (2048 kB)
[    0.000000]       .data : 0xc1300000 - 0xc140b000   (1068 kB)
[    0.000000]        .bss : 0xc140c000 - 0xc1460ad8   ( 339 kB)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	Build-time adjustment of leaf fanout to 32.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=16 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000015] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000036] clocksource: timer1: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000046] OMAP clocksource: timer1 at 24000000 Hz
[    0.000235] Console: colour dummy device 80x30
[    0.000270] Calibrating delay loop... 997.78 BogoMIPS (lpj=2494464)
[    0.059195] pid_max: default: 32768 minimum: 301
[    0.059318] Mount-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.059328] Mountpoint-cache hash table entries: 2048 (order: 1, 8192 bytes)
[    0.060060] CPU: Testing write buffer coherency: ok
[    0.060429] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.060490] Setting up static identity map for 0x80300000 - 0x80300098
[    0.063662] Brought up 1 CPUs
[    0.063683] SMP: Total of 1 processors activated (997.78 BogoMIPS).
[    0.063691] CPU: All CPU(s) started in SVC mode.
[    0.065168] devtmpfs: initialized
[    0.075723] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.076503] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 9556302231375000 ns
[    0.080801] pinctrl core: initialized pinctrl subsystem
[    0.082997] NET: Registered protocol family 16
[    0.085259] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.105336] omap_hwmod: debugss: _wait_target_disable failed
[    0.161351] cpuidle: using governor menu
[    0.167227] OMAP GPIO hardware version 0.1
[    0.178061] omap-gpmc 50000000.gpmc: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/nandflash_pins_s0, deferring probe
[    0.181346] No ATAGs?
[    0.181369] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.181805] omap4_sram_init:Unable to allocate sram needed to handle errata I688
[    0.181816] omap4_sram_init:Unable to get sram pool needed to handle errata I688
[    0.185636] Serial: AMBA PL011 UART driver
[    0.205622] edma 49000000.edma: TI EDMA DMA engine driver
[    0.209959] vgaarb: loaded
[    0.210856] SCSI subsystem initialized
[    0.211470] usbcore: registered new interface driver usbfs
[    0.211536] usbcore: registered new interface driver hub
[    0.211597] usbcore: registered new device driver usb
[    0.212356] omap_i2c 44e0b000.i2c: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_i2c0_pins, deferring probe
[    0.212406] omap_i2c 4802a000.i2c: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_i2c1_pins, deferring probe
[    0.213080] pps_core: LinuxPPS API ver. 1 registered
[    0.213089] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.213120] PTP clock support registered
[    0.213293] EDAC MC: Ver: 3.0.0
[    0.216292] clocksource: Switched to clocksource timer1
[    0.226760] NET: Registered protocol family 2
[    0.227440] TCP established hash table entries: 8192 (order: 3, 32768 bytes)
[    0.227526] TCP bind hash table entries: 8192 (order: 4, 65536 bytes)
[    0.227636] TCP: Hash tables configured (established 8192 bind 8192)
[    0.227743] UDP hash table entries: 512 (order: 2, 16384 bytes)
[    0.227772] UDP-Lite hash table entries: 512 (order: 2, 16384 bytes)
[    0.227927] NET: Registered protocol family 1
[    0.228359] RPC: Registered named UNIX socket transport module.
[    0.228372] RPC: Registered udp transport module.
[    0.228378] RPC: Registered tcp transport module.
[    0.228384] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.229431] hw perfevents: enabled with armv7_cortex_a8 PMU driver, 5 counters available
[    0.231509] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.232492] workingset: timestamp_bits=28 max_order=18 bucket_order=0
[    0.243284] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    0.244403] NFS: Registering the id_resolver key type
[    0.244479] Key type id_resolver registered
[    0.244486] Key type id_legacy registered
[    0.244533] ntfs: driver 2.1.32 [Flags: R/O].
[    0.246060] bounce: pool size: 64 pages
[    0.246443] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 248)
[    0.246459] io scheduler noop registered
[    0.246466] io scheduler deadline registered
[    0.246511] io scheduler cfq registered (default)
[    0.250858] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.258464] backlight supply power not found, using dummy regulator
[    0.320739] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    0.323943] SuperH (H)SCI(F) driver initialized
[    0.324794] msm_serial: driver initialized
[    0.325119] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.325300] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 158, base_baud = 3000000) is a OMAP UART0
[    1.014056] console [ttyO0] enabled
[    1.018299] omap_uart 48022000.serial: no wakeirq for uart1
[    1.024311] 48022000.serial: ttyO1 at MMIO 0x48022000 (irq = 159, base_baud = 3000000) is a OMAP UART1
[    1.034552] STMicroelectronics ASC driver initialized
[    1.042169] omap_rng 48310000.rng: OMAP Random Number Generator ver. 20
[    1.050439] [drm] Initialized drm 1.1.0 20060810
[    1.071418] brd: module loaded
[    1.081134] loop: module loaded
[    1.092313] libphy: Fixed MDIO Bus: probed
[    1.097487] CAN device driver interface
[    1.103164] igb: Intel(R) Gigabit Ethernet Network Driver - version 5.3.0-k
[    1.110516] igb: Copyright (c) 2007-2014 Intel Corporation.
[    1.171371] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.177819] davinci_mdio 4a101000.mdio: detected phy mask fffffffe
[    1.185341] libphy: 4a101000.mdio: probed
[    1.189649] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    1.201424] cpsw 4a100000.ethernet: Detected MACID = d0:ff:50:57:02:d9
[    1.208403] Unable to handle kernel paging request at virtual address 30cfd0ae
[    1.216007] pgd = c0204000
[    1.218859] [30cfd0ae] *pgd=00000000
[    1.222637] Internal error: Oops: 5 [#1] SMP ARM
[    1.227478] Modules linked in:
[    1.230689] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.6.0-rc4-next-20160420-00002-g85dbc016f616 #1
[    1.240266] Hardware name: Generic AM33XX (Flattened Device Tree)
[    1.246655] task: ee860000 ti: ee85a000 task.ti: ee85a000
[    1.252329] PC is at cpsw_probe+0x7e4/0xfd0
[    1.256714] LR is at 0xe00
[    1.259551] pc : [<c08b847c>]    lr : [<00000e00>]    psr: 80000013
[    1.259551] sp : ee85bdd0  ip : 00000400  fp : ee8f9e00
[    1.271590] r10: ee8e5b40  r9 : eecdd090  r8 : 00000100
[    1.277067] r7 : 30cfd090  r6 : f087e300  r5 : 00000002  r4 : eed50000
[    1.283911] r3 : eecdb6f8  r2 : f087edc0  r1 : eecdb6d0  r0 : 00000050
[    1.290758] Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
[    1.298240] Control: 10c5387d  Table: 80204019  DAC: 00000051
[    1.304263] Process swapper/0 (pid: 1, stack limit = 0xee85a220)
[    1.310561] Stack: (0xee85bdd0 to 0xee85c000)
[    1.315130] bdc0:                                     00000001 c0a056f4 ee8f9e10 ee8f9e10
[    1.323709] bde0: 00000000 eed504c0 c13b1e34 eed502a8 c144ec50 ee8f9e10 00000000 00000000
[    1.332289] be00: f087ed00 00000000 00000000 00000000 00000000 f087e800 f087ea00 00000000
[    1.340867] be20: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 4a102000
[    1.349447] be40: 00000000 00000000 00000000 00000000 c0f4c72c ee8f9e10 ee8f9e10 c13b1e48
[    1.358026] be60: fffffdfb 00000000 00000000 00000000 00000000 c0781048 ee8f9e10 c144bf3c
[    1.366605] be80: c144bf44 c13b1e48 00000000 c077f770 ee8f9e10 c13b1e48 ee8f9e44 c13a3128
[    1.375184] bea0: c140c000 0000011e 00000000 c077f8c8 00000000 c13b1e48 c077f81c c077dae4
[    1.383765] bec0: ee83185c ee8e1eb4 c13b1e48 eecd9f00 00000000 c077ed64 c0f83034 c11a5834
[    1.392345] bee0: c13b1e48 c13b1e48 c1140644 c11a5834 c140c000 c0780100 c120bebc c1140644
[    1.400924] bf00: c11a5834 c0301ea0 c0c07580 00000011 00000000 00000000 00000000 c046578c
[    1.409503] bf20: 00000000 c1336780 0000011d c0c1cc1c c1024c68 c035c358 0000cccd c0f96f98
[    1.418082] bf40: c1023624 00000000 00000006 00000006 c1336768 efffc000 c120bebc 00000006
[    1.426662] bf60: c11a5834 c140c000 c140c000 0000011e c11a583c c1100db4 00000006 00000006
[    1.435241] bf80: 00000000 c11005a0 00000000 c0b6c41c 00000000 00000000 00000000 00000000
[    1.443820] bfa0: 00000000 c0b6c424 00000000 c0307eb8 00000000 00000000 00000000 00000000
[    1.452399] bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[    1.460978] bfe0: 00000000 00000000 00000000 00000000 00000013 00000000 3ffa70ed f9b9d5ff
[    1.469587] [<c08b847c>] (cpsw_probe) from [<c0781048>] (platform_drv_probe+0x4c/0xb0)
[    1.477899] [<c0781048>] (platform_drv_probe) from [<c077f770>] (driver_probe_device+0x214/0x2c0)
[    1.487210] [<c077f770>] (driver_probe_device) from [<c077f8c8>] (__driver_attach+0xac/0xb0)
[    1.496065] [<c077f8c8>] (__driver_attach) from [<c077dae4>] (bus_for_each_dev+0x68/0x9c)
[    1.504646] [<c077dae4>] (bus_for_each_dev) from [<c077ed64>] (bus_add_driver+0x1a0/0x218)
[    1.513319] [<c077ed64>] (bus_add_driver) from [<c0780100>] (driver_register+0x78/0xf8)
[    1.521721] [<c0780100>] (driver_register) from [<c0301ea0>] (do_one_initcall+0x40/0x174)
[    1.530314] [<c0301ea0>] (do_one_initcall) from [<c1100db4>] (kernel_init_freeable+0x15c/0x1fc)
[    1.539457] [<c1100db4>] (kernel_init_freeable) from [<c0b6c424>] (kernel_init+0x8/0x114)
[    1.548045] [<c0b6c424>] (kernel_init) from [<c0307eb8>] (ret_from_fork+0x14/0x3c)
[    1.555989] Code: e5837010 e7816000 e2800028 e5832004 (e1d721be) 
[    1.562489] ---[ end trace 210cbf1af9126975 ]---
[    1.567395] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    1.567395] 
[    1.576984] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    1.576984] 
[   41.736270] random: nonblocking pool is initialized
- 14:12:56 [INFO] Boot attempt 1/1 failed
- 14:12:56 [INFO] Collecting kernel traces via sysrq...
- 14:13:06 [INFO] 
- 14:13:16 [INFO] 
- 14:13:27 [INFO] 
- 14:13:27 [INFO] Disconnected serial from am335x-evm
URL:gtsystest.telogy.design.ti.com/vatf/tigitfarm04/tigitfarm04_vatf@am335x-evm/tigitfarm0404_20_2016_14_09_05/files/session_iteration_1/test_1
