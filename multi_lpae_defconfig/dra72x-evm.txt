- 02:49:27 [INFO] Starting target session
- 02:49:29 [INFO] Connected to dra72x-evm via serial 
- 02:49:29 [INFO] Host: #check prompt
- 02:49:32 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:.*\s+login)|[Pp]assword)) >>> error: execution expired
- 02:49:32 [INFO] Target: 
#check prompt
root@dra7xx-evm:/test# 
- 02:49:32 [INFO] Host: #check prompt
- 02:49:32 [INFO] Target: 
#check prompt
root@dra7xx-evm:/test# 
- 02:49:32 [INFO] Host: sync;poweroff
- 02:49:42 [INFO] Target: 
sync;poweroff
Broadcast message from root@dra7xx-evm (ttyO0) (Fri Feb 20 06:42:52 2015):
The system is going down for system halt NOW!
root@dj(*UUIM SYSFS Node Not Found
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 572)
dropbear.
Stopping telnet daemon.
Stopping tiipclad daemon.
Stopping system message bus: dbus.
hwclock: can't open '/dev/misc/rtc': No such file or directory
Error opening /dev/fb0: No such file or directory
Stopping syslogd/klogd: stopped syslogd (pid 610)
stopped klogd (pid 613)
done
Stopping thttpd.
Stopping Weston
stopping statd: done
ALSA: Storing mixer settings...
/usr/sbin/alsactl: save_state:1590: No soundcards found...
Stopping rpcbind daemon...
done.
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 624)
lighttpd.
Deconfiguring network interfaces... done.
Stopping Matrix GUI applicationstart-stop-daemon: warning: killing process 630: No such process
***************************************************************
***************************************************************
NOTICE: This file system contains the followin GPLv3 packages:
	binutils
	elfutils
	gdbserver
	libdw1
	libelf1
	parted
If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above
NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[  730.619647] EXT4-fs (mmcblk1p2): re-mounted. Opts: data=ordered
[  732.846438] reboot: Power down
- 02:49:42 [INFO] Disconnected serial from dra72x-evm
- 02:50:07 [INFO] Connected to dra72x-evm via serial 
- 02:50:07 [INFO] Host: 
- 02:50:09 [INFO] Target: 
U-Boot SPL 2014.07-g705aec7 (Jan 09 2015 - 15:40:31)
DRA722 ES1.0
reading args
spl_load_image_fat_os: error reading image args, err - -1
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-g705aec7 (Jan 09 2015 - 15:40:31)
CPU  : DRA722 ES1.0
Board: DRA7xx
I2C:   ready
DRAM:  1 GiB
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
Using default environment
SATA link 0 timeout.
AHCI 0001.0300 32 slots 1 ports 3 Gbps 0x1 impl SATA mode
flags: 64bit ncq stag pm led clo only pmp pio slum part ccc apst 
scanning bus for devices...
Found 0 device(s).
SCSI:  Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
- 02:50:09 [INFO] Host: 
- 02:50:09 [INFO] Target: 
U-Boot# 
- 02:50:09 [INFO] Host: version
- 02:50:09 [INFO] Target: 
U-Boot# version
U-Boot 2014.07-g705aec7 (Jan 09 2015 - 15:40:31)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 02:50:09 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 02:50:09 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 02:50:09 [INFO] Host: setenv bootcmd  ''
- 02:50:09 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 02:50:09 [INFO] Host: setenv autoload 'no'
- 02:50:09 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 02:50:09 [INFO] Host: setenv serverip '192.168.1.254'
- 02:50:09 [INFO] Target: 
setenv serverip '192.168.1.254'
U-Boot# 
- 02:50:09 [INFO] Host: printenv
- 02:50:10 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra72x
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936;boot part 1 1;rootfs part 1 2;MLO fat 1 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 1 1;spl-os-image fat 1 1;u-boot.img fat 1 1;uEnv.txt fat 1 1
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=08:00:28:01:f6:7f
ethact=cpsw
ethaddr=08:00:28:01:f6:7e
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = omap5_uevm; then setenv fdtfile omap5-uevm.dtb; fi; if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramdisk_addr_r=0x88080000
rdaddr=0x88080000
scsidevs=0
serverip=192.168.1.254
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2014.07-g705aec7 (Jan 09 2015 - 15:40:31)
vram=16M
Environment size: 3364/131067 bytes
U-Boot# 
- 02:50:10 [INFO] Host: printenv
- 02:50:10 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=dra7xx
board_name=dra72x
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936;boot part 1 1;rootfs part 1 2;MLO fat 1 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 1 1;spl-os-image fat 1 1;u-boot.img fat 1 1;uEnv.txt fat 1 1
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=08:00:28:01:f6:7f
ethact=cpsw
ethaddr=08:00:28:01:f6:7e
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = omap5_uevm; then setenv fdtfile omap5-uevm.dtb; fi; if test $board_name = dra7xx; then setenv fdtfile dra7-evm.dtb; fi;if test $board_name = dra72x; then setenv fdtfile dra72-evm.dtb; fi;if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} uEnv.txt
loadbootscript=fatload mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile};
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
mmcargs=setenv bootargs console=${console} ${optargs} vram=${vram} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev=0
mmcroot=/dev/mmcblk1p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramdisk_addr_r=0x88080000
rdaddr=0x88080000
scsidevs=0
serverip=192.168.1.254
soc=omap5
stderr=serial
stdin=serial
stdout=serial
usbtty=cdc_acm
vendor=ti
ver=U-Boot 2014.07-g705aec7 (Jan 09 2015 - 15:40:31)
vram=16M
Environment size: 3364/131067 bytes
U-Boot# 
- 02:50:10 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 02:50:10 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
U-Boot# 
- 02:50:10 [INFO] Host: setenv serverip '192.168.1.254'
- 02:50:10 [INFO] Target: 
setenv serverip '192.168.1.254'
U-Boot# 
- 02:50:10 [INFO] Host: setenv ipaddr dhcp
- 02:50:10 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 02:50:10 [INFO] Host: setenv autoload 'no'
- 02:50:10 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 02:50:10 [INFO] Host: dhcp
- 02:51:10 [ERROR] On command: dhcp waiting for dhcp.+?(?-mix:U-Boot#) >>> error: execution expired
- 02:51:10 [INFO] Target: 
dhcp
cpsw Waiting for PHY auto negotiation to complete.. done
link up on port 1, speed 1000, full duplex
BOOTP broadcast 1
cpsw Waiting for PHY auto negotiation to complete....... done
BOOTP broadcast 2
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 3
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 4
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 5
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 6
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 7
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 8
cpsw Waiting for PHY auto negotiation to complete...... done
cpsw Waiting for PHY auto negotiation to complete....... done
BOOTP broadcast 9
cpsw Waiting for PHY auto negotiation to complete...... done
cpsw Waiting for PHY auto negotiation to complete...... done
BOOTP broadcast 10
cpsw Waiting for PHY auto negotiation to complete...... done
cpsw Waiting for PHY auto negotiation to complete...... done
Retry count exceeded; starting again
link up on port 1, speed 1000, full duplex
cpsw Waiting for PHY auto negotiation to complete......
- 02:51:10 [INFO] Boot attempt 0/1 failed, trying again.....
URL:gtsystest.telogy.design.ti.com/vatf/tidfarm-01.dal.design.ti.com/tidfarm-01.dal.design.ti.com_vatf@dra72x-evm/tidfarm-01.dal.design.ti.com08_31_2015_02_49_25/files/session_iteration_1/test_1
