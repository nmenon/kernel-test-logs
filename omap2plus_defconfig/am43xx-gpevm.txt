- 06:34:52 [INFO] Starting target session
- 06:34:52 [INFO] Connected to am43xx-gpevm via serial 
- 06:34:52 [INFO] Host: #check prompt
- 06:34:55 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?m-ix:.*login:)|[Pp]assword)) >>> error: execution expired
- 06:34:55 [INFO] Target: 
#check prompt
root@am437x-evm:/test# 
- 06:34:55 [INFO] Host: #check prompt
- 06:34:55 [INFO] Target: 
#check prompt
root@am437x-evm:/test# 
- 06:34:55 [INFO] Host: sync;poweroff
- 06:35:09 [INFO] Target: 
sync;poweroff
INIT: Switching to runlevel: 0
INIT: Sending processes the TERM signal
Broadcast message from root@am437x-evm (ttyS0) (Thu Apr 16 02:06:53 2015):
The system is going down for system halt NOW!
root@am437x-evm:/test# 
INIT: SendiStopping syslogd/klogd: stopped syslogd (pid 1324)
stopped klogd (pid 1327)
done
Deconfiguring network interfaces... done.
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[ 2515.117069] reboot: Power down
[ 2515.120174] System will go to power_off state in approx. 1 second
- 06:35:09 [INFO] Disconnected serial from am43xx-gpevm
- 06:35:10 [INFO] Connected to am43xx-gpevm via serial 
- 06:35:10 [INFO] Host: 
- 06:35:12 [INFO] Target: 
U-Boot SPL 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
SPL: Please implement spl_start_uboot() for your board
SPL: Direct Linux boot not active!
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
I2C:   ready
DRAM:  1 GiB
NAND:  512 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
Using default environment
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
- 06:35:13 [INFO] Host: 
- 06:35:13 [INFO] Target: 
U-Boot# 
- 06:35:13 [INFO] Host: version
- 06:35:13 [INFO] Target: 
version
U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 06:35:13 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
- 06:35:13 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk rootwait '
U-Boot# 
- 06:35:13 [INFO] Host: setenv bootcmd  ''
- 06:35:13 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 06:35:13 [INFO] Host: setenv autoload 'no'
- 06:35:13 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:35:13 [INFO] Host: setenv serverip '192.168.0.1'
- 06:35:13 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:35:13 [INFO] Host: setenv mmcdev ' '
- 06:35:13 [INFO] Target: 
setenv mmcdev ' '
U-Boot# 
- 06:35:13 [INFO] Host: printenv
- 06:35:14 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load ${devtype} ${devnum} ${loadaddr} ${bootenv}
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev= 
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
serverip=192.168.0.1
soc=am33xx
stderr=serial
stdin=serial
stdout=serial
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
Environment size: 3704/65532 bytes
U-Boot# 
- 06:35:14 [INFO] Host: printenv
- 06:35:14 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am43xx
board_name=AM43__GP
board_rev=1.2A
bootargs=console=ttyO0,115200n8 earlyprintk rootwait 
bootcmd=
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=MLO raw 0x100 0x100 mmcpart 0;u-boot.img raw 0x300 0x1000 mmcpart 0
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000
dfu_bufsiz=0x10000
eth1addr=34:b1:f7:31:60:9b
ethact=cpsw
ethaddr=34:b1:f7:31:60:99
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = AM43EPOS; then setenv fdtfile am43x-epos-evm.dtb; fi; if test $board_name = AM43__GP; then setenv fdtfile am437x-gp-evm.dtb; fi; if test $board_name = AM43__SK; then setenv fdtfile am437x-sk-evm.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load ${devtype} ${devnum} ${loadaddr} ${bootenv}
loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load ${devtype} ${devnum} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device ${devnum};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from mmc${mmcdev} ...; run mmcargs; bootz ${loadaddr} - ${fdtaddr}; fi;fi;
mmcdev= 
mmcroot=/dev/mmcblk0p2 rw
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:256k(NAND.SPL),256k(NAND.SPL.backup1),256k(NAND.SPL.backup2),256k(NAND.SPL.backup3),512k(NAND.u-boot-spl-os),1m(NAND.u-boot),256k(NAND.u-boot-env),256k(NAND.u-boot-env.backup1),7m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,4096
nandrootfstype=ubifs rootwait=1
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
serverip=192.168.0.1
soc=am33xx
stderr=serial
stdin=serial
stdout=serial
usbargs=setenv bootargs console=${console} ${optargs} root=${usbroot} rootfstype=${usbrootfstype}
usbboot=setenv devnum ${usbdev}; setenv devtype usb; usb start ${usbdev}; if usb dev ${usbdev}; then if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run loadfdt; echo Booting from usb ${usbdev}...; run usbargs;bootz ${loadaddr} - ${fdtaddr}; fi;fi
usbdev=0
usbroot=/dev/sda2 rw
usbrootfstype=ext4 rootwait
vendor=ti
ver=U-Boot 2014.07-g8f725ef (Oct 12 2014 - 06:29:01)
Environment size: 3704/65532 bytes
U-Boot# 
- 06:35:14 [INFO] Host: setenv bootargs ''${bootargs}' ip=dhcp '
- 06:35:14 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=dhcp '
U-Boot# 
- 06:35:14 [INFO] Host: setenv serverip '192.168.0.1'
- 06:35:14 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 06:35:14 [INFO] Host: setenv ipaddr dhcp
- 06:35:14 [INFO] Target: 
setenv ipaddr dhcp
U-Boot# 
- 06:35:14 [INFO] Host: setenv autoload 'no'
- 06:35:14 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 06:35:14 [INFO] Host: dhcp
- 06:35:17 [INFO] Target: 
dhcp
cpsw Waiting for PHY auto negotiation to complete... done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.205
U-Boot# 
- 06:35:17 [INFO] Host: setenv serverip '192.168.0.1'
- 06:35:37 [ERROR] On command: setenv serverip '192.168.0.1' waiting for setenv serverip '192.168.0.1'.+?(?m-ix:U-Boot\s*#) >>> error: execution expired
- 06:35:37 [INFO] Target: 
serverip '192.168.0.1'
Unknown command 'serverip' - try 'help'
U-Boot# 
URL:gtsystest.telogy.design.ti.com/vatf/tigtfarm06/tigtfarm06_vatf@am43xx-gpevm/tigtfarm0605_25_2015_06_34_52/files/session_iteration_1/test_1
