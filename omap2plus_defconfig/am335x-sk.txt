- 01:38:22 [INFO] Starting target session
- 01:38:23 [INFO] Connected to am335x-sk via serial 
- 01:38:23 [INFO] Host: #check prompt
- 01:38:26 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 01:38:26 [INFO] Target: 
#check prompt
root@am335x-evm:/test# 
- 01:38:26 [INFO] Host: #check prompt
- 01:38:26 [INFO] Target: 
#check prompt
root@am335x-evm:/test# 
- 01:38:26 [INFO] Host: sync;poweroff
- 01:39:47 [INFO] Target: 
sync;poweroff
Broadcast message from root@am335x-evm (ttyS0) (Tue Feb 16 20:34:17 2016):
The system is going down for system halt NOW!
INIT: Switching to runlevel: 0
root@am335x-evm:/test# 
INIT: Sending processes the TERM signal
UIM SYSFS Node Not Found
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 737)
dropbear.
Stopping telnet daemon.
Stopping system message bus: dbus.
Stopping syslogd/klogd: stopped syslogd (pid 759)
stopped klogd (pid 761)
done
Stopping thttpd.
Stopping Weston
stopping statd: done
Stopping random number generator daemon.
ALSA: Storing mixer settings...
Stopping rpcbind daemon...
done.
Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 768)
lighttpd.
NOT deconfiguring network interfaces: / is an NFS mount
Stopping Matrix GUI applicationstart-stop-daemon: warning: killing process 778: No such process
Disabling thermal zones...
/etc/rc0.d/K98thermal-zone-init: line 13: /sys/class/thermal/thermal_zone*/mode: No such file or directory
***************************************************************
***************************************************************
NOTICE: This file system contains the following GPLv3 packages:
	autoconf
	binutils
	cpp-symlinks
	cpp
	g++-symlinks
	g++
	gcc-symlinks
	gcc
	gdb
	gdbserver
	gstreamer1.0-libav
	libgmp10
	libmpc3
	libmpfr4
	make
If you do not wish to distribute GPLv3 components please remove
the above packages prior to distribution.  This can be done using
the opkg remove command.  i.e.:
    opkg remove <package>
Where <package> is the name printed in the list above
NOTE: If the package is a dependency of another package you
      will be notified of the dependent packages.  You should
      use the --force-removal-of-dependent-packages option to
      also remove the dependent packages as well
***************************************************************
***************************************************************
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Unmounting remote filesystems...
Deactivating swap...
Unmounting local filesystems...
[ 8164.911266] musb-hdrc musb-hdrc.2.auto: remove, state 1
[ 8164.921713] usb usb2: USB disconnect, device number 1
[ 8164.926927] usb 2-1: USB disconnect, device number 2
[ 8165.394413] musb-hdrc musb-hdrc.2.auto: USB bus 2 deregistered
[ 8165.420777] musb-hdrc musb-hdrc.1.auto: remove, state 4
[ 8165.426534] usb usb1: USB disconnect, device number 1
[ 8165.463470] musb-hdrc musb-hdrc.1.auto: USB bus 1 deregistered
[ 8165.586585] reboot: System halted
- 01:39:47 [INFO] Disconnected serial from am335x-sk
- 01:39:53 [INFO] Connected to am335x-sk via serial 
- 01:39:53 [INFO] Host: 
- 01:39:55 [INFO] Target: 
reading args
spl_load_image_fat_os: error reading image args, err - -1
reading u-boot.img
reading u-boot.img
U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57), Build: jenkins-ti-linux-3-14-y_opentest-216
I2C:   ready
DRAM:  256 MiB
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
** Unable to read "uboot.env" from mmc0:1 **
Using default environment
Net:   <ethaddr> not set. Validating first E-fuse MAC
cpsw, usb_ether
Hit any key to stop autoboot:  1  0 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
U-Boot# 
- 01:39:55 [INFO] Host: 
- 01:39:55 [INFO] Target: 
U-Boot# 
- 01:39:55 [INFO] Host: version
- 01:39:55 [INFO] Target: 
U-Boot# version
U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 01:39:55 [INFO] Host: setenv bootargs 'console=ttyS0,115200n8 earlyprintk=serial,ttyS0,115200n8 rootwait '
- 01:39:55 [INFO] Target: 
setenv bootargs 'console=ttyS0,115200n8 earlyprintk=serial,ttyS0,115200n8 rootwait '
U-Boot# 
- 01:39:55 [INFO] Host: setenv bootcmd  ''
- 01:39:55 [INFO] Target: 
setenv bootcmd  ''
U-Boot# 
- 01:39:55 [INFO] Host: setenv autoload 'no'
- 01:39:55 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 01:39:55 [INFO] Host: setenv serverip '192.168.0.1'
- 01:39:55 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 01:39:55 [INFO] Host: printenv
- 01:39:56 [INFO] Target: 
printenv
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
boot_fdt=try
bootargs=console=ttyS0,115200n8 earlyprintk=serial,ttyS0,115200n8 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 0x100 0x100;u-boot.img.raw mmc 0x300 0x400;spl-os-args.raw mmc 0x80 0x80;spl-os-image.raw mmc 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=d4:94:a1:88:6b:ea
ethact=cpsw
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=d4:94:a1:88:6b:ea
vendor=ti
ver=U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57)
Environment size: 4492/131068 bytes
U-Boot# 
- 01:39:56 [INFO] Host: setenv _initramfs -
- 01:39:56 [INFO] Target: 
setenv _initramfs -
U-Boot# 
- 01:39:56 [INFO] Host: printenv
- 01:39:56 [INFO] Target: 
printenv
_initramfs=-
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
boot_fdt=try
bootargs=console=ttyS0,115200n8 earlyprintk=serial,ttyS0,115200n8 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 0x100 0x100;u-boot.img.raw mmc 0x300 0x400;spl-os-args.raw mmc 0x80 0x80;spl-os-image.raw mmc 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
eth1addr=d4:94:a1:88:6b:ea
ethact=cpsw
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=d4:94:a1:88:6b:ea
vendor=ti
ver=U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57)
Environment size: 4507/131068 bytes
U-Boot# 
- 01:39:56 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 01:39:56 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
U-Boot# 
- 01:39:56 [INFO] Host: setenv serverip '192.168.0.1'
- 01:39:56 [INFO] Target: 
setenv serverip '192.168.0.1'
U-Boot# 
- 01:39:56 [INFO] Host: setenv autoload 'no'
- 01:39:57 [INFO] Target: 
setenv autoload 'no'
U-Boot# 
- 01:39:57 [INFO] Host: dhcp
- 01:39:59 [INFO] Target: 
dhcp
cpsw Waiting for PHY auto negotiation to complete... done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
DHCP client bound to address 192.168.0.91
U-Boot# 
- 01:39:59 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-sk1/d74a25e06a2552d7a228676f54f8c4e6
- 01:40:00 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-sk1/d74a25e06a2552d7a228676f54f8c4e6
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.91
Filename 'vatf_am335x-sk1/d74a25e06a2552d7a228676f54f8c4e6'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 ########################################################
	 8 MiB/s
done
Bytes transferred = 3680736 (3829e0 hex)
U-Boot# 
- 01:40:00 [INFO] Host: tftp ${fdtaddr} 192.168.0.1:vatf_am335x-sk1/67f8d71a0f1042d2a64b6812ab53f15c
- 01:40:00 [INFO] Target: 
tftp ${fdtaddr} 192.168.0.1:vatf_am335x-sk1/67f8d71a0f1042d2a64b6812ab53f15c
link up on port 0, speed 1000, full duplex
Using cpsw device
TFTP from server 192.168.0.1; our IP address is 192.168.0.91
Filename 'vatf_am335x-sk1/67f8d71a0f1042d2a64b6812ab53f15c'.
Load address: 0x88000000
Loading: *###
	 5.9 MiB/s
done
Bytes transferred = 37093 (90e5 hex)
U-Boot# 
- 01:40:00 [INFO] Host: ls mmc 0:1
- 01:40:00 [INFO] Target: 
ls mmc 0:1
    77476   mlo 
   447116   u-boot.img 
  2627551   u-boot 
   447084   u-boot.bin 
   905453   u-boot-spl 
    76900   u-boot-spl.bin 
      259   uboot_build.txt 
       53   pointercal 
            windows_users/
       13   .ipaddr 
            old_uboot/
        4   ws-calibrate.rules 
10 file(s), 2 dir(s)
U-Boot# 
- 01:40:00 [INFO] Host: ls mmc 0:2
- 01:40:00 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 etc
<DIR>       4096 home
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 mnt
<DIR>       4096 opt
<DIR>       4096 proc
<DIR>       4096 sbin
<DIR>       4096 srv
<DIR>       4096 sys
<SYM>          8 tmp
<DIR>       4096 usr
<DIR>       4096 var
<DIR>       4096 www
<SYM>          8 run
<DIR>       4096 Settings
<DIR>       4096 test
U-Boot# 
- 01:40:00 [INFO] Host: part uuid mmc 0:2
- 01:40:00 [INFO] Target: 
part uuid mmc 0:2
00000000-02
U-Boot# 
- 01:40:00 [INFO] Host: printenv
- 01:40:01 [INFO] Target: 
printenv
_initramfs=-
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
boot_fdt=try
bootargs=console=ttyS0,115200n8 earlyprintk=serial,ttyS0,115200n8 rootwait  ip=:::::eth0:dhcp 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 0x100 0x100;u-boot.img.raw mmc 0x300 0x400;spl-os-args.raw mmc 0x80 0x80;spl-os-image.raw mmc 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=d4:94:a1:88:6b:ea
ethact=cpsw
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=90e5
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
ipaddr=192.168.0.91
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=d4:94:a1:88:6b:ea
vendor=ti
ver=U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57)
Environment size: 4669/131068 bytes
U-Boot# 
- 01:40:01 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 01:40:01 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
U-Boot# 
- 01:40:01 [INFO] Host: printenv
- 01:40:01 [INFO] Target: 
printenv
_initramfs=-
arch=arm
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
boot_fdt=try
bootargs=console=ttyS0,115200n8 earlyprintk=serial,ttyS0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenv=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc mmc 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw mmc 0x100 0x100;u-boot.img.raw mmc 0x300 0x400;spl-os-args.raw mmc 0x80 0x80;spl-os-image.raw mmc 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
eth1addr=d4:94:a1:88:6b:ea
ethact=cpsw
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtfile=undefined
fileaddr=88000000
filesize=90e5
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc ...; env import -t -r $loadaddr $filesize
ipaddr=192.168.0.91
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=load mmc ${mmcdev} ${loadaddr} ${bootenv}
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcargs=setenv bootargs console=${console} ${optargs} root=${mmcroot} rootfstype=${mmcrootfstype}
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootenv; then echo Loaded environment from ${bootenv};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcroot=/dev/mmcblk0p2 ro
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; tftp ${loadaddr} ${bootfile}; tftp ${fdtaddr} ${fdtfile}; run netargs; bootz ${loadaddr} - ${fdtaddr}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial
stdin=serial
stdout=serial
usbnet_devaddr=d4:94:a1:88:6b:ea
vendor=ti
ver=U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57)
Environment size: 4724/131068 bytes
U-Boot# 
- 01:40:01 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdtaddr}; else bootz ${loadaddr} ${_initramfs} ${fdtaddr}; bootm ${loadaddr} ${_initramfs} ${fdtaddr}; fi'
- 01:40:01 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdtaddr}; else bootz ${loadaddr} ${_initramfs} ${fdtaddr}; bootm ${loadaddr} ${_initramfs} ${fdtaddr}; fi'
U-Boot# 
- 01:40:01 [INFO] Host: version
- 01:40:02 [INFO] Target: 
version
U-Boot 2014.07-00071-gaca0808 (Oct 02 2014 - 11:22:57)
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 4.7.3 20130226 (prerelease)
GNU ld (crosstool-NG linaro-1.13.1-4.7-2013.03-20130313 - Linaro GCC 2013.03) 2.23.1
U-Boot# 
- 01:40:02 [INFO] Host: bdinfo
- 01:40:02 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
eth0name    = cpsw
ethaddr     = d4:94:a1:88:6b:e9
eth1name    = usb_ether
eth1addr    = d4:94:a1:88:6b:ea
current eth = cpsw
ip_addr     = 192.168.0.91
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8F741000
reloc off   = 0x0EF41000
irq_sp      = 0x8E720EE0
sp start    = 0x8E720ED0
U-Boot# 
- 01:40:02 [INFO] Host: mmc rescan; echo $?
- 01:40:02 [INFO] Target: 
mmc rescan; echo $?
U-Boot# 
- 01:40:02 [INFO] Host: fatwrite mmc 0:1 ${loadaddr} ws-calibrate.rules 4
- 01:40:02 [INFO] Target: 
fatwrite mmc 0:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
U-Boot# 
- 01:40:02 [INFO] Host: boot
- 01:43:32 [ERROR] On command: boot waiting for boot.+?(?-mix:login:) >>> error: execution expired
- 01:43:32 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x3829e0 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8e713000, end 8e71f0e4 ... OK
Starting kernel ...
- 01:43:32 [INFO] Boot attempt 1/1 failed
- 01:43:32 [INFO] Collecting kernel traces via sysrq...
- 01:43:42 [INFO] 
- 01:43:52 [INFO] 
- 01:44:03 [INFO] 
- 01:44:03 [INFO] Disconnected serial from am335x-sk
URL:gtsystest.telogy.design.ti.com/vatf/tigitfarm04/tigitfarm04_vatf@am335x-sk1/tigitfarm0402_17_2016_01_38_22/files/session_iteration_1/test_1
