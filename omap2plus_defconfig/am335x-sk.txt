- 00:34:25 [INFO] Starting target session
- 00:34:26 [INFO] Connected to am335x-sk via serial 
- 00:34:26 [INFO] Host: #check prompt
- 00:34:29 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:.*\s+login)|[Pp]assword)) >>> error: execution expired
- 00:34:29 [INFO] Target: 
#check prompt
root@am335x-evm:~# 
- 00:34:29 [INFO] Host: #check prompt
- 00:34:29 [INFO] Target: 
#check prompt
root@am335x-evm:~# 
- 00:34:29 [INFO] Host: sync;poweroff
- 00:34:56 [INFO] Target: 
sync;poweroff
         Stopping Save/Restore Sound Card State...
         Stopping User Manager for UID 0...
[[0;32m  OK  [0m] Stopped target Sound Card.
[[0;32m  OK  [0m] Stopped target Timers.
[[0;32m  OK  [0m] Stopped Daily Cleanup of Temporary Directories.
[[0;32m  OK  [0m] Stopped target System Time Synchronized.
[[0;32m  OK  [0m] Stopped target Multi-User System.
         Stopping Network Name Resolution...
         Stopping strongSwan IPsec IKEv1/IKEv2 daemon using ipsec.conf...
[[0;32m  OK  [0m] Stopped target Login Prompts.
         Stopping Serial Getty on ttyS0...
         Stopping Getty on tty1...
         Stopping Serial Getty on ttyS3...
         Stopping parse-ip.service...
         Stopping Lightning Fast Webserver With Light System Requirements...
         Stopping System Logging Service...
         Stopping thermal-zone-init.service...
[[0;32m  OK  [0m] Stopped Session c1 of user root.
         Stopping Kernel Logging Service...
[[0;32m  OK  [0m] Closed Load/Save RF Kill Switch Status /dev/rfkill Watch.
[[0;32m  OK  [0m] Stopped strongSwan IPsec IKEv1/IKEv2 daemon using ipsec.conf.
[[0;32m  OK  [0m] Stopped Kernel Logging Service.
[[0;32m  OK  [0m] Stopped System Logging Service.
[[0;32m  OK  [0m] Stopped Network Name Resolution.
[[0;32m  OK  [0m] Stopped Serial Getty on ttyS0.
[[0;32m  OK  [0m] Stopped Getty on tty1.
[[0;32m  OK  [0m] Stopped Lightning Fast Webserver With Light System Requirements.
[[0;32m  OK  [0m] Stopped User Manager for UID 0.
[[0;32m  OK  [0m] Stopped Serial Getty on ttyS3.
[[0;32m  OK  [0m] Stopped Save/Restore Sound Card State.
[[0;32m  OK  [0m] Stopped parse-ip.service.
[[0;32m  OK  [0m] Stopped thermal-zone-init.service.
[[0;32m  OK  [0m] Stopped User Manager for UID 0.
         Stopping matrix-gui-2.0.service...
[[0;32m  OK  [0m] Removed slice User Slice of root.
         Stopping Login Service...
[[0;32m  OK  [0m] Removed slice system-getty.slice.
[[0;32m  OK  [0m] Removed slice system-serial\x2dgetty.slice.
         Stopping Permit User Sessions...
[[0;32m  OK  [0m] Stopped target Network.
         Stopping Network Service...
[[0;32m  OK  [0m] Stopped Login Service.
[[0;32m  OK  [0m] Stopped Network Service.
[[0;32m  OK  [0m] Stopped matrix-gui-2.0.service.
[[0;32m  OK  [0m] Stopped Permit User Sessions.
         Stopping rng-tools.service...
         Stopping D-Bus System Message Bus...
[[0;32m  OK  [0m] Stopped D-Bus System Message Bus.
[[0;32m  OK  [0m] Stopped rng-tools.service.
         Stopping thttpd.service...
[[0;32m  OK  [0m] Stopped thttpd.service.
         Stopping telnetd.service...
[[0;32m  OK  [0m] Stopped telnetd.service.
         Stopping weston.service...
[[0;32m  OK  [0m] Stopped weston.service.
[[0;32m  OK  [0m] Stopped target Remote File Systems.
         Stopping rc.pvr.service...
[[0;32m  OK  [0m] Stopped rc.pvr.service.
         Stopping uim-sysfs.service...
[[0;32m  OK  [0m] Stopped uim-sysfs.service.
[[0;32m  OK  [0m] Stopped target Basic System.
[[0;32m  OK  [0m] Stopped target Sockets.
[[0;32m  OK  [0m] Closed dropbear.socket.
[[0;32m  OK  [0m] Closed Syslog Socket.
[[0;32m  OK  [0m] Closed D-Bus System Message Bus Socket.
[[0;32m  OK  [0m] Closed RPCbind Server Activation Socket.
[[0;32m  OK  [0m] Stopped target Paths.
[[0;32m  OK  [0m] Stopped Forward Password Requests to Wall Directory Watch.
[[0;32m  OK  [0m] Stopped Dispatch Password Requests to Console Directory Watch.
[[0;32m  OK  [0m] Stopped target Slices.
[[0;32m  OK  [0m] Removed slice User and Session Slice.
[[0;32m  OK  [0m] Stopped target System Initialization.
[[0;32m  OK  [0m] Stopped Setup Virtual Console.
[[0;32m  OK  [0m] Stopped Apply Kernel Variables.
         Stopping Load/Save Random Seed...
[[0;32m  OK  [0m] Stopped Synchronize System and HW clocks.
[[0;32m  OK  [0m] Stopped target Swap.
         Stopping Load/Save Screen Backlight...htness of backlight:backlight...
         Stopping Network Time Synchronization...
[[0;32m  OK  [0m] Stopped Load/Save Random Seed.
[[0;32m  OK  [0m] Stopped Load/Save Screen Backlight Brightness of backlight:backlight.
[[0;32m  OK  [0m] Removed slice system-systemd\x2dbacklight.slice.
[[0;1;31m*[0m[0;31m*    [0m] A stop job is running for Network T...Synchronization (10s / 1min 34s)
[K[[0;31m*[0;1;31m*[0m[0;31m*   [0m] A stop job is running for Network T...Synchronization (11s / 1min 34s)
[K[ [0;31m*[0;1;31m*[0m[0;31m*  [0m] A stop job is running for Network T...Synchronization (11s / 1min 34s)
[K[  [0;31m*[0;1;31m*[0m[0;31m* [0m] A stop job is running for Network T...Synchronization (12s / 1min 34s)
[K[   [0;31m*[0;1;31m*[0m[0;31m*[0m] A stop job is running for Network T...Synchronization (12s / 1min 34s)
[K[    [0;31m*[0;1;31m*[0m] A stop job is running for Network T...Synchronization (13s / 1min 34s)
[K[     [0;31m*[0m] A stop job is running for Network T...Synchronization (13s / 1min 34s)
[K[    [0;31m*[0;1;31m*[0m] A stop job is running for Network T...Synchronization (14s / 1min 34s)
[K[   [0;31m*[0;1;31m*[0m[0;31m*[0m] A stop job is running for Network T...Synchronization (14s / 1min 34s)
[K[[0;32m  OK  [0m] Stopped Network Time Synchronization.
[[0;32m  OK  [0m] Stopped Create Volatile Files and Directories.
[[0;32m  OK  [0m] Stopped target Local File Systems.
         Unmounting /media/ram...
         Unmounting /var/volatile...
         Unmounting /run/user/0...
         Unmounting /run/media/mmcblk0p2...
         Unmounting /run/media/mmcblk0p1...
         Unmounting Temporary Directory...
[[0;32m  OK  [0m] Unmounted /media/ram.
[[0;32m  OK  [0m] Unmounted /var/volatile.
[[0;32m  OK  [0m] Unmounted /run/user/0.
[[0;32m  OK  [0m] Unmounted /run/media/mmcblk0p2.
[[0;32m  OK  [0m] Unmounted /run/media/mmcblk0p1.
[[0;32m  OK  [0m] Unmounted Temporary Directory.
[[0;32m  OK  [0m] Reached target Unmount All Filesystems.
[[0;32m  OK  [0m] Stopped target Local File Systems (Pre).
[[0;32m  OK  [0m] Stopped Remount Root and Kernel File Systems.
[[0;32m  OK  [0m] Stopped Create Static Device Nodes in /dev.
[[0;32m  OK  [0m] Reached target Shutdown.
[38614.268223] systemd-shutdown[1]: Sending SIGTERM to remaining processes...
[38614.294092] systemd-journald[89]: Received SIGTERM from PID 1 (systemd-shutdow).
[38624.322178] systemd-shutdown[1]: Sending SIGKILL to remaining processes...
[38624.363952] systemd-shutdown[1]: Sending SIGKILL to PID 652 (rngd).
[38624.387528] systemd-shutdown[1]: Unmounting file systems.
[38624.397519] systemd-shutdown[1]: Remounting '/' read-only with options 'vers=3,rsize=4096,wsize=4096,namlen=255,hard,nolock,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=192.168.1.254,mountvers=3,mountproto=tcp,local_lock=all,addr=192.168.1.254'.
[38624.523863] systemd-shutdown[1]: Remounting '/' read-only with options 'vers=3,rsize=4096,wsize=4096,namlen=255,hard,nolock,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=192.168.1.254,mountvers=3,mountproto=tcp,local_lock=all,addr=192.168.1.254'.
[38624.549218] systemd-shutdown[1]: All filesystems unmounted.
[38624.554996] systemd-shutdown[1]: Deactivating swaps.
[38624.560868] systemd-shutdown[1]: All swaps deactivated.
[38624.566502] systemd-shutdown[1]: Detaching loop devices.
[38624.594407] systemd-shutdown[1]: All loop devices detached.
[38624.600108] systemd-shutdown[1]: Detaching DM devices.
[38624.609708] systemd-shutdown[1]: All DM devices detached.
[38624.625993] systemd-shutdown[1]: Powering off.
[38624.630915] musb-hdrc musb-hdrc.2.auto: remove, state 4
[38624.636592] usb usb2: USB disconnect, device number 1
[38624.643451] musb-hdrc musb-hdrc.2.auto: USB bus 2 deregistered
[38624.649610] musb-hdrc musb-hdrc.1.auto: remove, state 4
[38624.655246] usb usb1: USB disconnect, device number 1
[38624.662956] musb-hdrc musb-hdrc.1.auto: USB bus 1 deregistered
[38624.683327] reboot: System halted
- 00:34:56 [INFO] Disconnected serial from am335x-sk
- 00:35:02 [INFO] Connected to am335x-sk via serial 
- 00:35:02 [INFO] Host: 
- 00:35:04 [INFO] Target: 
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
<ethaddr> not set. Validating first E-fuse MAC
Net:   eth0: ethernet@4a100000
Warning: usb_ether MAC addresses don't match:
Address in SROM is         de:ad:be:ef:00:01
Address in environment is  c8:a0:30:a1:db:63
, eth1: usb_ether
Press SPACE to abort autoboot in 2 seconds
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
=>  
- 00:35:04 [INFO] Host: 
- 00:35:04 [INFO] Target: 
=>  
=>  
=>  
- 00:35:04 [INFO] Host: version
- 00:35:04 [INFO] Target: 
version
U-Boot 2016.05-00022-g64be216 (Jun 20 2016 - 11:36:12 -0500)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 00:35:04 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 00:35:05 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 00:35:05 [INFO] Host: setenv bootcmd  ''
- 00:35:05 [INFO] Target: 
setenv bootcmd  ''
- 00:35:05 [INFO] Host: setenv autoload 'no'
- 00:35:05 [INFO] Target: 
setenv autoload 'no'
- 00:35:05 [INFO] Host: setenv serverip '192.168.1.254'
- 00:35:05 [INFO] Target: 
setenv serverip '192.168.1.254'
- 00:35:05 [INFO] Host: setenv _initramfs -
- 00:35:05 [INFO] Target: 
setenv _initramfs -
- 00:35:05 [INFO] Host: printenv
- 00:35:06 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef292f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-00022-g64be216 (Jun 20 2016 - 11:36:12 -0500)
Environment size: 8221/131068 bytes
- 00:35:06 [INFO] Host: printenv
- 00:35:07 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef292f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-00022-g64be216 (Jun 20 2016 - 11:36:12 -0500)
Environment size: 8221/131068 bytes
- 00:35:07 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 00:35:07 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 00:35:07 [INFO] Host: setenv serverip '192.168.1.254'
- 00:35:07 [INFO] Target: 
setenv serverip '192.168.1.254'
- 00:35:07 [INFO] Host: setenv autoload 'no'
- 00:35:07 [INFO] Target: 
setenv autoload 'no'
- 00:35:07 [INFO] Host: dhcp
- 00:35:08 [INFO] Target: 
dhcp
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
DHCP client bound to address 192.168.1.164 (1043 ms)
- 00:35:08 [INFO] Host: tftp ${loadaddr} 192.168.1.254:vatf_am335x-sk/1b83cc4d454b2300c73477c10cf778d0
- 00:35:09 [INFO] Target: 
tftp ${loadaddr} 192.168.1.254:vatf_am335x-sk/1b83cc4d454b2300c73477c10cf778d0
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.1.254; our IP address is 192.168.1.164
Filename 'vatf_am335x-sk/1b83cc4d454b2300c73477c10cf778d0'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 #################################################################
	 4.7 MiB/s
done
Bytes transferred = 3818840 (3a4558 hex)
- 00:35:09 [INFO] Host: tftp ${fdt_addr_r} 192.168.1.254:vatf_am335x-sk/099493624cc33a94432ff8c35d350cb1
- 00:35:09 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.1.254:vatf_am335x-sk/099493624cc33a94432ff8c35d350cb1
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.1.254; our IP address is 192.168.1.164
Filename 'vatf_am335x-sk/099493624cc33a94432ff8c35d350cb1'.
Load address: 0x88000000
Loading: *###
	 3.7 MiB/s
done
Bytes transferred = 38721 (9741 hex)
- 00:35:09 [INFO] Host: ls mmc 0:1
- 00:35:09 [INFO] Target: 
ls mmc 0:1
    78288   mlo 
   642264   u-boot.img 
       53   pointercal 
       14   .ipaddr 
        4   ws-calibrate.rules 
   131072   uboot.env 
6 file(s), 0 dir(s)
- 00:35:09 [INFO] Host: ls mmc 0:2
- 00:35:09 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<SYM>          8 tmp
<DIR>       4096 srv
<DIR>       4096 var
<DIR>       4096 lib
<DIR>       4096 proc
<SYM>          8 run
<DIR>       4096 mnt
<DIR>       4096 media
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 bin
<DIR>       4096 usr
<DIR>       4096 www
<DIR>       4096 etc
<DIR>       4096 sbin
<DIR>       4096 opt
<DIR>       4096 home
<DIR>       4096 sys
<DIR>       4096 Settings
<DIR>       4096 test
- 00:35:09 [INFO] Host: part uuid mmc 0:2
- 00:35:09 [INFO] Target: 
part uuid mmc 0:2
00000000-02
- 00:35:09 [INFO] Host: printenv
- 00:35:10 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
dnsip=192.0.2.2
dnsip2=192.0.2.3
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethact=ethernet@4a100000
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef292f8
fdtfile=undefined
fileaddr=88000000
filesize=9741
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.1.254
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.1.164
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-00022-g64be216 (Jun 20 2016 - 11:36:12 -0500)
Environment size: 8413/131068 bytes
- 00:35:10 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 00:35:10 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 00:35:10 [INFO] Host: printenv
- 00:35:11 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2C
board_serial=54124P197777
boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}
boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};elsebootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf
boot_fdt=try
boot_net_usb_start=usb start
boot_prefixes=/ /boot/
boot_script_dhcp=boot.scr.uimg
boot_scripts=boot.scr.uimg boot.scr
boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp 
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi
bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot
bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot
bootcmd_mmc0=setenv devnum 0; run mmc_boot
bootcmd_mmc1=setenv devnum 1; run mmc_boot
bootcmd_nand=run nandboot
bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi
bootcount=1
bootdelay=2
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done
dnsip=192.0.2.2
dnsip2=192.0.2.3
efi_dtb_prefixes=/ /dtb/ /dtb/current/
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=c8:a0:30:a1:db:63
ethact=ethernet@4a100000
ethaddr=c8:a0:30:a1:db:61
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef292f8
fdtfile=undefined
fileaddr=88000000
filesize=9741
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.1.254
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.1.164
kernel_addr_r=0x82000000
load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
pxefile_addr_r=0x80100000
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done
scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efi_fdtfile
scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi
scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x80000000
serverip=192.168.1.254
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-00022-g64be216 (Jun 20 2016 - 11:36:12 -0500)
Environment size: 8468/131068 bytes
- 00:35:11 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 00:35:11 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 00:35:11 [INFO] Host: version
- 00:35:11 [INFO] Target: 
version
U-Boot 2016.05-00022-g64be216 (Jun 20 2016 - 11:36:12 -0500)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 00:35:11 [INFO] Host: bdinfo
- 00:35:11 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8FF53000
reloc off   = 0x0F753000
irq_sp      = 0x8EF292E0
sp start    = 0x8EF292D0
- 00:35:11 [INFO] Host: mmc rescan; echo $?
- 00:35:12 [INFO] Target: 
mmc rescan; echo $?
- 00:35:12 [INFO] Host: fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
- 00:35:12 [INFO] Target: 
fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
- 00:35:12 [INFO] Host: boot
- 00:38:42 [ERROR] On command: boot waiting for boot.+?(?-mix:.*\s+login) >>> error: execution expired
- 00:38:42 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x3a4558 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8ef1b000, end 8ef27740 ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.8.0-rc1-next-20160809-00002-g8d3d837802af (nmenon@horus) (gcc version 4.9.3 20150413 (prerelease) (Linaro GCC 4.9-2015.05) ) #1 SMP Tue Aug 9 00:31:44 CDT 2016
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] OF: fdt:Machine model: TI AM335x EVM-SK
[    0.000000] cma: Reserved 16 MiB at 0x8d800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES2.1 (sgx neon )
[    0.000000] percpu: Embedded 15 pages/cpu @cfb55000 s31808 r8192 d21440 u61440
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 64448
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 1024 (order: 0, 4096 bytes)
[    0.000000] Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
[    0.000000] Memory: 220568K/260096K available (7168K kernel code, 772K rwdata, 2384K rodata, 1024K init, 8122K bss, 23144K reserved, 16384K cma-reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)
[    0.000000]     vmalloc : 0xd0800000 - 0xff800000   ( 752 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc0800000   (8160 kB)
[    0.000000]       .init : 0xc0b00000 - 0xc0c00000   (1024 kB)
[    0.000000]       .data : 0xc0c00000 - 0xc0cc102c   ( 773 kB)
[    0.000000]        .bss : 0xc0cc3000 - 0xc14b1930   (8123 kB)
[    0.000000] Running RCU self tests
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU lockdep checking is enabled.
[    0.000000] 	Build-time adjustment of leaf fanout to 32.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] OMAP clockevent source: timer2 at 24000000 Hz
[    0.000019] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000043] clocksource: timer1: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000097] OMAP clocksource: timer1 at 24000000 Hz
[    0.000607] clocksource_probe: no matching clocksources found
[    0.001544] Console: colour dummy device 80x30
[    0.001606] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.001616] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.001624] ... MAX_LOCK_DEPTH:          48
[    0.001631] ... MAX_LOCKDEP_KEYS:        8191
[    0.001639] ... CLASSHASH_SIZE:          4096
[    0.001647] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.001654] ... MAX_LOCKDEP_CHAINS:      65536
[    0.001661] ... CHAINHASH_SIZE:          32768
[    0.001669]  memory used by lock dependency info: 5167 kB
[    0.001677]  per task-struct memory footprint: 1536 bytes
[    0.001710] Calibrating delay loop... 996.14 BogoMIPS (lpj=4980736)
[    0.078711] pid_max: default: 32768 minimum: 301
[    0.079174] Security Framework initialized
[    0.079312] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.079325] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.082838] CPU: Testing write buffer coherency: ok
[    0.084595] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.084672] Setting up static identity map for 0x80100000 - 0x80100070
[    0.089364] Brought up 1 CPUs
[    0.089390] SMP: Total of 1 processors activated (996.14 BogoMIPS).
[    0.089401] CPU: All CPU(s) started in SVC mode.
[    0.093334] devtmpfs: initialized
[    0.135478] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.136401] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.138105] pinctrl core: initialized pinctrl subsystem
[    0.143579] NET: Registered protocol family 16
[    0.150022] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.196235] omap_hwmod: debugss: _wait_target_disable failed
[    0.248393] cpuidle: using governor menu
[    0.262337] OMAP GPIO hardware version 0.1
[    0.291811] No ATAGs?hw-breakpoint: debug architecture 0x4 unsupported.
[    0.292084] omap4_sram_init:Unable to allocate sram needed to handle errata I688
[    0.292105] omap4_sram_init:Unable to get sram pool needed to handle errata I688
[    0.338365] edma 49000000.edma: TI EDMA DMA engine driver
[    0.340796] reg-fixed-voltage fixedregulator@2: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_wl12xx_gpio, deferring probe
[    0.345535] SCSI subsystem initialized
[    0.347245] omap_i2c 44e0b000.i2c: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_i2c0_pins, deferring probe
[    0.347578] pps_core: LinuxPPS API ver. 1 registered
[    0.347590] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.347641] PTP clock support registered
[    0.352459] clocksource: Switched to clocksource timer1
[    0.455251] VFS: Disk quotas dquot_6.6.0
[    0.455463] VFS: Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.487778] NET: Registered protocol family 2
[    0.489900] TCP established hash table entries: 2048 (order: 1, 8192 bytes)
[    0.489967] TCP bind hash table entries: 2048 (order: 4, 73728 bytes)
[    0.490563] TCP: Hash tables configured (established 2048 bind 2048)
[    0.490779] UDP hash table entries: 256 (order: 2, 20480 bytes)
[    0.490952] UDP-Lite hash table entries: 256 (order: 2, 20480 bytes)
[    0.491756] NET: Registered protocol family 1
[    0.494051] RPC: Registered named UNIX socket transport module.
[    0.494078] RPC: Registered udp transport module.
[    0.494088] RPC: Registered tcp transport module.
[    0.494098] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.496733] hw perfevents: /pmu: failed to probe PMU!
[    0.496754] hw perfevents: /pmu: failed to register PMU devices!
[    0.496825] armv7-pmu: probe of pmu failed with error -22
[    0.501304] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.501521] audit: initializing netlink subsys (disabled)
[    0.501783] audit: type=2000 audit(0.490:1): initialized
[    0.505793] workingset: timestamp_bits=14 max_order=16 bucket_order=2
[    0.508348] NFS: Registering the id_resolver key type
[    0.508709] Key type id_resolver registered
[    0.508725] Key type id_legacy registered
[    0.508889] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.514838] io scheduler noop registered
[    0.514868] io scheduler deadline registered
[    0.515000] io scheduler cfq registered (default)
[    0.517334] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.521538] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.528025] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.528745] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 158, base_baud = 3000000) is a OMAP UART0
[    1.242783] console [ttyO0] enabled
[    1.287962] brd: module loaded
[    1.315338] loop: module loaded
[    1.321258] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.331243] libphy: Fixed MDIO Bus: probed
[    1.412497] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.418904] davinci_mdio 4a101000.mdio: detected phy mask fffffffc
[    1.431066] libphy: 4a101000.mdio: probed
[    1.435465] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    1.445179] davinci_mdio 4a101000.mdio: phy[1]: device 4a101000.mdio:01, driver Atheros 8031 ethernet
[    1.456440] cpsw 4a100000.ethernet: Detected MACID = c8:a0:30:a1:db:61
[    1.466446] cpsw 4a100000.ethernet: cpsw: Detected MACID = c8:a0:30:a1:db:63
[    1.477840] mousedev: PS/2 mouse device common for all mice
[    1.483854] i2c /dev entries driver
[    1.489874] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.499666] ledtrig-cpu: registered to indicate activity on CPUs
[    1.507803] oprofile: no performance counters
[    1.513973] oprofile: using timer interrupt.
[    1.519147] Initializing XFRM netlink socket
[    1.524266] NET: Registered protocol family 10
[    1.533056] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.541788] NET: Registered protocol family 17
[    1.546682] NET: Registered protocol family 15
[    1.551738] Key type dns_resolver registered
[    1.556540] omap_voltage_late_init: Voltage driver support not added
[    1.563265] sr_dev_init: No voltage domain specified for smartreflex0. Cannot initialize
[    1.571745] sr_dev_init: No voltage domain specified for smartreflex1. Cannot initialize
[    1.580993] ThumbEE CPU extension supported.
[    1.585589] Registering SWP/SWPB emulation handler
[    1.590612] SmartReflex Class3 initialized
[    1.633517] tps65910 0-002d: No interrupt support, no core IRQ
[    1.643788] vrtc: supplied by vbat
[    1.653725] vio: supplied by vbat
[    1.660321] vdd1: supplied by vbat
[    1.667597] vdd2: supplied by vbat
[    1.675263] random: fast init done
[    1.682027] vdig1: supplied by vbat
[    1.688878] vdig2: supplied by vbat
[    1.695663] vpll: supplied by vbat
[    1.702513] vdac: supplied by vbat
[    1.709293] vaux1: supplied by vbat
[    1.716096] vaux2: supplied by vbat
[    1.722923] vaux33: supplied by vbat
[    1.729710] vmmc: supplied by vbat
[    1.736384] vbb: supplied by vbat
[    1.743727] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    1.750883] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.860531] mmc0: host does not support reading read-only switch, assuming write-enable
[    1.871055] mmc0: new high speed SDHC card at address 0007
[    1.880658] mmcblk0: mmc0:0007 SD8GB 7.42 GiB 
[    1.890203]  mmcblk0: p1 p2
[    1.964072] hctosys: unable to open rtc device (rtc0)
[    1.969390] sr_init: No PMIC hook to init smartreflex
[    1.975059] sr_init: platform driver register failed for SR
[    2.012189] net eth0: initializing cpsw version 1.12 (0)
[    2.025690] omap_hsmmc 481d8000.mmc: card claims to support voltages below defined range
[    2.050758] mmc1: new SDIO card at address 0001
[    2.113455] Atheros 8031 ethernet 4a101000.mdio:00: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:00, irq=-1)
[    2.135322] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[    6.243478] cpsw 4a100000.ethernet eth0: Link is Up - 1Gbps/Full - flow control rx/tx
[    6.252512] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    6.272445] Sending DHCP requests ., OK
[    6.353136] IP-Config: Got DHCP answer from 192.168.1.254, my address is 192.168.1.164
[    6.362156] IP-Config: Complete:
[    6.365683] Unable to handle kernel paging request at virtual address ebffff87
[    6.373253] pgd = c0004000
[    6.376084] [ebffff87] *pgd=00000000
[    6.379842] Internal error: Oops: 5 [#1] SMP ARM
[    6.384679] Modules linked in:
[    6.387888] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.8.0-rc1-next-20160809-00002-g8d3d837802af #1
[    6.397451] Hardware name: Generic AM33XX (Flattened Device Tree)
[    6.403830] task: cf086d80 task.stack: cf088000
[    6.408584] PC is at hex_string+0x98/0x104
[    6.412880] LR is at oops_in_progress+0x0/0x4
[    6.417441] pc : [<c048f1c4>]    lr : [<c1451454>]    psr: 20000093
[    6.417441] sp : cf089d40  ip : c145108d  fp : c082c0e4
[    6.429460] r10: cf089d98  r9 : 00000001  r8 : 00000000
[    6.434929] r7 : 00000030  r6 : 0000002f  r5 : c082c444  r4 : 0000003a
[    6.441762] r3 : 00000000  r2 : ebffff87  r1 : c082c240  r0 : 00000030
[    6.448597] Flags: nzCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment none
[    6.456158] Control: 10c5387d  Table: 80004019  DAC: 00000051
[    6.462173] Process swapper/0 (pid: 1, stack limit = 0xcf088218)
[    6.468461] Stack: (0xcf089d40 to 0xcf08a000)
[    6.473027] 9d40: c145108d c1451454 ebffff87 c04915d4 00000000 00003005 ffff0a00 c0a0cd06
[    6.481593] 9d60: 000000e6 c07bde88 c145108d c0a0cd05 cf089e44 c1451454 c0a0cd06 00000001
[    6.490159] 9d80: cf089d98 c0491060 00003005 ffff0a00 000003e0 c1451074 00003005 ffff0a00
[    6.498725] 9da0: 00000000 000003e0 00000006 c14a4804 00000000 00000000 60000013 c1450720
[    6.507290] 9dc0: 00000000 c04917f8 00000000 c019ea10 00000000 00000000 00000000 00000000
[    6.515857] 9de0: c1451074 00000014 00000000 00000000 00000000 00000000 00000002 c14a4804
[    6.524422] 9e00: c0cb3b50 c14a4804 c0b6434c 00000002 c0b6434c c0b6434c cf58752b c022f1f4
[    6.532988] 9e20: c0a0ccec cf089e3c c0b6434c cf089e3c 00000003 c0b4d5a8 c0a0ccec c06fd754
[    6.541553] 9e40: 00000030 ebffff87 c0cb3b48 c0cb3b54 c0cb3b50 cd35f790 00000001 00000000
[    6.550119] 9e60: cf088000 c0cada30 00000002 00000006 c0c02100 ffff8d43 00000002 cf587518
[    6.558685] 9e80: 00000001 00000000 00000002 00000000 00000000 00000000 00000002 fe01a8c0
[    6.567250] 9ea0: 00000000 00000000 00000002 00000000 00000000 00000000 00000003 00000000
[    6.575815] 9ec0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000007
[    6.584381] 9ee0: c0b4c710 c0cc3000 c0b70458 00000000 00000000 c0b53858 c0b005a0 c010186c
[    6.592947] 9f00: 00000000 cf087328 cf086d80 00000004 00000000 00000000 000000a2 c082c0e4
[    6.601513] 9f20: c0a53140 c015a320 00000001 c09dfc3c c0a52498 00000000 00000007 00000007
[    6.610078] 9f40: c0b6fdb8 00000007 c0b53850 c0cc3000 00000007 c0b53854 c0cc3000 c0b70458
[    6.618644] 9f60: c0cc3000 c0b00e8c 00000007 00000007 00000000 c0b005a0 c07b71d4 000000a3
[    6.627209] 9f80: 00000000 00000000 c07b71d4 00000000 00000000 00000000 00000000 00000000
[    6.635774] 9fa0: 00000000 c07b71dc 00000000 c01078f0 00000000 00000000 00000000 00000000
[    6.644338] 9fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[    6.652904] 9fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
[    6.661477] [<c048f1c4>] (hex_string) from [<c04915d4>] (pointer+0x350/0x568)
[    6.668952] [<c04915d4>] (pointer) from [<c0491060>] (vsnprintf+0x184/0x3a8)
[    6.676335] [<c0491060>] (vsnprintf) from [<c04917f8>] (vscnprintf+0xc/0x24)
[    6.683725] [<c04917f8>] (vscnprintf) from [<c019ea10>] (vprintk_emit+0xcc/0x5c4)
[    6.691576] [<c019ea10>] (vprintk_emit) from [<c022f1f4>] (__pr_info+0x30/0x40)
[    6.699243] [<c022f1f4>] (__pr_info) from [<c0b4d5a8>] (ip_auto_config+0xe98/0x10cc)
[    6.707359] [<c0b4d5a8>] (ip_auto_config) from [<c010186c>] (do_one_initcall+0x3c/0x178)
[    6.715846] [<c010186c>] (do_one_initcall) from [<c0b00e8c>] (kernel_init_freeable+0x210/0x2e0)
[    6.724965] [<c0b00e8c>] (kernel_init_freeable) from [<c07b71dc>] (kernel_init+0x8/0x118)
[    6.733537] [<c07b71dc>] (kernel_init) from [<c01078f0>] (ret_from_fork+0x14/0x24)
[    6.741467] Code: e28cc003 e2822001 0a000011 e15e000c (85d21000) 
[    6.747865] ---[ end trace b57e5e561ca37778 ]---
[    6.752830] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    6.752830] 
[    6.762412] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    6.762412] 
[  131.202374] random: crng init done
- 00:38:42 [INFO] Boot attempt 1/1 failed
- 00:38:42 [INFO] Collecting kernel traces via sysrq...
- 00:38:52 [INFO] 
- 00:39:02 [INFO] 
- 00:39:13 [INFO] 
- 00:39:13 [INFO] Disconnected serial from am335x-sk
URL:gtsystest.telogy.design.ti.com/vatf/tidfarm-02/tidfarm-02_vatf@am335x-sk/tidfarm-0208_09_2016_00_34_24/files/session_iteration_1/test_1
