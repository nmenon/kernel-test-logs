- 07:42:30 [INFO] Starting target session
- 07:42:30 [INFO] Connected to am335x-sk via serial 
- 07:42:30 [INFO] Host: #check prompt
- 07:42:33 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:((?-mix:login:)|[Pp]assword)) >>> error: execution expired
- 07:42:33 [INFO] Target: 
- 07:42:33 [INFO] Host: #check prompt
- 07:42:35 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 07:42:35 [INFO] Target: 
- 07:42:35 [INFO] Host: #check prompt
- 07:42:37 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 07:42:37 [INFO] Target: 
- 07:42:37 [INFO] Host: #check prompt
- 07:42:39 [ERROR] On command: #check prompt waiting for #check prompt.+?(?-mix:[\w\d]+@.+[@:#]+) >>> error: execution expired
- 07:42:39 [INFO] Target: 
- 07:42:39 [INFO] Disconnected serial from am335x-sk
- 07:42:45 [INFO] Connected to am335x-sk via serial 
- 07:42:45 [INFO] Host: 
- 07:42:46 [INFO] Target: 
U-Boot SPL 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46)
Trying to boot from MMC1
reading args
spl_load_image_fat_os: error reading image args, err - -1
reading u-boot.img
reading u-boot.img
reading u-boot.img
FIT: Selected 'am335x-evmsk'
reading u-boot.img
U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500), Build: jenkins-ti-uboot-compile-test-111
       Watchdog enabled
I2C:   ready
DRAM:  256 MiB
NAND:  0 MiB
MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1
reading uboot.env
<ethaddr> not set. Validating first E-fuse MAC
Net:   eth0: ethernet@4a100000
Warning: usb_ether MAC addresses don't match:
Address in SROM is         de:ad:be:ef:00:01
Address in environment is  d4:94:a1:88:6b:ea
, eth1: usb_ether
Press SPACE to abort autoboot in 1 seconds
=>  
=>  
- 07:42:47 [INFO] Host: 
- 07:42:47 [INFO] Target: 
- 07:42:47 [INFO] Host: version
- 07:42:47 [INFO] Target: 
=> version
U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 07:42:47 [INFO] Host: setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 07:42:47 [INFO] Target: 
setenv bootargs 'console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait '
- 07:42:47 [INFO] Host: setenv bootcmd  ''
- 07:42:47 [INFO] Target: 
setenv bootcmd  ''
- 07:42:47 [INFO] Host: setenv autoload 'no'
- 07:42:47 [INFO] Target: 
setenv autoload 'no'
- 07:42:47 [INFO] Host: setenv serverip '192.168.0.1'
- 07:42:47 [INFO] Target: 
setenv serverip '192.168.0.1'
- 07:42:47 [INFO] Host: setenv _initramfs -
- 07:42:47 [INFO] Target: 
setenv _initramfs -
- 07:42:47 [INFO] Host: printenv
- 07:42:48 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 5177/131068 bytes
- 07:42:48 [INFO] Host: printenv
- 07:42:48 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 5177/131068 bytes
- 07:42:48 [INFO] Host: setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 07:42:48 [INFO] Target: 
setenv bootargs ''${bootargs}' ip=:::::eth0:dhcp '
- 07:42:48 [INFO] Host: setenv serverip '192.168.0.1'
- 07:42:48 [INFO] Target: 
setenv serverip '192.168.0.1'
- 07:42:48 [INFO] Host: setenv autoload 'no'
- 07:42:48 [INFO] Target: 
setenv autoload 'no'
- 07:42:48 [INFO] Host: dhcp
- 07:42:51 [INFO] Target: 
dhcp
ethernet@4a100000 Waiting for PHY auto negotiation to complete... done
link up on port 0, speed 1000, full duplex
BOOTP broadcast 1
BOOTP broadcast 2
BOOTP broadcast 3
DHCP client bound to address 192.168.0.137 (1311 ms)
- 07:42:51 [INFO] Host: tftp ${loadaddr} 192.168.0.1:vatf_am335x-sk1/e2e74b7b69580cbc80ec1356815a0f58
- 07:42:52 [INFO] Target: 
tftp ${loadaddr} 192.168.0.1:vatf_am335x-sk1/e2e74b7b69580cbc80ec1356815a0f58
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.0.1; our IP address is 192.168.0.137
Filename 'vatf_am335x-sk1/e2e74b7b69580cbc80ec1356815a0f58'.
Load address: 0x82000000
Loading: *#################################################################
	 #################################################################
	 #################################################################
	 ################################################################
	 7.9 MiB/s
done
Bytes transferred = 3792792 (39df98 hex)
- 07:42:52 [INFO] Host: tftp ${fdt_addr_r} 192.168.0.1:vatf_am335x-sk1/92b8ca5a9b06feef4d42637d884d0159
- 07:42:52 [INFO] Target: 
tftp ${fdt_addr_r} 192.168.0.1:vatf_am335x-sk1/92b8ca5a9b06feef4d42637d884d0159
link up on port 0, speed 1000, full duplex
Using ethernet@4a100000 device
TFTP from server 192.168.0.1; our IP address is 192.168.0.137
Filename 'vatf_am335x-sk1/92b8ca5a9b06feef4d42637d884d0159'.
Load address: 0x88000000
Loading: *###
	 5.1 MiB/s
done
Bytes transferred = 37325 (91cd hex)
- 07:42:52 [INFO] Host: ls mmc 0:1
- 07:42:52 [INFO] Target: 
ls mmc 0:1
    77088   mlo 
   638800   u-boot.img 
  2627551   u-boot 
   447084   u-boot.bin 
   905453   u-boot-spl 
    76900   u-boot-spl.bin 
      259   uboot_build.txt 
       53   pointercal 
            windows_users/
        1   .ipaddr 
            old_uboot/
        4   ws-calibrate.rules 
   131072   uboot.env 
11 file(s), 2 dir(s)
- 07:42:52 [INFO] Host: ls mmc 0:2
- 07:42:52 [INFO] Target: 
ls mmc 0:2
<DIR>       4096 .
<DIR>       4096 ..
<DIR>       4096 bin
<DIR>       4096 boot
<DIR>       4096 dev
<DIR>       4096 etc
<DIR>       4096 home
<DIR>       4096 lib
<DIR>       4096 media
<DIR>       4096 mnt
<DIR>       4096 opt
<DIR>       4096 proc
<DIR>       4096 sbin
<DIR>       4096 srv
<DIR>       4096 sys
<SYM>          8 tmp
<DIR>       4096 usr
<DIR>       4096 var
<DIR>       4096 www
<SYM>          8 run
<DIR>       4096 Settings
<DIR>       4096 test
- 07:42:52 [INFO] Host: part uuid mmc 0:2
- 07:42:52 [INFO] Target: 
part uuid mmc 0:2
00000000-02
- 07:42:52 [INFO] Host: printenv
- 07:42:53 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethact=ethernet@4a100000
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
fileaddr=88000000
filesize=91cd
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.0.137
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 5367/131068 bytes
- 07:42:53 [INFO] Host: setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 07:42:53 [INFO] Target: 
setenv bootargs ''${bootargs}' root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait '
- 07:42:53 [INFO] Host: printenv
- 07:42:53 [INFO] Target: 
printenv
_initramfs=-
arch=arm
args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}
autoload=no
baudrate=115200
board=am335x
board_name=A335X_SK
board_rev=1.2B
board_serial=16124P190155
boot_fdt=try
bootargs=console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
bootcmd=
bootcount=1
bootdelay=1
bootdir=/boot
bootenvfile=uEnv.txt
bootfile=zImage
bootm_size=0x10000000
bootpart=0:2
bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}
console=ttyO0,115200n8
cpu=armv7
dfu_alt_info_emmc=rawemmc raw 0 3751936
dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x400;spl-os-args.raw raw 0x80 0x80;spl-os-image.raw raw 0x900 0x2000;spl-os-args fat 0 1;spl-os-image fat 0 1;u-boot.img fat 0 1;uEnv.txt fat 0 1
dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os part 0 6;kernel part 0 8;rootfs part 0 9
dfu_alt_info_ram=kernel ram 0x80200000 0xD80000;fdt ram 0x80F80000 0x80000;ramdisk ram 0x81000000 0x4000000
dnsip=192.0.2.2
dnsip2=192.0.2.3
envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;
eth1addr=d4:94:a1:88:6b:ea
ethact=ethernet@4a100000
ethaddr=d4:94:a1:88:6b:e9
fdt_addr_r=0x88000000
fdtaddr=0x88000000
fdtcontroladdr=8ef2c2f8
fdtfile=undefined
fileaddr=88000000
filesize=91cd
findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv fdtfile am335x-boneblack.dtb; fi; if test $board_name = A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi; if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING: Could not determine device tree to use; fi; 
finduuid=part uuid mmc 0:2 uuid
gatewayip=192.168.0.1
importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}
init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;
ipaddr=192.168.0.137
kernel_addr_r=0x82000000
loadaddr=0x82000000
loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}
loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr
loadfdt=load mmc ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}
loadimage=load mmc ${bootpart} ${loadaddr} ${bootdir}/${bootfile}
loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz
mmcboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};run envboot; if run loadimage; then run mmcloados;fi;fi;
mmcdev=0
mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;
mmcrootfstype=ext4 rootwait
mtdids=nand0=nand.0
mtdparts=mtdparts=nand.0:128k(NAND.SPL),128k(NAND.SPL.backup1),128k(NAND.SPL.backup2),128k(NAND.SPL.backup3),256k(NAND.u-boot-spl-os),1m(NAND.u-boot),128k(NAND.u-boot-env),128k(NAND.u-boot-env.backup1),8m(NAND.kernel),-(NAND.file-system)
nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}
nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr} NAND.kernel; bootz ${loadaddr} - ${fdtaddr}
nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048
nandrootfstype=ubifs rootwait=1
netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp
netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz ${loadaddr} - ${fdtaddr}
netloadfdt=tftp ${fdtaddr} ${fdtfile}
netloadimage=tftp ${loadaddr} ${bootfile}
netmask=255.255.255.0
nfsopts=nolock
partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}
ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}
ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}
ramdisk_addr_r=0x88080000
ramroot=/dev/ram0 rw
ramrootfstype=ext2
rdaddr=0x88080000
rootpath=/export/rootfs
serverip=192.168.0.1
soc=am33xx
spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}
spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; bootz ${loadaddr}
spibusno=0
spiimgsize=0x362000
spiroot=/dev/mtdblock4 rw
spirootfstype=jffs2
spisrcaddr=0xe0000
static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off
stderr=serial@44e09000
stdin=serial@44e09000
stdout=serial@44e09000
usbnet_devaddr=de:ad:be:ef:00:01
vendor=ti
ver=U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
Environment size: 5422/131068 bytes
- 07:42:53 [INFO] Host: setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 07:42:54 [INFO] Target: 
setenv bootcmd ''${bootcmd}' if iminfo ${loadaddr}; then bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; else bootz ${loadaddr} ${_initramfs} ${fdt_addr_r}; bootm ${loadaddr} ${_initramfs} ${fdt_addr_r}; fi'
- 07:42:54 [INFO] Host: version
- 07:42:54 [INFO] Target: 
version
U-Boot 2016.05-rc3-00242-g359d4c4 (May 11 2016 - 07:03:46 -0500)
arm-linux-gnueabihf-gcc (Linaro GCC 5.3-2016.02) 5.3.1 20160113
GNU ld (GNU Binutils) 2.25.0 Linaro 2015_10
- 07:42:54 [INFO] Host: bdinfo
- 07:42:54 [INFO] Target: 
bdinfo
arch_number = 0x00000E05
boot_params = 0x80000100
DRAM bank   = 0x00000000
-> start    = 0x80000000
-> size     = 0x10000000
baudrate    = 115200 bps
TLB addr    = 0x8FFF0000
relocaddr   = 0x8FF56000
reloc off   = 0x0F756000
irq_sp      = 0x8EF2C2E0
sp start    = 0x8EF2C2D0
- 07:42:54 [INFO] Host: mmc rescan; echo $?
- 07:42:54 [INFO] Target: 
mmc rescan; echo $?
- 07:42:54 [INFO] Host: fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
- 07:42:54 [INFO] Target: 
fatwrite mmc ${mmcdev}:1 ${loadaddr} ws-calibrate.rules 4
writing ws-calibrate.rules
4 bytes written
- 07:42:54 [INFO] Host: boot
- 07:46:24 [ERROR] On command: boot waiting for boot.+?(?-mix:login:) >>> error: execution expired
- 07:46:24 [INFO] Target: 
boot
## Checking Image at 82000000 ...
Unknown image format!
Kernel image @ 0x82000000 [ 0x000000 - 0x39df98 ]
## Flattened Device Tree blob at 88000000
   Booting using the fdt blob at 0x88000000
   Loading Device Tree to 8ef1e000, end 8ef2a1cc ... OK
Starting kernel ...
[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.6.0-next-20160519-00002-gfe6c9c9e8063 (nmenon@horus) (gcc version 4.9.3 20150413 (prerelease) (Linaro GCC 4.9-2015.05) ) #1 SMP Thu May 19 06:31:36 CDT 2016
[    0.000000] CPU: ARMv7 Processor [413fc082] revision 2 (ARMv7), cr=10c5387d
[    0.000000] CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
[    0.000000] Machine model: TI AM335x EVM-SK
[    0.000000] cma: Reserved 16 MiB at 0x8d800000
[    0.000000] Memory policy: Data cache writeback
[    0.000000] CPU: All CPU(s) started in SVC mode.
[    0.000000] AM335X ES1.0 (sgx neon )
[    0.000000] percpu: Embedded 15 pages/cpu @cfb54000 s29440 r8192 d23808 u61440
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 64448
[    0.000000] Kernel command line: console=ttyO0,115200n8 earlyprintk=serial,ttyO0,115200n8 rootwait  ip=:::::eth0:dhcp  root=PARTUUID=00000000-02 rw rootfstype=ext4 rootwait 
[    0.000000] PID hash table entries: 1024 (order: 0, 4096 bytes)
[    0.000000] Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
[    0.000000] Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
[    0.000000] Memory: 220568K/260096K available (7354K kernel code, 768K rwdata, 2356K rodata, 1024K init, 8122K bss, 23144K reserved, 16384K cma-reserved, 0K highmem)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
[    0.000000]     fixmap  : 0xffc00000 - 0xfff00000   (3072 kB)
[    0.000000]     vmalloc : 0xd0800000 - 0xff800000   ( 752 MB)
[    0.000000]     lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
[    0.000000]     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
[    0.000000]     modules : 0xbf000000 - 0xbfe00000   (  14 MB)
[    0.000000]       .text : 0xc0008000 - 0xc0a7b834   (10703 kB)
[    0.000000]       .init : 0xc0b00000 - 0xc0c00000   (1024 kB)
[    0.000000]       .data : 0xc0c00000 - 0xc0cc01c4   ( 769 kB)
[    0.000000]        .bss : 0xc0cc2000 - 0xc14b0a40   (8123 kB)
[    0.000000] Running RCU self tests
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU lockdep checking is enabled.
[    0.000000] 	Build-time adjustment of leaf fanout to 32.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=2 to nr_cpu_ids=1.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=32, nr_cpu_ids=1
[    0.000000] NR_IRQS:16 nr_irqs:16 16
[    0.000000] IRQ: Found an INTC at 0xfa200000 (revision 5.0) with 128 interrupts
[    0.000000] OMAP clockevent source: timer3 at 24000000 Hz
[    0.000017] sched_clock: 32 bits at 24MHz, resolution 41ns, wraps every 89478484971ns
[    0.000045] clocksource: timer1: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 79635851949 ns
[    0.000105] OMAP clocksource: timer1 at 24000000 Hz
[    0.001290] Console: colour dummy device 80x30
[    0.001366] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.001379] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.001389] ... MAX_LOCK_DEPTH:          48
[    0.001400] ... MAX_LOCKDEP_KEYS:        8191
[    0.001410] ... CLASSHASH_SIZE:          4096
[    0.001420] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.001430] ... MAX_LOCKDEP_CHAINS:      65536
[    0.001441] ... CHAINHASH_SIZE:          32768
[    0.001451]  memory used by lock dependency info: 5167 kB
[    0.001462]  per task-struct memory footprint: 1536 bytes
[    0.001495] Calibrating delay loop... 715.16 BogoMIPS (lpj=3575808)
[    0.108985] pid_max: default: 32768 minimum: 301
[    0.109624] Security Framework initialized
[    0.109814] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.109832] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
[    0.114432] CPU: Testing write buffer coherency: ok
[    0.116838] CPU0: thread -1, cpu 0, socket -1, mpidr 0
[    0.116933] Setting up static identity map for 0x80100000 - 0x80100070
[    0.122588] Brought up 1 CPUs
[    0.122618] SMP: Total of 1 processors activated (715.16 BogoMIPS).
[    0.122632] CPU: All CPU(s) started in SVC mode.
[    0.127755] devtmpfs: initialized
[    0.178651] VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 3
[    0.180216] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.182212] pinctrl core: initialized pinctrl subsystem
[    0.189514] NET: Registered protocol family 16
[    0.197839] DMA: preallocated 256 KiB pool for atomic coherent allocations
[    0.240795] omap_hwmod: debugss: _wait_target_disable failed
[    0.299727] cpuidle: using governor menu
[    0.330045] OMAP GPIO hardware version 0.1
[    0.356262] No ATAGs?
[    0.356293] hw-breakpoint: debug architecture 0x4 unsupported.
[    0.356596] omap4_sram_init:Unable to allocate sram needed to handle errata I688
[    0.356616] omap4_sram_init:Unable to get sram pool needed to handle errata I688
[    0.418064] edma 49000000.edma: TI EDMA DMA engine driver
[    0.420364] reg-fixed-voltage fixedregulator@2: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_wl12xx_gpio, deferring probe
[    0.427285] SCSI subsystem initialized
[    0.430011] omap_i2c 44e0b000.i2c: could not find pctldev for node /ocp/l4_wkup@44c00000/scm@210000/pinmux@800/pinmux_i2c0_pins, deferring probe
[    0.430355] pps_core: LinuxPPS API ver. 1 registered
[    0.430371] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.430439] PTP clock support registered
[    0.436485] clocksource: Switched to clocksource timer1
[    0.575664] VFS: Disk quotas dquot_6.6.0
[    0.575919] VFS: Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    0.619065] NET: Registered protocol family 2
[    0.621823] TCP established hash table entries: 2048 (order: 1, 8192 bytes)
[    0.621914] TCP bind hash table entries: 2048 (order: 4, 73728 bytes)
[    0.622738] TCP: Hash tables configured (established 2048 bind 2048)
[    0.622991] UDP hash table entries: 256 (order: 2, 20480 bytes)
[    0.623228] UDP-Lite hash table entries: 256 (order: 2, 20480 bytes)
[    0.624317] NET: Registered protocol family 1
[    0.626873] RPC: Registered named UNIX socket transport module.
[    0.626905] RPC: Registered udp transport module.
[    0.626920] RPC: Registered tcp transport module.
[    0.626934] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    0.630913] hw perfevents: enabled with armv7_cortex_a8 PMU driver, 5 counters available
[    0.636768] futex hash table entries: 256 (order: 2, 16384 bytes)
[    0.637054] audit: initializing netlink subsys (disabled)
[    0.637410] audit: type=2000 audit(0.630:1): initialized
[    0.642755] workingset: timestamp_bits=12 max_order=16 bucket_order=4
[    0.646796] NFS: Registering the id_resolver key type
[    0.647331] Key type id_resolver registered
[    0.647352] Key type id_legacy registered
[    0.647566] jffs2: version 2.2. (NAND) (SUMMARY)   2001-2006 Red Hat, Inc.
[    0.655089] io scheduler noop registered
[    0.655125] io scheduler deadline registered
[    0.655192] io scheduler cfq registered (default)
[    0.658934] pinctrl-single 44e10800.pinmux: 142 pins at pa f9e10800 size 568
[    0.664397] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    0.672910] omap_uart 44e09000.serial: no wakeirq for uart0
[    0.673751] 44e09000.serial: ttyO0 at MMIO 0x44e09000 (irq = 41, base_baud = 3000000) is a OMAP UART0
[    1.373872] console [ttyO0] enabled
[    1.431194] brd: module loaded
[    1.466171] loop: module loaded
[    1.473037] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.546553] davinci_mdio 4a101000.mdio: davinci mdio revision 1.6
[    1.552955] davinci_mdio 4a101000.mdio: detected phy mask fffffffc
[    1.566822] libphy: 4a101000.mdio: probed
[    1.571051] davinci_mdio 4a101000.mdio: phy[0]: device 4a101000.mdio:00, driver Atheros 8031 ethernet
[    1.580770] davinci_mdio 4a101000.mdio: phy[1]: device 4a101000.mdio:01, driver Atheros 8031 ethernet
[    1.590845] cpsw 4a100000.ethernet: Detected MACID = d4:94:a1:88:6b:ea
[    1.601616] cpsw 4a100000.ethernet: cpsw: Detected MACID = d4:94:a1:88:6b:e9
[    1.615007] mousedev: PS/2 mouse device common for all mice
[    1.621026] i2c /dev entries driver
[    1.631455] omap_hsmmc 48060000.mmc: Got CD GPIO
[    1.638501] ledtrig-cpu: registered to indicate activity on CPUs
[    1.646908] oprofile: using arm/armv7
[    1.651761] Initializing XFRM netlink socket
[    1.656996] NET: Registered protocol family 10
[    1.666816] sit: IPv6 over IPv4 tunneling driver
[    1.674860] NET: Registered protocol family 17
[    1.679769] NET: Registered protocol family 15
[    1.684926] Key type dns_resolver registered
[    1.689802] omap_voltage_late_init: Voltage driver support not added
[    1.696537] sr_dev_init: No voltage domain specified for smartreflex0. Cannot initialize
[    1.705007] sr_dev_init: No voltage domain specified for smartreflex1. Cannot initialize
[    1.714440] ThumbEE CPU extension supported.
[    1.719061] Registering SWP/SWPB emulation handler
[    1.724081] SmartReflex Class3 initialized
[    1.767794] tps65910 0-002d: No interrupt support, no core IRQ
[    1.779144] vrtc: supplied by vbat
[    1.789889] vio: supplied by vbat
[    1.797270] vdd1: supplied by vbat
[    1.805151] vdd2: supplied by vbat
[    1.817145] vdig1: supplied by vbat
[    1.824502] vdig2: supplied by vbat
[    1.831959] vpll: supplied by vbat
[    1.839221] vdac: supplied by vbat
[    1.846510] vaux1: supplied by vbat
[    1.853905] vaux2: supplied by vbat
[    1.861454] vaux33: supplied by vbat
[    1.868968] vmmc: supplied by vbat
[    1.876227] vbb: supplied by vbat
[    1.883528] omap_i2c 44e0b000.i2c: bus 0 rev0.11 at 400 kHz
[    2.008140] omap_hsmmc 48060000.mmc: Got CD GPIO
[    2.021548] omap_hsmmc 481d8000.mmc: card claims to support voltages below defined range
[    2.051662] mmc0: new SDIO card at address 0001
[    2.061848] hctosys: unable to open rtc device (rtc0)
[    2.067299] sr_init: No PMIC hook to init smartreflex
[    2.072933] sr_init: platform driver register failed for SR
[    2.104268] net eth0: initializing cpsw version 1.12 (0)
[    2.154467] mmc1: host does not support reading read-only switch, assuming write-enable
[    2.165087] mmc1: new high speed SDHC card at address b368
[    2.175094] mmcblk1: mmc1:b368 USD   3.76 GiB 
[    2.185791]  mmcblk1: p1 p2 p3
[    2.197619] Atheros 8031 ethernet 4a101000.mdio:01: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:01, irq=-1)
[    2.220602] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[   12.226416] Waiting up to 110 more seconds for network.
[   22.226401] Waiting up to 100 more seconds for network.
[   32.226407] Waiting up to 90 more seconds for network.
[   42.226400] Waiting up to 80 more seconds for network.
[   52.226405] Waiting up to 70 more seconds for network.
[   62.226410] Waiting up to 60 more seconds for network.
[   72.226398] Waiting up to 50 more seconds for network.
[   82.226397] Waiting up to 40 more seconds for network.
[   92.226399] Waiting up to 30 more seconds for network.
[  102.226399] Waiting up to 20 more seconds for network.
[  112.226397] Waiting up to 10 more seconds for network.
[  122.226405] Waiting up to 0 more seconds for network.
[  122.246491] Sending DHCP requests .
[  122.896738] random: nonblocking pool is initialized
[  124.636385] ..... timed out!
[  201.307537] IP-Config: Reopening network devices...
[  201.312743] net eth0: initializing cpsw version 1.12 (0)
[  201.397319] Atheros 8031 ethernet 4a101000.mdio:01: attached PHY driver [Atheros 8031 ethernet] (mii_bus:phy_addr=4a101000.mdio:01, irq=-1)
[  201.416186] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
- 07:46:24 [INFO] Boot attempt 1/1 failed
- 07:46:24 [INFO] Collecting kernel traces via sysrq...
- 07:46:34 [INFO] [  211.416410] Waiting up to 110 more seconds for network.
- 07:46:44 [INFO] [  221.416404] Waiting up to 100 more seconds for network.
- 07:46:55 [INFO] [  231.416401] Waiting up to 90 more seconds for network.
- 07:46:55 [INFO] Disconnected serial from am335x-sk
URL:gtsystest.telogy.design.ti.com/vatf/tigitfarm04/tigitfarm04_vatf@am335x-sk1/tigitfarm0405_19_2016_07_42_30/files/session_iteration_1/test_1
